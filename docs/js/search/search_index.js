var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.102,1,0.541]],["body/components/AppComponent.html",[0,0.188,1,0.965,2,0.794,3,0.654,4,1.34,5,1.34,6,1.34,7,0.529,8,2.33,9,1.34,10,2.121,11,2.147,12,2.429,13,1.707,14,3.784,15,1.707,16,3.784,17,0.654,18,1.44,19,4.383,20,2.028,21,0.654,22,0.067,23,0.794,24,0.794,25,0.951,26,2.971,27,0.794,28,0.654,29,0.654,30,0.794,31,0.951,32,1.44,33,1.707,34,1.707,35,1.977,36,1.34,37,1.011,38,1.34,39,0.654,40,1.34,41,0.654,42,1.131,43,1.34,44,0.654,45,1.34,46,0.654,47,1.131,48,1.34,49,0.051,50,0.051]],["title/modules/AppModule.html",[51,1.109,52,1.318]],["body/modules/AppModule.html",[0,0.167,1,1.044,2,0.636,3,0.524,7,0.423,22,0.068,27,1.266,28,0.524,29,0.719,30,0.636,31,0.762,39,0.98,41,0.98,42,0.906,44,0.957,46,0.999,47,0.906,49,0.044,50,0.044,51,1.474,52,2.586,53,1.275,54,2.925,55,2.925,56,2.097,57,1.866,58,1.866,59,1.866,60,2.562,61,1.866,62,1.528,63,2.38,64,3.267,65,2.562,66,1.528,67,3.267,68,2.38,69,2.097,70,1.866,71,2.38,72,3.267,73,2.38,74,1.528,75,2.38,76,3.267,77,1.866,78,3.267,79,3.267,80,3.267,81,3.267,82,3.267,83,3.267,84,3.267,85,3.267,86,3.267,87,3.267,88,3.267,89,1.528,90,2.38,91,1.528,92,2.38,93,2.38,94,2.38,95,1.528,96,2.38,97,3.149,98,1.528,99,1.866,100,2.38]],["title/components/CommunityAnalysisComponent.html",[0,0.102,39,0.541]],["body/components/CommunityAnalysisComponent.html",[0,0.14,1,0.307,2,0.588,3,0.307,4,0.63,5,0.63,6,0.63,7,0.248,9,0.63,10,1.69,11,1.614,13,0.993,15,0.993,17,0.307,18,0.838,21,0.919,22,0.068,23,1.115,24,1.115,25,1.424,27,0.588,28,0.307,29,0.307,30,0.373,31,0.447,32,0.838,33,1.396,34,0.993,35,1.396,36,0.63,37,0.728,38,0.63,39,0.681,40,0.63,41,0.307,42,0.531,43,0.63,44,0.307,45,0.63,46,0.307,47,0.531,48,0.63,49,0.037,50,0.042,95,0.896,99,1.726,101,1.094,102,1.413,103,1.75,104,2.201,105,2.201,106,3.094,107,3.578,108,3.578,109,3.094,110,3.578,111,3.578,112,3.578,113,3.578,114,3.578,115,3.578,116,3.578,117,3.578,118,3.094,119,0.993,120,1.987,121,1.987,122,0.531,123,0.896,124,1.037,125,2.201,126,0.531,127,0.531,128,0.748,129,1.395,130,0.993,131,1.18,132,1.395,133,1.395,134,2.007,135,2.201,136,1.395,137,3.546,138,1.395,139,1.395,140,1.395,141,1.395,142,1.395,143,1.395,144,1.395,145,1.395,146,1.395,147,1.395,148,0.896,149,0.63,150,0.896,151,1.094,152,1.094,153,1.395,154,2.201,155,1.395,156,1.395,157,1.395,158,1.094,159,3.368,160,3.133,161,1.094,162,1.395,163,3.368,164,1.395,165,1.395,166,1.395,167,2.427,168,1.395,169,1.726,170,1.395,171,1.395,172,3.094,173,0.896,174,1.395,175,2.201,176,1.395,177,1.395,178,1.395,179,1.413,180,2.201,181,1.726,182,2.201,183,1.726,184,2.201,185,2.201,186,2.201,187,2.201,188,3.578,189,3.578,190,3.578,191,2.201,192,2.201,193,4.09,194,2.201,195,3.882,196,2.201,197,2.201,198,2.201,199,1.726,200,2.201,201,2.201,202,2.201,203,2.201,204,1.726,205,2.201,206,1.395,207,1.395,208,1.395,209,1.395,210,1.395,211,1.395,212,1.395,213,1.395,214,1.395,215,1.395,216,1.395,217,1.395]],["title/components/FirstPageComponent.html",[0,0.102,41,0.541]],["body/components/FirstPageComponent.html",[0,0.149,1,0.351,2,0.793,3,0.351,4,0.719,5,0.719,6,0.719,7,0.284,9,0.719,10,1.775,11,1.705,13,1.101,15,1.101,17,0.351,18,0.929,21,0.538,22,0.068,23,0.426,24,0.426,25,1.259,27,0.793,28,0.351,29,0.653,30,0.793,31,0.51,32,0.929,33,1.101,34,1.101,35,1.831,36,0.719,37,1.112,38,0.719,39,0.351,40,0.719,41,0.732,42,1.583,43,0.719,44,0.351,45,0.719,46,0.351,47,0.607,48,0.719,49,0.057,50,0.033,91,2.606,98,1.568,102,1.568,103,1.905,119,1.101,120,2.134,121,2.427,122,0.607,123,1.024,124,1.129,126,1.129,127,1.129,128,0.854,130,1.976,131,1.308,134,1.338,148,1.024,149,0.719,150,1.024,151,1.25,173,1.024,218,3.182,219,1.25,220,2.441,221,2.441,222,3.324,223,2.441,224,2.441,225,2.967,226,3.324,227,2.441,228,2.441,229,1.594,230,2.441,231,2.441,232,1.594,233,1.594,234,1.594,235,1.594,236,1.568,237,2.964,238,2.301,239,2.967,240,1.25,241,1.594,242,1.594,243,1.594,244,1.594,245,1.594,246,1.594,247,1.594,248,1.594,249,3.934,250,1.594,251,1.594,252,1.594,253,1.594,254,1.594,255,1.594,256,1.594,257,1.594,258,1.594,259,1.594,260,1.594,261,1.594,262,1.594,263,1.594,264,1.594,265,1.594,266,1.594,267,1.594,268,1.594,269,1.594,270,1.594,271,1.594,272,1.594,273,1.594,274,1.594,275,1.594,276,1.594,277,1.594,278,1.594,279,1.594,280,1.594,281,1.594,282,1.594,283,1.594,284,1.594,285,1.594,286,1.594,287,3.324,288,2.441,289,2.967,290,3.324,291,2.526,292,1.594,293,2.607,294,1.594,295,1.594,296,1.594,297,1.594,298,1.594,299,1.594,300,1.594,301,1.594,302,1.594,303,2.967,304,2.441,305,3.324,306,1.594,307,1.594,308,1.594,309,1.594,310,1.594,311,1.594,312,1.594,313,1.594,314,1.594,315,1.594,316,1.594,317,1.594,318,1.915,319,2.441,320,3.324,321,2.441,322,2.441]],["title/components/MyNavComponent.html",[0,0.102,44,0.541]],["body/components/MyNavComponent.html",[0,0.181,1,0.574,2,0.696,3,0.574,4,1.176,5,1.176,6,1.176,7,0.464,9,1.176,10,2.056,11,1.88,13,1.567,15,1.567,17,0.574,18,1.322,21,0.765,22,0.067,23,0.696,24,0.696,25,1.112,27,1.044,28,0.574,29,0.86,30,0.696,31,0.834,32,1.322,33,1.567,34,1.567,35,1.88,36,1.176,37,1.044,38,1.176,39,0.574,40,1.176,41,0.574,42,0.992,43,1.176,44,0.918,45,1.176,46,0.574,47,1.487,48,1.176,49,0.047,50,0.047,74,2.509,77,2.043,98,2.23,122,0.992,126,0.992,127,0.992,149,1.176,179,2.23,291,2.23,323,3.064,324,2.043,325,3.474,326,3.474,327,3.474,328,4.167,329,2.606,330,4.465,331,3.474,332,4.167,333,3.474,334,2.606,335,2.606,336,2.043,337,4.167,338,3.474,339,3.474,340,2.724,341,2.724]],["title/injectables/ParseService.html",[342,0.936,343,1.318]],["body/injectables/ParseService.html",[2,0.572,3,0.471,7,0.381,12,1.374,17,0.471,18,1.154,20,2.513,21,0.844,22,0.068,23,0.942,24,0.942,25,1.383,27,0.942,28,0.471,29,0.471,30,0.572,37,0.942,49,0.041,50,0.041,119,1.368,122,1.341,126,0.814,127,0.814,130,2.055,131,1.147,160,2.378,236,2.699,342,1.341,343,1.625,344,1.678,345,4.492,346,3.006,347,3.006,348,3.006,349,4.203,350,2.763,351,4.203,352,3.833,353,3.033,354,2.14,355,2.441,356,2.598,357,2.14,358,3.033,359,3.033,360,2.262,361,2.378,362,2.14,363,3.523,364,2.14,365,1.678,366,3.033,367,3.463,368,4.555,369,3.006,370,1.947,371,2.378,372,2.378,373,3.033,374,2.14,375,3.033,376,3.033,377,2.14,378,2.14,379,1.678,380,2.14,381,2.14,382,2.14,383,2.14,384,2.14,385,2.14,386,2.14,387,2.14,388,2.14]],["title/injectables/QueryService.html",[124,0.936,342,0.936]],["body/injectables/QueryService.html",[2,0.356,3,0.293,7,0.237,12,0.855,17,0.293,20,2.436,21,0.664,22,0.068,23,0.356,24,0.356,25,1.178,27,0.567,28,0.293,29,0.293,30,1.166,37,1.166,49,0.054,50,0.028,95,1.698,119,0.957,122,0.507,124,0.807,126,1.498,127,1.253,128,2.162,130,2.159,137,2.751,149,0.601,158,2.074,173,2.252,236,2.59,237,3.456,238,2.968,240,2.751,293,1.045,342,1.006,343,1.417,350,3.086,355,2.28,360,2.527,365,2.074,367,2.751,369,2.751,370,1.698,379,1.045,389,1.045,390,2.122,391,2.122,392,2.122,393,4.034,394,3.507,395,2.122,396,1.332,397,1.332,398,2.122,399,4.119,400,3.679,401,3.015,402,1.332,403,3.936,404,1.332,405,2.122,406,2.122,407,2.122,408,3.164,409,2.122,410,3.507,411,2.122,412,2.644,413,1.332,414,2.122,415,1.332,416,2.122,417,1.332,418,3.015,419,1.332,420,3.507,421,2.122,422,2.122,423,1.332,424,3.819,425,2.122,426,1.332,427,1.332,428,1.332,429,2.644,430,2.644,431,2.644,432,3.507,433,1.88,434,2.644,435,2.644,436,2.074,437,1.332,438,2.644,439,1.332,440,1.332,441,2.122,442,2.644,443,2.644,444,2.644,445,2.644,446,1.332,447,2.644,448,2.644,449,1.332,450,2.644,451,1.332,452,2.122,453,1.332,454,1.664,455,1.332,456,2.122,457,1.332,458,1.332,459,1.332,460,1.332,461,1.332,462,1.332,463,1.332]],["title/components/SubmissionsComponent.html",[0,0.102,46,0.541]],["body/components/SubmissionsComponent.html",[0,0.166,1,0.457,2,0.555,3,0.457,4,0.937,5,0.937,6,0.937,7,0.37,9,0.937,10,1.933,11,1.878,13,1.34,15,1.34,17,0.457,18,1.13,20,2.144,21,0.917,22,0.068,23,0.794,24,0.794,25,1.428,27,0.926,28,0.457,29,0.457,30,0.555,31,0.665,32,1.13,33,1.34,34,1.34,35,1.805,36,0.937,37,1.171,38,0.937,39,0.457,40,0.937,41,0.457,42,1.319,43,0.937,44,0.457,45,0.937,46,0.833,47,1.319,48,0.937,49,0.04,50,0.04,89,1.334,102,1.907,103,2.225,119,1.34,120,2.429,121,2.429,122,0.79,123,1.334,124,1.319,126,1.13,127,1.13,128,1.113,130,1.706,131,1.591,134,0.937,148,1.334,149,0.937,150,1.334,152,1.629,318,2.329,433,1.113,464,1.629,465,2.97,466,2.97,467,3.782,468,3.782,469,3.782,470,4.001,471,4.001,472,2.97,473,2.97,474,2.077,475,2.077,476,2.077,477,2.077,478,2.077,479,2.077,480,2.077,481,2.97,482,2.97,483,2.97,484,2.97,485,2.077,486,3.782,487,2.97,488,3.466,489,2.077,490,3.782,491,2.077,492,2.077,493,2.077,494,2.077,495,2.077,496,2.077,497,2.077,498,2.077,499,2.077,500,2.077,501,2.97,502,2.97,503,2.97,504,2.97,505,2.97,506,2.97,507,2.97]],["title/coverage.html",[508,2.619]],["body/coverage.html",[0,0.191,1,0.688,7,0.556,8,2.451,21,0.688,22,0.066,39,0.688,41,0.688,44,0.688,46,0.688,49,0.052,50,0.052,74,2.006,91,2.006,101,2.451,124,1.189,134,2.215,218,2.451,219,2.451,323,2.451,324,2.451,342,1.486,343,1.675,344,2.451,356,2.508,389,2.451,433,1.675,464,2.451,508,2.451,509,3.125,510,3.125,511,3.125,512,3.125,513,3.125,514,3.125,515,4.261,516,3.125,517,2.451,518,2.392,519,4.464,520,2.451,521,3.063,522,2.451,523,2.451,524,3.125,525,3.125]],["title/dependencies.html",[53,1.582,526,2.061]],["body/dependencies.html",[22,0.068,28,0.712,49,0.054,50,0.054,53,1.733,65,3.129,66,2.562,70,2.536,89,2.076,97,2.536,336,2.536,355,1.733,527,3.234,528,4.908,529,3.234,530,3.234,531,3.234,532,3.234,533,3.99,534,3.234,535,2.536,536,3.234,537,3.234,538,3.234,539,3.234,540,3.234,541,3.234,542,2.536,543,3.234,544,3.234,545,3.234,546,3.234,547,3.234,548,2.536,549,3.234,550,3.234,551,3.234]],["title/index.html",[17,0.454,552,2.061,553,2.061]],["body/index.html",[0,0.184,3,0.748,7,0.448,22,0.046,32,0.959,37,0.673,49,0.046,50,0.046,56,2.18,62,2.18,161,1.975,179,1.617,181,1.975,183,1.975,199,1.975,204,2.663,291,2.466,340,2.663,341,3.543,355,2.058,360,2.18,361,1.975,370,1.617,371,1.975,372,1.975,408,1.975,433,1.35,436,1.975,454,2.663,518,1.35,535,2.663,542,1.975,548,1.975,554,2.519,555,3.841,556,3.841,557,2.519,558,3.395,559,4.111,560,2.519,561,2.519,562,3.395,563,2.519,564,3.841,565,2.519,566,2.519,567,2.519,568,2.519,569,2.519,570,2.519,571,2.519,572,2.519,573,2.519,574,2.519,575,2.519,576,2.519,577,2.519,578,2.519,579,2.519,580,4.421,581,2.519,582,2.519,583,2.519,584,4.111,585,2.519,586,2.519,587,2.519,588,2.519,589,2.519,590,4.111,591,2.519,592,2.519,593,2.519,594,2.519,595,2.519,596,2.519,597,2.519,598,3.395,599,1.975,600,2.519,601,2.519,602,4.111,603,4.291,604,2.519,605,2.519,606,2.519,607,3.395,608,2.519,609,3.395,610,2.519,611,2.519,612,2.519,613,3.395,614,2.519,615,2.519,616,3.395,617,3.395,618,2.519,619,2.519,620,2.519,621,2.519,622,2.519,623,2.519,624,2.519,625,2.519,626,2.519,627,2.519,628,2.519,629,2.519,630,2.519,631,3.841,632,2.519,633,2.519,634,2.519,635,2.519]],["title/modules.html",[51,1.507]],["body/modules.html",[22,0.059,49,0.059,50,0.059,51,1.738,52,2.065,66,2.474,636,3.853,637,3.853,638,3.853]],["title/overview.html",[639,2.619]],["body/overview.html",[0,0.137,1,1.058,22,0.065,29,0.724,31,1.052,39,0.96,41,0.96,44,0.96,46,0.96,49,0.054,50,0.054,51,1.818,52,2.671,53,1.761,54,2.577,55,2.577,56,2.11,57,2.577,58,2.577,59,2.577,60,3.16,61,2.577,62,2.11,134,1.483,167,2.577,169,2.577,342,1.251,639,2.577,640,3.286]],["title/routes.html",[69,2.145]],["body/routes.html",[22,0.06,49,0.06,50,0.06,69,2.514]],["title/miscellaneous/variables.html",[518,1.582,641,1.616]],["body/miscellaneous/variables.html",[17,0.716,21,0.955,22,0.067,23,1.159,24,1.159,49,0.054,50,0.054,238,2.906,346,3.139,347,3.139,348,3.139,356,3.039,517,2.55,518,1.742,520,2.55,521,2.55,522,3.401,523,3.401,599,3.139,641,2.55,642,4.003,643,3.251,644,3.251,645,3.251,646,4.003,647,3.251,648,3.251,649,3.251,650,3.251,651,3.251]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":134,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.12.7",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":167,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"overview.html":{}}}],["1000",{"_index":404,"title":{},"body":{"injectables/QueryService.html":{}}}],["11",{"_index":135,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["2",{"_index":169,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"overview.html":{}}}],["2.1.0",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["2.7.2",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["4.16.4",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":640,"title":{},"body":{"overview.html":{}}}],["500",{"_index":450,"title":{},"body":{"injectables/QueryService.html":{}}}],["6.0.0",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["6.0.2",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["6.1.10",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["6.2.5",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":312,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["access",{"_index":160,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/ParseService.html":{}}}],["actual_compon",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["analysi",{"_index":338,"title":{},"body":{"components/MyNavComponent.html":{}}}],["angular",{"_index":341,"title":{},"body":{"components/MyNavComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"components/MyNavComponent.html":{}}}],["angular/cli",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"components/SubmissionsComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["app.compon",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":556,"title":{},"body":{"index.html":{}}}],["applyfilt",{"_index":472,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["applyfilter(filtervalu",{"_index":474,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["appmodul",{"_index":52,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["arg",{"_index":230,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["args.columndelimit",{"_index":295,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["args.data",{"_index":292,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["args.filenam",{"_index":308,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["args.linedelimit",{"_index":296,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["array",{"_index":173,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"injectables/QueryService.html":{}}}],["array.length",{"_index":176,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["array.reduc",{"_index":174,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["arrayofmatchenvfil",{"_index":106,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["artifact",{"_index":595,"title":{},"body":{"index.html":{}}}],["async",{"_index":225,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["authent",{"_index":359,"title":{},"body":{"injectables/ParseService.html":{}}}],["author",{"_index":358,"title":{},"body":{"injectables/ParseService.html":{}}}],["averag",{"_index":172,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["await",{"_index":286,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["back4app",{"_index":382,"title":{},"body":{"injectables/ParseService.html":{}}}],["backend",{"_index":361,"title":{},"body":{"injectables/ParseService.html":{},"index.html":{}}}],["bad",{"_index":191,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["base",{"_index":408,"title":{},"body":{"injectables/QueryService.html":{},"index.html":{}}}],["below",{"_index":442,"title":{},"body":{"injectables/QueryService.html":{}}}],["bootstrap",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["breakpoint",{"_index":334,"title":{},"body":{"components/MyNavComponent.html":{}}}],["breakpointobserv",{"_index":330,"title":{},"body":{"components/MyNavComponent.html":{}}}],["breakpointst",{"_index":335,"title":{},"body":{"components/MyNavComponent.html":{}}}],["brought",{"_index":573,"title":{},"body":{"index.html":{}}}],["brows",{"_index":638,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":584,"title":{},"body":{"index.html":{}}}],["build:productioncod",{"_index":600,"title":{},"body":{"index.html":{}}}],["buildth",{"_index":594,"title":{},"body":{"index.html":{}}}],["button",{"_index":320,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["capabl",{"_index":572,"title":{},"body":{"index.html":{}}}],["cd",{"_index":588,"title":{},"body":{"index.html":{}}}],["check",{"_index":181,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"index.html":{}}}],["class",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{}}}],["cli",{"_index":535,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["clinic",{"_index":201,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["clinicaccess",{"_index":270,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["clone",{"_index":587,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":367,"title":{},"body":{"injectables/ParseService.html":{},"injectables/QueryService.html":{}}}],["cluster_appmodul",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["collect",{"_index":204,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"index.html":{}}}],["colum",{"_index":407,"title":{},"body":{"injectables/QueryService.html":{}}}],["column",{"_index":405,"title":{},"body":{"injectables/QueryService.html":{}}}],["columndelimit",{"_index":289,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["commun",{"_index":179,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/MyNavComponent.html":{},"index.html":{}}}],["communityanalysi",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{}}}],["communityanalysis'},{'nam",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["communityanalysis.component.css",{"_index":104,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["communityanalysis.component.html",{"_index":105,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["communityanalysiscompon",{"_index":39,"title":{"components/CommunityAnalysisComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["communitynam",{"_index":262,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["condit",{"_index":190,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["conditionoffloor",{"_index":276,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["conditionofroof",{"_index":278,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["console.log",{"_index":418,"title":{},"body":{"injectables/QueryService.html":{}}}],["console.log('initi",{"_index":381,"title":{},"body":{"injectables/ParseService.html":{}}}],["console.log(error",{"_index":449,"title":{},"body":{"injectables/QueryService.html":{}}}],["console.log(this.objectid",{"_index":285,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["const",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/QueryService.html":{}}}],["constructor",{"_index":122,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{}}}],["constructor(breakpointobserv",{"_index":329,"title":{},"body":{"components/MyNavComponent.html":{}}}],["constructor(pars",{"_index":396,"title":{},"body":{"injectables/QueryService.html":{}}}],["constructor(priv",{"_index":149,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{}}}],["constructor(queri",{"_index":123,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["containedqueri",{"_index":390,"title":{},"body":{"injectables/QueryService.html":{}}}],["containedquery(2000,surveydata,organization,puent",{"_index":409,"title":{},"body":{"injectables/QueryService.html":{}}}],["containedquery(limit",{"_index":398,"title":{},"body":{"injectables/QueryService.html":{}}}],["context",{"_index":522,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contribut",{"_index":621,"title":{},"body":{"index.html":{}}}],["convertarrayofobjectstocsv",{"_index":223,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["convertarrayofobjectstocsv(arg",{"_index":228,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["core",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["corpor",{"_index":569,"title":{},"body":{"index.html":{}}}],["correct",{"_index":609,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":508,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":370,"title":{},"body":{"injectables/ParseService.html":{},"injectables/QueryService.html":{},"index.html":{}}}],["createdat",{"_index":484,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["css",{"_index":575,"title":{},"body":{"index.html":{}}}],["csv",{"_index":305,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["csv.match(/^data:text\\/csv/i",{"_index":310,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["ctr",{"_index":287,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["data",{"_index":291,"title":{},"body":{"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"index.html":{}}}],["data.foreach(function(item",{"_index":300,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["data.length",{"_index":294,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["data:text/csv;charset=utf",{"_index":311,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["datacollector",{"_index":282,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["datalist",{"_index":467,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["datasourc",{"_index":468,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["debug",{"_index":593,"title":{},"body":{"index.html":{}}}],["declar",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decor",{"_index":487,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["default",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{}}}],["demo",{"_index":620,"title":{},"body":{"index.html":{}}}],["depend",{"_index":53,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":578,"title":{},"body":{"index.html":{}}}],["descript",{"_index":365,"title":{},"body":{"injectables/ParseService.html":{},"injectables/QueryService.html":{}}}],["design",{"_index":635,"title":{},"body":{"index.html":{}}}],["develop",{"_index":576,"title":{},"body":{"index.html":{}}}],["development/product",{"_index":618,"title":{},"body":{"index.html":{}}}],["dictstoexport",{"_index":222,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["direct",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":604,"title":{},"body":{"index.html":{}}}],["directive|service|etc",{"_index":611,"title":{},"body":{"index.html":{}}}],["directli",{"_index":629,"title":{},"body":{"index.html":{}}}],["directori",{"_index":598,"title":{},"body":{"index.html":{}}}],["dirt",{"_index":192,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["displayedcolumn",{"_index":469,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["dist",{"_index":597,"title":{},"body":{"index.html":{}}}],["dob",{"_index":254,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["document",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["document.createelement('a",{"_index":314,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["downloadcsv",{"_index":224,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["downloadcsv(arg",{"_index":231,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["dynam",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["educationlevel",{"_index":258,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["element",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["encodeuri(csv",{"_index":313,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["end",{"_index":372,"title":{},"body":{"injectables/ParseService.html":{},"index.html":{}}}],["environ",{"_index":356,"title":{},"body":{"injectables/ParseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment",{"_index":183,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"index.html":{}}}],["environment.parseappid",{"_index":373,"title":{},"body":{"injectables/ParseService.html":{}}}],["environment.parsejavascriptkey",{"_index":375,"title":{},"body":{"injectables/ParseService.html":{}}}],["environment.parseserverurl",{"_index":376,"title":{},"body":{"injectables/ParseService.html":{}}}],["environmentalhealthresult",{"_index":245,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('communitynam",{"_index":263,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('dob",{"_index":255,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('educationlevel",{"_index":259,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('fnam",{"_index":251,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('lnam",{"_index":253,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('occup",{"_index":261,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('sex",{"_index":257,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('surveyingorgan",{"_index":281,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('surveyingus",{"_index":283,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('clinicaccess",{"_index":271,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('conditionofloorinyourhous",{"_index":277,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('conditionoroofinyourhous",{"_index":279,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('latrineaccess",{"_index":265,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('timesperweektrashcollect",{"_index":273,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('typeofwaterdoyoudrink",{"_index":269,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('wateraccess",{"_index":267,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('wheretrashleftbetweenpickup",{"_index":275,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["environments/environment.prod",{"_index":378,"title":{},"body":{"injectables/ParseService.html":{}}}],["error",{"_index":432,"title":{},"body":{"injectables/QueryService.html":{}}}],["exactlyonequeri",{"_index":391,"title":{},"body":{"injectables/QueryService.html":{}}}],["exactlyonequery(parseobject",{"_index":411,"title":{},"body":{"injectables/QueryService.html":{}}}],["exampl",{"_index":236,"title":{},"body":{"components/FirstPageComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{}}}],["export",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{},"overview.html":{}}}],["export.csv",{"_index":309,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["express",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["fals",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["filenam",{"_index":303,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["filtervalu",{"_index":476,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["first",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["firstnam",{"_index":250,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["firstpagecompon",{"_index":41,"title":{"components/FirstPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["floor",{"_index":189,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["fname",{"_index":481,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["folder",{"_index":613,"title":{},"body":{"index.html":{}}}],["for(let",{"_index":153,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["form",{"_index":185,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["framework",{"_index":563,"title":{},"body":{"index.html":{}}}],["friendli",{"_index":574,"title":{},"body":{"index.html":{}}}],["front",{"_index":371,"title":{},"body":{"injectables/ParseService.html":{},"index.html":{}}}],["function",{"_index":368,"title":{},"body":{"injectables/ParseService.html":{}}}],["functionnam",{"_index":366,"title":{},"body":{"injectables/ParseService.html":{}}}],["functionrequest",{"_index":363,"title":{},"body":{"injectables/ParseService.html":{}}}],["functionrequest:ani",{"_index":387,"title":{},"body":{"injectables/ParseService.html":{}}}],["further",{"_index":630,"title":{},"body":{"index.html":{}}}],["gener",{"_index":603,"title":{},"body":{"index.html":{}}}],["genericqueri",{"_index":392,"title":{},"body":{"injectables/QueryService.html":{}}}],["genericquery(parseobject",{"_index":414,"title":{},"body":{"injectables/QueryService.html":{}}}],["genericquery(surveydata",{"_index":416,"title":{},"body":{"injectables/QueryService.html":{}}}],["get",{"_index":552,"title":{"index.html":{}},"body":{}}],["getallobject",{"_index":226,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["git",{"_index":586,"title":{},"body":{"index.html":{}}}],["github",{"_index":583,"title":{},"body":{"index.html":{}}}],["go",{"_index":632,"title":{},"body":{"index.html":{}}}],["googl",{"_index":567,"title":{},"body":{"index.html":{}}}],["hello",{"_index":393,"title":{},"body":{"injectables/QueryService.html":{}}}],["help",{"_index":631,"title":{},"body":{"index.html":{}}}],["histori",{"_index":184,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["html",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{},"index.html":{}}}],["https://parseapi.back4app.com",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i0",{"_index":162,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["i=0",{"_index":154,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["id",{"_index":180,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["identifi",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":102,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["import",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{}}}],["improv",{"_index":625,"title":{},"body":{"index.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{},"miscellaneous/variables.html":{}}}],["individu",{"_index":568,"title":{},"body":{"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{}}}],["infrastructur",{"_index":579,"title":{},"body":{"index.html":{}}}],["inject",{"_index":342,"title":{"injectables/ParseService.html":{},"injectables/QueryService.html":{}},"body":{"injectables/ParseService.html":{},"injectables/QueryService.html":{},"coverage.html":{},"overview.html":{}}}],["insid",{"_index":614,"title":{},"body":{"index.html":{}}}],["instal",{"_index":585,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":591,"title":{},"body":{"index.html":{}}}],["ionic",{"_index":561,"title":{},"body":{"index.html":{}}}],["ishandset",{"_index":328,"title":{},"body":{"components/MyNavComponent.html":{}}}],["issu",{"_index":616,"title":{},"body":{"index.html":{}}}],["item[key",{"_index":302,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["jfwiqlinrhxih72j9kiotl8m0eusdry1yfiiylad",{"_index":649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":542,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["key",{"_index":288,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["keys.foreach(function(key",{"_index":301,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["keys.join(columndelimit",{"_index":299,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["known",{"_index":615,"title":{},"body":{"index.html":{}}}],["last",{"_index":318,"title":{},"body":{"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["lastnam",{"_index":252,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["latrin",{"_index":159,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["latrineaccess",{"_index":264,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["latrineaccessno",{"_index":107,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["latrineaccessy",{"_index":108,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["layoutmodul",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["led",{"_index":565,"title":{},"body":{"index.html":{}}}],["legend",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{},"overview.html":{}}}],["limit",{"_index":403,"title":{},"body":{"injectables/QueryService.html":{}}}],["linedelimit",{"_index":290,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["link",{"_index":304,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["link.click",{"_index":317,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["link.setattribute('download",{"_index":316,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["link.setattribute('href",{"_index":315,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["list",{"_index":237,"title":{},"body":{"components/FirstPageComponent.html":{},"injectables/QueryService.html":{}}}],["listallpati",{"_index":394,"title":{},"body":{"injectables/QueryService.html":{}}}],["listofallid",{"_index":109,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["listpatientsbyorgan",{"_index":395,"title":{},"body":{"injectables/QueryService.html":{}}}],["listpatientsbyorganization(organ",{"_index":422,"title":{},"body":{"injectables/QueryService.html":{}}}],["listpatientsbyorganization(puent",{"_index":425,"title":{},"body":{"injectables/QueryService.html":{}}}],["lname",{"_index":482,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["local",{"_index":436,"title":{},"body":{"injectables/QueryService.html":{},"index.html":{}}}],["locat",{"_index":610,"title":{},"body":{"index.html":{}}}],["look",{"_index":605,"title":{},"body":{"index.html":{}}}],["manag",{"_index":560,"title":{},"body":{"index.html":{}}}],["matbuttonmodul",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodul",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":634,"title":{},"body":{"index.html":{}}}],["matformfieldmodul",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodul",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodul",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodul",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["matpagin",{"_index":486,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["matpaginatormodul",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodul",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["matsort",{"_index":490,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["matsortmodul",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabledatasourc",{"_index":491,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["mattabledatasource(this.datalist",{"_index":496,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["mattablemodul",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodul",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["meant",{"_index":557,"title":{},"body":{"index.html":{}}}],["menu",{"_index":337,"title":{},"body":{"components/MyNavComponent.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["method",{"_index":119,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{}}}],["migrat",{"_index":161,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"index.html":{}}}],["miscellan",{"_index":641,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mobil",{"_index":562,"title":{},"body":{"index.html":{}}}],["modul",{"_index":51,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":619,"title":{},"body":{"index.html":{}}}],["more",{"_index":199,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"index.html":{}}}],["mynavcompon",{"_index":44,"title":{"components/MyNavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["n",{"_index":297,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["name",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{},"index.html":{}}}],["nav",{"_index":325,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav'},{'nam",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["nav.compon",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["nav.component.css",{"_index":326,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.html",{"_index":327,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.t",{"_index":324,"title":{},"body":{"components/MyNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:11",{"_index":331,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav/mi",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"components/MyNavComponent.html":{},"coverage.html":{}}}],["need",{"_index":617,"title":{},"body":{"index.html":{}}}],["new",{"_index":433,"title":{},"body":{"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":602,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":120,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["node.j",{"_index":581,"title":{},"body":{"index.html":{}}}],["npm",{"_index":590,"title":{},"body":{"index.html":{}}}],["null",{"_index":293,"title":{},"body":{"components/FirstPageComponent.html":{},"injectables/QueryService.html":{}}}],["number",{"_index":137,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/QueryService.html":{}}}],["number=1000",{"_index":451,"title":{},"body":{"injectables/QueryService.html":{}}}],["numberofid",{"_index":110,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["numberofmatchingid",{"_index":111,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["object",{"_index":238,"title":{},"body":{"components/FirstPageComponent.html":{},"injectables/QueryService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(data[0",{"_index":298,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["objekt",{"_index":437,"title":{},"body":{"injectables/QueryService.html":{}}}],["observ",{"_index":332,"title":{},"body":{"components/MyNavComponent.html":{}}}],["occup",{"_index":260,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["onc",{"_index":196,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["oninit",{"_index":103,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["open",{"_index":564,"title":{},"body":{"index.html":{}}}],["option",{"_index":127,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{}}}],["order",{"_index":608,"title":{},"body":{"index.html":{}}}],["organ",{"_index":424,"title":{},"body":{"injectables/QueryService.html":{}}}],["organizationwhoownsdata",{"_index":280,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["out",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":639,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":526,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{}}}],["page'},{'nam",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["page.compon",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["page.component.css",{"_index":220,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.html",{"_index":221,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.t",{"_index":219,"title":{},"body":{"components/FirstPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:104",{"_index":232,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.ts:12",{"_index":227,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.ts:18",{"_index":234,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.ts:28",{"_index":235,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.ts:69",{"_index":233,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.ts:73",{"_index":229,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page/first",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"components/FirstPageComponent.html":{},"coverage.html":{}}}],["pages/communityanalysis/communityanalysis.compon",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/first",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/submissions/submissions.compon",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["pagin",{"_index":470,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["param",{"_index":369,"title":{},"body":{"injectables/ParseService.html":{},"injectables/QueryService.html":{}}}],["paramet",{"_index":126,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{}}}],["pars",{"_index":355,"title":{},"body":{"injectables/ParseService.html":{},"injectables/QueryService.html":{},"dependencies.html":{},"index.html":{}}}],["parse.cloud.run(functionname,functionrequest",{"_index":388,"title":{},"body":{"injectables/ParseService.html":{}}}],["parse.initialize(this.parseappid,this.parsejavascriptkey",{"_index":383,"title":{},"body":{"injectables/ParseService.html":{}}}],["parse.object.extend(parseobject",{"_index":438,"title":{},"body":{"injectables/QueryService.html":{}}}],["parse.query(objekt",{"_index":439,"title":{},"body":{"injectables/QueryService.html":{}}}],["parse.query(surveydata",{"_index":452,"title":{},"body":{"injectables/QueryService.html":{}}}],["parse.serverurl",{"_index":384,"title":{},"body":{"injectables/ParseService.html":{}}}],["parse/parse.servic",{"_index":426,"title":{},"body":{"injectables/QueryService.html":{}}}],["parse:parseservic",{"_index":427,"title":{},"body":{"injectables/QueryService.html":{}}}],["parseappid",{"_index":346,"title":{},"body":{"injectables/ParseService.html":{},"miscellaneous/variables.html":{}}}],["parsecolumn",{"_index":400,"title":{},"body":{"injectables/QueryService.html":{}}}],["parseenviron",{"_index":349,"title":{},"body":{"injectables/ParseService.html":{}}}],["parseiniti",{"_index":351,"title":{},"body":{"injectables/ParseService.html":{}}}],["parsejavascriptkey",{"_index":347,"title":{},"body":{"injectables/ParseService.html":{},"miscellaneous/variables.html":{}}}],["parseobject",{"_index":399,"title":{},"body":{"injectables/QueryService.html":{}}}],["parseparamvalu",{"_index":412,"title":{},"body":{"injectables/QueryService.html":{}}}],["parseparamvaluesarray",{"_index":401,"title":{},"body":{"injectables/QueryService.html":{}}}],["parseserverurl",{"_index":348,"title":{},"body":{"injectables/ParseService.html":{},"miscellaneous/variables.html":{}}}],["parseservic",{"_index":343,"title":{"injectables/ParseService.html":{}},"body":{"injectables/ParseService.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["path",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["patient",{"_index":249,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["patientdemographicsclass",{"_index":421,"title":{},"body":{"injectables/QueryService.html":{}}}],["per",{"_index":194,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["platform",{"_index":558,"title":{},"body":{"index.html":{}}}],["poor",{"_index":187,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["poorfloorcondit",{"_index":112,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["poorroofcondit",{"_index":113,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["power",{"_index":571,"title":{},"body":{"index.html":{}}}],["privat",{"_index":345,"title":{},"body":{"injectables/ParseService.html":{}}}],["product",{"_index":599,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":607,"title":{},"body":{"index.html":{}}}],["promis",{"_index":410,"title":{},"body":{"injectables/QueryService.html":{}}}],["promise((resolv",{"_index":434,"title":{},"body":{"injectables/QueryService.html":{}}}],["properti",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"components/SubmissionsComponent.html":{}}}],["provid",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["providedin",{"_index":379,"title":{},"body":{"injectables/ParseService.html":{},"injectables/QueryService.html":{}}}],["providers/componentname/componentnamethi",{"_index":612,"title":{},"body":{"index.html":{}}}],["providers/query/query.servic",{"_index":148,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["public",{"_index":350,"title":{},"body":{"injectables/ParseService.html":{},"injectables/QueryService.html":{}}}],["puent",{"_index":340,"title":{},"body":{"components/MyNavComponent.html":{},"index.html":{}}}],["pull",{"_index":623,"title":{},"body":{"index.html":{}}}],["push",{"_index":239,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["q",{"_index":241,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["queri",{"_index":128,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{}}}],["query.containedin(parsecolumn,parseparamvaluesarray",{"_index":441,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.equalto(parsecolumn",{"_index":460,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.equalto(parsecolumn,parseparam",{"_index":453,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.equalto(parsecolumn,parseparamvalu",{"_index":440,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.find().then((surveypoint",{"_index":456,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.first().then((surveypoint",{"_index":446,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.limit(50",{"_index":457,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.limit(limit",{"_index":455,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.notequalto(\"surveyingorgan",{"_index":458,"title":{},"body":{"injectables/QueryService.html":{}}}],["query:queryservic",{"_index":150,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["queryservic",{"_index":124,"title":{"injectables/QueryService.html":{}},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{}}}],["reach",{"_index":628,"title":{},"body":{"index.html":{}}}],["readm",{"_index":633,"title":{},"body":{"index.html":{}}}],["record",{"_index":182,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["reject",{"_index":240,"title":{},"body":{"components/FirstPageComponent.html":{},"injectables/QueryService.html":{}}}],["reject(environmentalhealthresult",{"_index":247,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["reject(error",{"_index":448,"title":{},"body":{"injectables/QueryService.html":{}}}],["report",{"_index":622,"title":{},"body":{"index.html":{}}}],["repositori",{"_index":582,"title":{},"body":{"index.html":{}}}],["request",{"_index":624,"title":{},"body":{"index.html":{}}}],["requir",{"_index":523,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolv",{"_index":430,"title":{},"body":{"injectables/QueryService.html":{}}}],["resolve(surveypoint",{"_index":447,"title":{},"body":{"injectables/QueryService.html":{}}}],["result",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.length",{"_index":157,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["retriev",{"_index":158,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/QueryService.html":{}}}],["return",{"_index":130,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{}}}],["roof",{"_index":188,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{}}}],["root'},{'nam",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["rout",{"_index":69,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"routes.html":{}}}],["routermodul",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":580,"title":{},"body":{"index.html":{}}}],["runcloudfunct",{"_index":352,"title":{},"body":{"injectables/ParseService.html":{}}}],["runcloudfunction(functionnam",{"_index":362,"title":{},"body":{"injectables/ParseService.html":{}}}],["runcloudfunction(functionname:str",{"_index":386,"title":{},"body":{"injectables/ParseService.html":{}}}],["rxj",{"_index":336,"title":{},"body":{"components/MyNavComponent.html":{},"dependencies.html":{}}}],["scaffold",{"_index":601,"title":{},"body":{"index.html":{}}}],["search",{"_index":443,"title":{},"body":{"injectables/QueryService.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["server",{"_index":360,"title":{},"body":{"injectables/ParseService.html":{},"injectables/QueryService.html":{},"index.html":{}}}],["set",{"_index":454,"title":{},"body":{"injectables/QueryService.html":{},"index.html":{}}}],["settimeout",{"_index":435,"title":{},"body":{"injectables/QueryService.html":{}}}],["setup",{"_index":121,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["sex",{"_index":256,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["someth",{"_index":321,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["sort",{"_index":471,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{},"index.html":{}}}],["spec\\.t",{"_index":647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spread",{"_index":626,"title":{},"body":{"index.html":{}}}],["src/.../environment.prod.t",{"_index":643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/mi",{"_index":323,"title":{},"body":{"components/MyNavComponent.html":{},"coverage.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.t",{"_index":101,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"coverage.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:12",{"_index":139,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:13",{"_index":133,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:14",{"_index":140,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:15",{"_index":141,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:17",{"_index":138,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:18",{"_index":136,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:20",{"_index":142,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:21",{"_index":143,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:23",{"_index":147,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:24",{"_index":146,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:25",{"_index":144,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:26",{"_index":145,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:27",{"_index":125,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:33",{"_index":129,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:36",{"_index":132,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/first",{"_index":218,"title":{},"body":{"components/FirstPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/submissions/submissions.component.t",{"_index":464,"title":{},"body":{"components/SubmissionsComponent.html":{},"coverage.html":{}}}],["src/app/pages/submissions/submissions.component.ts:13",{"_index":480,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:14",{"_index":479,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:15",{"_index":485,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:21",{"_index":489,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:26",{"_index":473,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:36",{"_index":477,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:39",{"_index":478,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:54",{"_index":475,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/providers/parse/parse.service.t",{"_index":344,"title":{},"body":{"injectables/ParseService.html":{},"coverage.html":{}}}],["src/app/providers/parse/parse.service.ts:10",{"_index":374,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/providers/parse/parse.service.ts:11",{"_index":377,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/providers/parse/parse.service.ts:12",{"_index":353,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/providers/parse/parse.service.ts:26",{"_index":354,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/providers/parse/parse.service.ts:37",{"_index":357,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/providers/parse/parse.service.ts:54",{"_index":364,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/providers/query/query.service.t",{"_index":389,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["src/app/providers/query/query.service.ts:134",{"_index":417,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/providers/query/query.service.ts:14",{"_index":413,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/providers/query/query.service.ts:145",{"_index":419,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/providers/query/query.service.ts:157",{"_index":423,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/providers/query/query.service.ts:56",{"_index":402,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/providers/query/query.service.ts:7",{"_index":397,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/providers/query/query.service.ts:95",{"_index":415,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/environments/environment.prod.t",{"_index":517,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":520,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":521,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":554,"title":{},"body":{"index.html":{}}}],["start",{"_index":553,"title":{"index.html":{}},"body":{}}],["start:localbuild",{"_index":592,"title":{},"body":{"index.html":{}}}],["statement",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":596,"title":{},"body":{"index.html":{}}}],["string",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{}}}],["structur",{"_index":606,"title":{},"body":{"index.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["submiss",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["submissions.component.css",{"_index":465,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["submissions.component.html",{"_index":466,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["submissionscompon",{"_index":46,"title":{"components/SubmissionsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sum",{"_index":175,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["support",{"_index":636,"title":{},"body":{"modules.html":{}}}],["survey",{"_index":503,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["surveydata",{"_index":420,"title":{},"body":{"injectables/QueryService.html":{}}}],["surveyingus",{"_index":483,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["surveypoint",{"_index":445,"title":{},"body":{"injectables/QueryService.html":{}}}],["svg",{"_index":637,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["team",{"_index":566,"title":{},"body":{"index.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["test",{"_index":459,"title":{},"body":{"injectables/QueryService.html":{}}}],["there'",{"_index":431,"title":{},"body":{"injectables/QueryService.html":{}}}],["third",{"_index":339,"title":{},"body":{"components/MyNavComponent.html":{}}}],["this.arrayofmatchenvfil",{"_index":155,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.arrayofmatchenvfiles[i].get('timesperweektrashcollect",{"_index":164,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset",{"_index":333,"title":{},"body":{"components/MyNavComponent.html":{}}}],["this.convertarrayofobjectstocsv",{"_index":306,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.datasourc",{"_index":495,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["this.datasource.pagin",{"_index":497,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["this.datasource.sort",{"_index":499,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["this.dictstoexport",{"_index":307,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.dictstoexport.push",{"_index":248,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.getallobject",{"_index":242,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.numberofmatchingid",{"_index":156,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.objectids.push(data",{"_index":284,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.pagin",{"_index":498,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["this.parse.parseenviron",{"_index":429,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.parse.parseiniti",{"_index":428,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.parse.runcloudfunction(\"hello\",nul",{"_index":461,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.parse.runcloudfunction(\"retrievepatientrecordbyorgn",{"_index":463,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.parse.runcloudfunction(\"retrievepatientrecordsal",{"_index":462,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.parseiniti",{"_index":380,"title":{},"body":{"injectables/ParseService.html":{}}}],["this.parseserverurl",{"_index":385,"title":{},"body":{"injectables/ParseService.html":{}}}],["this.query.genericquery('surveydata').then((patientresult",{"_index":243,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.query.listallpatients().then((result",{"_index":152,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/SubmissionsComponent.html":{}}}],["this.setup",{"_index":151,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{}}}],["this.setup().then",{"_index":494,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["this.sort",{"_index":500,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["this.trash1aweek",{"_index":168,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.trash2aweek",{"_index":170,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.trash3omor",{"_index":171,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.trashaverag",{"_index":177,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.trashperweek",{"_index":178,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.trashperweek.push(trashnumb",{"_index":165,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this_proj",{"_index":589,"title":{},"body":{"index.html":{}}}],["those",{"_index":570,"title":{},"body":{"index.html":{}}}],["thrice",{"_index":198,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["time",{"_index":506,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["times/week",{"_index":203,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["titl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["total",{"_index":166,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trash",{"_index":193,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trash1aweek",{"_index":114,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trash2aweek",{"_index":115,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trash3omor",{"_index":116,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trashaverag",{"_index":117,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trashloc",{"_index":274,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["trashnumb",{"_index":163,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trashperweek",{"_index":118,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trashpickupfrequ",{"_index":272,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["true",{"_index":646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twice",{"_index":197,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["type",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":244,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["typeofwaterdrank",{"_index":268,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["typescript",{"_index":548,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["undefin",{"_index":246,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["us",{"_index":559,"title":{},"body":{"index.html":{}}}],["user",{"_index":504,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["user.createdat",{"_index":507,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["user.fnam",{"_index":501,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["user.get('clinicaccess",{"_index":209,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get('conditionofloorinyourhous",{"_index":207,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get('conditionoroofinyourhous",{"_index":208,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get('latrineaccess",{"_index":206,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get('timesperweektrashcollect",{"_index":211,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get('wateraccess",{"_index":210,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get(\\'clinicaccess",{"_index":215,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get(\\'conditionofloorinyourhous",{"_index":213,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get(\\'conditionoroofinyourhous",{"_index":214,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get(\\'latrineaccess",{"_index":212,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get(\\'timesperweektrashcollect",{"_index":217,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get(\\'wateraccess",{"_index":216,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.id",{"_index":205,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.lnam",{"_index":502,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["user.surveyingus",{"_index":505,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["userid",{"_index":200,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["valu",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["variabl",{"_index":518,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["vbdthqqu31iylw5uyrdiwb8ew8zczgbzmqchugjr",{"_index":648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":577,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":488,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["viewchild(matpagin",{"_index":492,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["viewchild(matsort",{"_index":493,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["void",{"_index":131,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"injectables/ParseService.html":{},"components/SubmissionsComponent.html":{}}}],["water",{"_index":202,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["wateraccess",{"_index":266,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["web",{"_index":555,"title":{},"body":{"index.html":{}}}],["week",{"_index":195,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["weird",{"_index":322,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["what'",{"_index":444,"title":{},"body":{"injectables/QueryService.html":{}}}],["within",{"_index":406,"title":{},"body":{"injectables/QueryService.html":{}}}],["word",{"_index":627,"title":{},"body":{"index.html":{}}}],["ye",{"_index":186,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["ze",{"_index":319,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["zone.j",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommunityAnalysisComponent\n\nCommunityAnalysisComponent\n\nAppModule -->\n\nCommunityAnalysisComponent->AppModule\n\n\n\n\n\nFirstPageComponent\n\nFirstPageComponent\n\nAppModule -->\n\nFirstPageComponent->AppModule\n\n\n\n\n\nMyNavComponent\n\nMyNavComponent\n\nAppModule -->\n\nMyNavComponent->AppModule\n\n\n\n\n\nSubmissionsComponent\n\nSubmissionsComponent\n\nAppModule -->\n\nSubmissionsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                CommunityAnalysisComponent\n                            \n                            \n                                FirstPageComponent\n                            \n                            \n                                MyNavComponent\n                            \n                            \n                                SubmissionsComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MyNavComponent } from './my-nav/my-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, MatCardModule, MatTableModule, MatPaginatorModule, MatSortModule, MatFormFieldModule, MatInputModule} from '@angular/material';\nimport { FirstPageComponent } from './pages/first-page/first-page.component';\nimport { CommunityAnalysisComponent } from './pages/communityAnalysis/communityAnalysis.component';\nimport { SubmissionsComponent } from './pages/submissions/submissions.component';\n\nconst appRoutes: Routes = [\n  { path: '', component: SubmissionsComponent},\n  { path: 'submissions', component: SubmissionsComponent},\n  { path: 'first-page', component: FirstPageComponent},\n  { path: 'communityAnalysis', component: CommunityAnalysisComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MyNavComponent,\n    FirstPageComponent,\n    CommunityAnalysisComponent,\n    SubmissionsComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(appRoutes),\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommunityAnalysisComponent.html":{"url":"components/CommunityAnalysisComponent.html","title":"component - CommunityAnalysisComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CommunityAnalysisComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/communityAnalysis/communityAnalysis.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-communityAnalysis\n            \n\n            \n                styleUrls\n                communityAnalysis.component.css\n            \n\n\n\n            \n                templateUrl\n                ./communityAnalysis.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arrayOfMatchEnvFiles\n                            \n                            \n                                latrineAccessNo\n                            \n                            \n                                latrineAccessYes\n                            \n                            \n                                listOfAllIDs\n                            \n                            \n                                numberOfIds\n                            \n                            \n                                numberofMatchingIds\n                            \n                            \n                                poorFloorCondition\n                            \n                            \n                                poorRoofCondition\n                            \n                            \n                                trash1aweek\n                            \n                            \n                                trash2aweek\n                            \n                            \n                                trash3omore\n                            \n                            \n                                trashAverage\n                            \n                            \n                                trashPerWeek\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(query: QueryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                    QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrayOfMatchEnvFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        arrayOfMatchEnvFiles:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latrineAccessNo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        latrineAccessNo:     \n\n                    \n                \n                    \n                        \n                            Default value : 0 + 11\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latrineAccessYes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        latrineAccessYes:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listOfAllIDs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        listOfAllIDs:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberOfIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numberOfIds:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberofMatchingIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numberofMatchingIds:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            poorFloorCondition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        poorFloorCondition:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            poorRoofCondition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        poorRoofCondition:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trash1aweek\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trash1aweek:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trash2aweek\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trash2aweek:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trash3omore\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trash3omore:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trashAverage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trashAverage:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trashPerWeek\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trashPerWeek:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { QueryService } from '../../providers/query/query.service';\n\n@Component({\n  selector: 'app-communityAnalysis',\n  templateUrl: './communityAnalysis.component.html',\n  styleUrls: ['./communityAnalysis.component.css']\n})\nexport class CommunityAnalysisComponent implements OnInit {\n\n  listOfAllIDs = [];\n  arrayOfMatchEnvFiles = [];\n  numberOfIds = 0;\n  numberofMatchingIds;\n\n  latrineAccessYes = 0;\n  latrineAccessNo = 0 + 11;\n\n  poorFloorCondition = 0;\n  poorRoofCondition = 0;\n\n  trashPerWeek = [];\n  trashAverage;\n  trash1aweek = 0;\n  trash2aweek = 0;\n  trash3omore = 0;\n\n  constructor(private query:QueryService) { \n    this.setup();\n  }\n\n  ngOnInit() {\n  }\n\n  setup() {\n    this.query.listAllPatients().then((results)=>{\n      for(let i=0; i{\n        this.arrayOfMatchEnvFiles = results;\n        this.numberofMatchingIds = results.length;\n\n        //Retrieve Latrine Access info from migration\n        for (let i=0; i0) {\n            let trashNumber = this.arrayOfMatchEnvFiles[i].get('timesperweektrashcollected');\n            this.trashPerWeek.push(trashNumber);\n            //total += trashNumber;\n            \n            if (trashNumber == 1){\n              this.trash1aweek +=1;\n            }\n\n            else if (trashNumber == 2){\n              this.trash2aweek +=1;\n            }\n\n            else if (trashNumber > 2){\n              this.trash3omore +=1;\n            }\n\n          }\n\n          \n        }\n        \n        const average = array => array.reduce( ( sum, element ) => sum + element) / array.length;\n    \n        this.trashAverage = average( this.trashPerWeek );\n    \n      })\n\n\n    })\n      \n    \n  }\n\n}\n\n    \n\n    \n        \n\n  Number of Community IDs Checked: {{ numberOfIds }}\n\n\n\n    Number of Matching Records in Environmental History Form: {{ numberofMatchingIds }}\n\n\n\n\n  \n  \n    Latrine Access\n    \n      Yes\n      No\n    \n  \n  \n    \n      {{latrineAccessYes}}\n      {{latrineAccessNo}}\n    \n  \n\n  \n  \n    Poor Roof and Floor Conditions\n    \n      Bad Roof\n      Dirt Floor\n    \n  \n  \n    \n      {{poorRoofCondition}}\n      {{poorFloorCondition}}\n    \n  \n\n\n\n  \n    \n      Average Trash Per week\n      Trash Once a Week\n      Trash Twice a week\n      Trash Thrice or More a week\n    \n\n  \n  \n    \n      {{trashAverage}}\n      {{trash1aweek}}\n      {{trash2aweek}}\n      {{trash3omore}}\n    \n  \n\n\n\n  \n    UserID\n    Latrine Access\n    Floor Condition\n    Roof Condition\n    Clinic Access\n    Water Access\n    Times/Week Trash Collected\n    \n  \n  \n    {{ user.id }} \n    {{ user.get('latrineAccess') }} \n    {{ user.get('conditionoFloorinyourhouse') }} \n    {{ user.get('conditionoRoofinyourhouse') }} \n    {{ user.get('clinicAccess') }} \n    {{ user.get('waterAccess') }} \n    {{ user.get('timesperweektrashcollected') }} \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Number of Community IDs Checked: {{ numberOfIds }}    Number of Matching Records in Environmental History Form: {{ numberofMatchingIds }}        Latrine Access          Yes      No                  {{latrineAccessYes}}      {{latrineAccessNo}}              Poor Roof and Floor Conditions          Bad Roof      Dirt Floor                  {{poorRoofCondition}}      {{poorFloorCondition}}                  Average Trash Per week      Trash Once a Week      Trash Twice a week      Trash Thrice or More a week                  {{trashAverage}}      {{trash1aweek}}      {{trash2aweek}}      {{trash3omore}}            UserID    Latrine Access    Floor Condition    Roof Condition    Clinic Access    Water Access    Times/Week Trash Collected            {{ user.id }}     {{ user.get(\\'latrineAccess\\') }}     {{ user.get(\\'conditionoFloorinyourhouse\\') }}     {{ user.get(\\'conditionoRoofinyourhouse\\') }}     {{ user.get(\\'clinicAccess\\') }}     {{ user.get(\\'waterAccess\\') }}     {{ user.get(\\'timesperweektrashcollected\\') }}   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CommunityAnalysisComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FirstPageComponent.html":{"url":"components/FirstPageComponent.html","title":"component - FirstPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FirstPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/first-page/first-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-first-page\n            \n\n            \n                styleUrls\n                first-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./first-page.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dictsToExport\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertArrayOfObjectsToCSV\n                            \n                            \n                                downloadCSV\n                            \n                            \n                                    Async\n                                getAllObjects\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(query: QueryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/first-page/first-page.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                    QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            convertArrayOfObjectsToCSV\n                            \n                            \n                        \n                    \n                \n                \n                    \nconvertArrayOfObjectsToCSV(args: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/first-page/first-page.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            downloadCSV\n                            \n                            \n                        \n                    \n                \n                \n                    \ndownloadCSV(args: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/first-page/first-page.component.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getAllObjects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAllObjects()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/first-page/first-page.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/first-page/first-page.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/first-page/first-page.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Example :\n                                        \n                                            Returns a list of objects that is pushed to this classes list\nsetup()\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    list of objects\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dictsToExport\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dictsToExport:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/first-page/first-page.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { QueryService} from '../../providers/query/query.service';\nimport { reject } from 'q';\n\n@Component({\n  selector: 'app-first-page',\n  templateUrl: './first-page.component.html',\n  styleUrls: ['./first-page.component.css']\n})\nexport class FirstPageComponent implements OnInit {\n  dictsToExport = []\n\n  constructor(private query:QueryService) { \n    this.getAllObjects()\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n    * @example\n    * Returns a list of objects that is pushed to this classes list\n    * setup()\n    *\n    * @returns list of objects\n  */\n  setup() {\n    return this.query.genericQuery('SurveyData').then((patientResults) => {\n      for (var i = 0; i {\n          if (typeof environmentalHealthResults === 'undefined'){\n            reject(environmentalHealthResults)\n          }\n          else {\n            this.dictsToExport.push({\n              //patient:{\n                  firstName: environmentalHealthResults.get('client').get('fname'),\n                  lastName: environmentalHealthResults.get('client').get('lname'),\n                  dob: environmentalHealthResults.get('client').get('dob'),\n                  sex: environmentalHealthResults.get('client').get('sex'),\n                  educationLevel: environmentalHealthResults.get('client').get('educationLevel'),\n                  occupation: environmentalHealthResults.get('client').get('occupation'),\n                  communityName: environmentalHealthResults.get('client').get('communityname'),\n                  latrineAccess: environmentalHealthResults.get('latrineAccess'),\n                  waterAccess: environmentalHealthResults.get('waterAccess'),\n                  typeOfWaterDrank: environmentalHealthResults.get('typeofWaterdoyoudrink'),\n                  clinicAccess: environmentalHealthResults.get('clinicAccess'),\n                  trashPickUpFrequency: environmentalHealthResults.get('timesperweektrashcollected'),\n                  trashLocation: environmentalHealthResults.get('wheretrashleftbetweenpickups'),\n                  conditionOfFloor: environmentalHealthResults.get('conditionoFloorinyourhouse'),\n                  conditionOfRoof: environmentalHealthResults.get('conditionoRoofinyourhouse'),\n                  organizationWhoOwnsData: environmentalHealthResults.get('client').get('surveyingOrganization'),\n                  dataCollector: environmentalHealthResults.get('client').get('surveyingUser'),\n                  \n              //},\n            });\n          }\n        })\n        //Pushes objects into An Array \n        //this.objectIDs.push(data);\n      }\n      //console.log(this.objectIDs)\n    });\n  }\n\n  async getAllObjects() {\n    await this.setup();\n  }\n  \n  convertArrayOfObjectsToCSV(args) {  \n    var result, ctr, keys, columnDelimiter, lineDelimiter, data;\n\n    data = args.data || null;\n    if (data == null || !data.length) {\n        return null;\n    }\n\n    columnDelimiter = args.columnDelimiter || ',';\n    lineDelimiter = args.lineDelimiter || '\\n';\n\n    keys = Object.keys(data[0]);\n\n    result = '';\n    result += keys.join(columnDelimiter);\n    result += lineDelimiter;\n\n    data.forEach(function(item) {\n        ctr = 0;\n        keys.forEach(function(key) {\n            if (ctr > 0) result += columnDelimiter;\n\n            result += item[key];\n            ctr++;\n        });\n        result += lineDelimiter;\n    });\n\n    return result;\n  }\n\n  downloadCSV(args) {  \n    var data, filename, link;\n    var csv = this.convertArrayOfObjectsToCSV({\n        data: this.dictsToExport\n    });\n    if (csv == null) return;\n\n    filename = args.filename || 'export.csv';\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n        csv = 'data:text/csv;charset=utf-8,' + csv;\n    }\n    data = encodeURI(csv);\n\n    link = document.createElement('a');\n    link.setAttribute('href', data);\n    link.setAttribute('download', filename);\n    link.click();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    Patient First Name\n    Patient Last Name\n  \n  \n  \n    \n      All ze patient Info\n    \n  \n  \n    Button to do Export\n    Button to do something weird\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Patient First Name    Patient Last Name                All ze patient Info            Button to do Export    Button to do something weird  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FirstPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyNavComponent.html":{"url":"components/MyNavComponent.html","title":"component - MyNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MyNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/my-nav/my-nav.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                my-nav\n            \n\n            \n                styleUrls\n                my-nav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./my-nav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isHandset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver)\n                    \n                \n                        \n                            \n                                Defined in src/app/my-nav/my-nav.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isHandset:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.breakpointObserver.observe(Breakpoints.Handset)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/my-nav/my-nav.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'my-nav',\n  templateUrl: './my-nav.component.html',\n  styleUrls: ['./my-nav.component.css']\n})\nexport class MyNavComponent {\n  isHandset: Observable = this.breakpointObserver.observe(Breakpoints.Handset);\n  constructor(private breakpointObserver: BreakpointObserver) {\n    \n  }\n}\n\n    \n\n    \n        \n  \n    Menu\n    \n      Submissions\n      Community Analysis\n      Data Export\n      Third Page\n    \n  \n  \n    \n      \n        menu\n      \n      Puente Angular\n    \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Menu          Submissions      Community Analysis      Data Export      Third Page                          menu            Puente Angular          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseService.html":{"url":"injectables/ParseService.html","title":"injectable - ParseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/parse/parse.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                parseAppId\n                            \n                            \n                                    Private\n                                parseJavascriptKey\n                            \n                            \n                                    Private\n                                parseServerUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                parseEnvironment\n                            \n                            \n                                    Public\n                                parseInitialize\n                            \n                            \n                                runCloudFunction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/providers/parse/parse.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parseEnvironment\n                            \n                            \n                        \n                    \n                \n                \n                    \nparseEnvironment()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/parse/parse.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Example :\n                                        \n                                            Returns a Parse Environment\nparseEnvironment()\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    a Parse Environment\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parseInitialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parseInitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/parse/parse.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Example :\n                                        \n                                            Authorize authentication into Parse-Server Backend\nparseInitialize()\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            runCloudFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \nrunCloudFunction(functionName: string, functionRequest: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/parse/parse.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        functionName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Name of Cloud Function\n\n                                                        \n                                                \n                                                \n                                                        functionRequest\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Paramers for Cloud Function\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Creates front-end function to access Cloud Function\nrunCloudFunction()\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Cloud Function\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parseAppId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parseAppId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.parseAppId\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/parse/parse.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parseJavascriptKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parseJavascriptKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.parseJavascriptKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/parse/parse.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parseServerUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parseServerUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.parseServerUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/parse/parse.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment.prod'\n\nimport { Parse } from 'parse';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParseService {\n  private parseAppId: string = environment.parseAppId;\n  private parseServerUrl: string = environment.parseServerUrl;\n  private parseJavascriptKey: string = environment.parseJavascriptKey;\n\n  constructor() { \n    this.parseInitialize();\n    console.log('Initiated Parse');\n  }\n\n  /**\n    * @example\n    * Returns a Parse Environment\n    * parseEnvironment()\n    *\n    * @returns a Parse Environment\n  */\n  parseEnvironment() {\n    return Parse;\n  }\n\n  /**\n    * @example\n    * Authorize authentication into Parse-Server Backend\n    * parseInitialize()\n    *\n    * @returns\n  */\n  public parseInitialize() {\n    //Back4app\n    Parse.initialize(this.parseAppId,this.parseJavascriptKey);\n    \n    //Server\n    Parse.serverURL = this.parseServerUrl;\n  }\n\n  /**\n    * @example\n    * Creates front-end function to access Cloud Function\n    * runCloudFunction()\n    *\n    * @param {string} functionName  Name of Cloud Function\n    * @param {string} functionRequest  Paramers for Cloud Function\n    * @returns Cloud Function\n  */\n  runCloudFunction(functionName:string, functionRequest:any){\n    return Parse.Cloud.run(functionName,functionRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryService.html":{"url":"injectables/QueryService.html","title":"injectable - QueryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/query/query.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                containedQuery\n                            \n                            \n                                    Public\n                                exactlyOneQuery\n                            \n                            \n                                    Public\n                                genericQuery\n                            \n                            \n                                hello\n                            \n                            \n                                listAllPatients\n                            \n                            \n                                listPatientsByOrganization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parse: ParseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/providers/query/query.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parse\n                                                  \n                                                        \n                                                                    ParseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            containedQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        containedQuery(limit: number, parseObject: string, parseColumn: string, parseParamValuesArray: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query/query.service.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        limit\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                1000\n                                                        \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        parseObject\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                Name of Cloud Class\n\n                                                        \n                                                \n                                                \n                                                        parseColumn\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                Name of Cloud Class Column \n\n                                                        \n                                                \n                                                \n                                                        parseParamValuesArray\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                Name of Parameter within Class Colum\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns a list of objects based on parameters \ncontainedQuery(2000,SurveyData,organization,Puente)\n                                        \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    list of objects\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            exactlyOneQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        exactlyOneQuery(parseObject: string, parseColumn: string, parseParamValue: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query/query.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parseObject\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parseColumn\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parseParamValue\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            genericQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        genericQuery(parseObject: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query/query.service.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        parseObject\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Name of Cloud Class\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns a list of objects \ngenericQuery(SurveyData)\n                                        \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    list of objects\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hello\n                            \n                            \n                        \n                    \n                \n                \n                    \nhello()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query/query.service.ts:134\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Example :\n                                        \n                                            Returns a console.log of Hello\nhello()\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    console.log of hello\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listAllPatients\n                            \n                            \n                        \n                    \n                \n                \n                    \nlistAllPatients()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query/query.service.ts:145\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Example :\n                                        \n                                            Returns a list of all objects in SurveyData (PatientDemographicsClass)\nlistAllPatients()\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    list of objects\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listPatientsByOrganization\n                            \n                            \n                        \n                    \n                \n                \n                    \nlistPatientsByOrganization(organization: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query/query.service.ts:157\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        organization\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Name of Organization\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns a list of objects based on organization \nlistPatientsByOrganization(Puente)\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    list of objects\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ParseService } from '../parse/parse.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueryService {\n\n  constructor(private parse:ParseService) { \n    this.parse.parseInitialize();\n  }\n\n\n  public exactlyOneQuery(parseObject: string, parseColumn: string, parseParamValue: any): Promise{\n    //This is Retrieving Results from Parse Server\n    let Parse = this.parse.parseEnvironment();\n\n    //Returns the resolve (the query) and if there's an error, rejects\n    //Returns array of objects\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        //Creates local object based on parseObject in Parse-Server\n        const Objekt = Parse.Object.extend(parseObject);\n\n        //Queries the parseObject class from Parse Server\n        let query = new Parse.Query(Objekt);\n\n        //Limiting Results based on a class\n        query.equalTo(parseColumn,parseParamValue);\n        //query.containedIn(parseColumn,parseParamValuesArray);\n\n        //Below searches what's in the surveyPoints array\n        query.first().then((surveyPoints) => {\n          resolve(surveyPoints);\n        }, (error) => {\n          reject(error);\n          //console.log(error)\n        });\n      }, 500);\n    });\n\n  }\n\n\n  /**\n    * @example\n    * Returns a list of objects based on parameters \n    * containedQuery(2000,SurveyData,organization,Puente)\n    *\n    * @param {number} Limit  Number of Queries\n    * @param {string} parseObject  Name of Cloud Class\n    * @param {string} parseColumn  Name of Cloud Class Column \n    * @param {string} parseParamValuesArray Name of Parameter within Class Colum\n    * @returns list of objects\n  */\n  public containedQuery(limit: number=1000, parseObject: string, parseColumn: string, parseParamValuesArray: any): Promise {\n    //This is Retrieving Results from Parse Server\n    let Parse = this.parse.parseEnvironment();\n\n    //Returns the resolve (the query) and if there's an error, rejects\n    //Returns array of objects\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        //Creates local object based on parseObject in Parse-Server\n        const SurveyData = Parse.Object.extend(parseObject);\n\n        //Queries the parseObject class from Parse Server\n        let query = new Parse.Query(SurveyData);\n\n        //Limiting Results based on a class\n        //query.equalTo(parseColumn,parseParam);\n        query.containedIn(parseColumn,parseParamValuesArray);\n\n        //You can limit the number of results by setting \"limit\"\n        query.limit(limit);\n\n        //Below searches what's in the surveyPoints array\n        query.find().then((surveyPoints) => {\n          resolve(surveyPoints);\n        }, (error) => {\n          reject(error);\n        });\n      }, 500);\n    });\n  }\n\n  /**\n    * @example\n    * Returns a list of objects \n    * genericQuery(SurveyData)\n    *\n    * @param {string} parseObject  Name of Cloud Class\n    * @returns list of objects\n  */\n  public genericQuery(parseObject: string): Promise {\n    //This is Retrieving Results from Parse Server\n    let Parse = this.parse.parseEnvironment();\n\n    //Returns the resolve (the query) and if there's an error, rejects\n    //Returns array of objects\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        //Creates local object based on \"SurveyData\" Object in Parse-Server\n        const SurveyData = Parse.Object.extend(parseObject);\n\n        //Queries the SurveyData class from Parse Server\n        let query = new Parse.Query(SurveyData);\n\n        //You can limit the number of results by setting \"limit\"\n        query.limit(50);\n        \n        query.notEqualTo(\"surveyingOrganization\", \"test\");\n        \n        //Limiting Results based on a class\n        //query.equalTo(parseColumn);\n\n        //Below searches what's in the surveyPoints array\n        query.find().then((surveyPoints) => {\n          resolve(surveyPoints);\n        }, (error) => {\n          reject(error);\n        });\n      }, 500);\n    });\n  }\n\n  /**\n    * @example\n    * Returns a console.log of Hello\n    * hello()\n    *\n    * @returns console.log of hello\n  */\n  hello(){\n    return this.parse.runCloudFunction(\"hello\",null);\n  }\n\n  /**\n    * @example\n    * Returns a list of all objects in SurveyData (PatientDemographicsClass)\n    * listAllPatients()\n    *\n    * @returns list of objects\n  */\n  listAllPatients(){\n    return this.parse.runCloudFunction(\"retrievePatientRecordsAll\", null);\n  }\n\n  /**\n    * @example\n    * Returns a list of objects based on organization \n    * listPatientsByOrganization(Puente)\n    *\n    * @param {string} organization Name of Organization\n    * @returns list of objects\n  */\n  listPatientsByOrganization(organization){\n    return this.parse.runCloudFunction(\"retrievePatientRecordByOrgnization\", {\n      organization: organization\n    });\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SubmissionsComponent.html":{"url":"components/SubmissionsComponent.html","title":"component - SubmissionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SubmissionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/submissions/submissions.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-submissions\n            \n\n            \n                styleUrls\n                submissions.component.css\n            \n\n\n\n            \n                templateUrl\n                ./submissions.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataList\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(query: QueryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/submissions/submissions.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                    QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyFilter(filterValue: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterValue\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataSource:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayedColumns:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['fname', 'lname', 'surveyingUser', 'createdAt']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paginator:     MatPaginator\n\n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sort:     MatSort\n\n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { QueryService} from '../../providers/query/query.service';\n\nimport { MatSort, MatPaginator, MatTableDataSource} from '@angular/material';\n\n@Component({\n  selector: 'app-submissions',\n  templateUrl: './submissions.component.html',\n  styleUrls: ['./submissions.component.css']\n})\nexport class SubmissionsComponent implements OnInit {\n\n  dataSource;\n  dataList = [];\n  displayedColumns: string[] = ['fname', 'lname', 'surveyingUser', 'createdAt'];\n\n  /*\n    Pagination\n  */\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  /*\n    Sorting\n  */\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private query:QueryService) { \n    this.setup().then(()=>{\n      this.dataSource = new MatTableDataSource(this.dataList);\n      this.dataSource.paginator = this.paginator; \n      this.dataSource.sort = this.sort;\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  setup(){\n    return this.query.listAllPatients().then((results) => {\n      for (var i = 0; i \n    \n\n    \n        \n\n  \n    \n  \n\n  \n\n    \n       First Name \n       {{user.fname}} \n    \n\n    \n       Last Name \n       {{user.lname}} \n    \n\n    \n       Surveying User \n       {{user.surveyingUser}} \n    \n\n    \n       Time \n       {{user.createdAt}} \n    \n\n    \n    \n  \n\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     First Name        {{user.fname}}                Last Name        {{user.lname}}                Surveying User        {{user.surveyingUser}}                Time        {{user.createdAt}}                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SubmissionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/my-nav/my-nav.component.ts\n            \n            \n                component\n            \n            \n                MyNavComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/communityAnalysis/communityAnalysis.component.ts\n            \n            \n                component\n            \n            \n                CommunityAnalysisComponent\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/pages/first-page/first-page.component.ts\n            \n            \n                component\n            \n            \n                FirstPageComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/submissions/submissions.component.ts\n            \n            \n                component\n            \n            \n                SubmissionsComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/providers/parse/parse.service.ts\n            \n            \n                injectable\n            \n            \n                ParseService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/providers/query/query.service.ts\n            \n            \n                injectable\n            \n            \n                QueryService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.0\n        \n            @angular/cdk : ^6.0.0\n        \n            @angular/cli : ^6.2.5\n        \n            @angular/common : ^6.0.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/compiler-cli : ^6.1.10\n        \n            @angular/core : ^6.0.0\n        \n            @angular/forms : ^6.0.0\n        \n            @angular/http : ^6.0.0\n        \n            @angular/material : ^6.0.2\n        \n            @angular/platform-browser : ^6.0.0\n        \n            @angular/platform-browser-dynamic : ^6.0.0\n        \n            @angular/router : ^6.0.0\n        \n            core-js : ^2.5.4\n        \n            express : ^4.16.4\n        \n            parse : ^2.1.0\n        \n            path : ^0.12.7\n        \n            rxjs : ^6.0.0\n        \n            typescript : ~2.7.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPuente Angular\nStack\n\n\nAbout\nThis web application is meant to be the web platform used to manage data collected on the ionic mobile application Puente Data Collection\nAngular Framework\nAngular is a TypeScript-based open-source front-end web application platform led by the Angular Team at Google and by a community of individuals and corporations. Those powerful capabilities are brought to Angular because it provides mobile-friendly HTML, JS, and CSS components to developers.\nParse Server\nParse Server is an open source version of the Parse backend that can be deployed to any infrastructure that can run Node.js. Its repository on Github.\nBuild and Run\nInstall\ngit clone \ncd THIS_PROJ\nnpm installRun\nnpm run start:localBuild\nFor debug build\nnpm run buildThe build artifacts will be stored in the dist/ directory. \nFor production build\nnpm run build:productionCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nLook at the structure of the project in order to generate component in the correct location\nng generate directive|service|etc /providers/componentName/componentNameThis will create a folder for the component in the providers directory with the correct files inside that folder\nKnown Issues\n\nNeed to set environmental variables for local development/production \nNeed to set mongo migration for demo data\n\nContribution\n\nReport issues\nOpen pull request with improvements\nSpread the word\nReach out to me directly at \n\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nThis project uses Material Design\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommunityAnalysisComponent\n\nCommunityAnalysisComponent\n\nAppModule -->\n\nCommunityAnalysisComponent->AppModule\n\n\n\n\n\nFirstPageComponent\n\nFirstPageComponent\n\nAppModule -->\n\nFirstPageComponent->AppModule\n\n\n\n\n\nMyNavComponent\n\nMyNavComponent\n\nAppModule -->\n\nMyNavComponent->AppModule\n\n\n\n\n\nSubmissionsComponent\n\nSubmissionsComponent\n\nAppModule -->\n\nSubmissionsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  parseAppId: 'vBdTHqQU31IyLW5uYRDIWb8Ew8zCZGBzMqChugjr',\n  parseJavascriptKey: 'jFWiqliNRHXiH72J9kiotL8m0EuSdry1yFIiYlad',\n  parseServerUrl: 'https://parseapi.back4app.com/'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  parseAppId: '',\n  parseJavascriptKey: '',\n  parseServerUrl: ''\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
