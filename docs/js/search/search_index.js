var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.148,1,0.671]],["body/components/AppComponent.html",[0,0.281,1,1.236,2,0.45,3,0.38,4,1.33,5,1.33,6,1.33,7,1.33,8,0.314,9,3.094,10,1.33,11,2.099,12,2.107,13,1.662,14,1.662,15,5.137,16,1.662,17,4.709,18,0.38,19,1.347,20,3.783,21,1.347,22,0.523,23,0.041,24,1.078,25,1.078,26,0.523,27,3.768,28,0.45,29,0.38,30,0.38,31,0.251,32,1.078,33,1.497,34,1.662,35,1.662,36,1.236,37,1.33,38,0.654,39,1.33,40,0.866,41,1.33,42,0.866,43,1.198,44,1.33,45,0.967,46,1.33,47,0.866,48,1.198,49,1.33,50,0.866,51,1.33,52,0.866,53,1.33,54,0.866,55,1.33,56,0.866,57,0.967,58,1.33,59,0.866,60,1.198,61,1.33,62,0.032,63,0.032]],["title/modules/AppModule.html",[64,1.59,65,1.796]],["body/modules/AppModule.html",[0,0.27,1,1.308,2,0.336,3,0.284,8,0.234,23,0.042,28,0.705,29,0.284,30,0.392,31,0.187,32,0.804,40,1.226,42,1.226,43,0.894,45,1.37,47,1.226,48,0.894,50,1.226,52,1.196,54,1.196,56,1.25,57,0.722,59,1.226,60,1.235,62,0.026,63,0.026,64,2.115,65,3.691,66,1.729,67,3.128,68,3.653,69,2.95,70,2.309,71,2.309,72,2.309,73,2.309,74,1.838,75,3.189,76,1.729,77,1.977,78,2.812,79,3.884,80,3.189,81,1.977,82,3.884,83,3.884,84,2.309,85,1.367,86,3.884,87,2.309,88,2.812,89,2.388,90,1.977,91,2.812,92,2.812,93,3.884,94,2.812,95,1.977,96,2.812,97,3.884,98,2.309,99,3.884,100,3.884,101,3.884,102,3.884,103,3.884,104,3.884,105,3.884,106,3.884,107,3.884,108,3.884,109,3.884,110,1.977,111,2.812,112,1.977,113,2.812,114,2.812,115,2.812,116,2.812,117,1.977,118,2.812,119,2.812,120,2.812,121,2.812,122,1.977,123,2.812,124,1.977,125,2.812,126,1.531,127,2.812,128,4.587,129,2.812,130,3.189,131,2.812,132,2.309,133,2.309,134,2.812,135,2.812,136,2.812]],["title/injectables/AuthService.html",[74,1.031,137,0.405]],["body/injectables/AuthService.html",[2,0.253,3,0.213,8,0.176,13,0.747,18,0.213,19,0.905,20,1.488,21,1.694,22,0.656,23,0.042,24,1.084,25,1.084,26,0.739,28,0.564,29,0.213,30,0.319,31,0.211,36,0.967,38,0.625,57,0.813,62,0.022,63,0.022,74,1.117,76,1.301,137,0.526,138,1.488,139,2.245,140,2.588,141,2.588,142,2.588,143,0.574,144,2.28,145,2.958,146,3.455,147,3.165,148,2.958,149,3.165,150,3.455,151,3.165,152,0.604,153,3.165,154,2.117,155,0.877,156,2.225,157,2.117,158,2.716,159,2.117,160,2.117,161,0.974,162,0.974,163,4.371,164,2.117,165,0.543,166,2.599,167,3.687,168,2.117,169,2.856,170,3.445,171,2.117,172,2.599,173,2.189,174,2.117,175,2.225,176,2.117,177,2.225,178,2.225,179,2.117,180,1.301,181,1.738,182,1.488,183,1.738,184,1.486,185,1.738,186,1.153,187,1.488,188,1.488,189,0.83,190,1.488,191,1.488,192,1.301,193,1.853,194,3.113,195,1.738,196,1.738,197,1.738,198,1.738,199,1.301,200,1.738,201,1.738,202,2.958,203,2.899,204,1.738,205,1.738,206,1.738,207,1.738,208,3.113,209,2.599,210,1.738,211,0.83,212,1.153,213,2.599,214,3.687,215,2.907,216,2.599,217,2.599,218,3.113,219,2.599,220,2.599,221,3.455,222,3.881,223,1.488,224,2.225,225,2.666,226,1.738,227,1.488,228,1.738,229,1.738,230,1.738,231,1.738,232,1.738,233,1.738,234,2.599,235,3.113,236,3.113,237,3.113,238,3.113,239,1.738,240,1.738,241,1.738,242,1.738,243,1.738,244,1.738,245,1.029,246,1.488,247,1.738,248,1.738,249,1.738,250,1.738,251,1.738,252,2.599,253,2.599,254,1.738,255,1.738,256,1.738,257,1.738,258,1.488,259,1.738,260,1.738,261,1.738,262,1.738,263,1.738,264,2.599,265,1.738,266,1.488,267,1.738,268,1.738,269,1.738,270,1.738,271,1.738,272,1.738,273,1.738,274,1.724,275,1.738,276,1.488,277,1.488,278,1.738,279,1.738,280,1.029,281,1.488,282,1.488]],["title/components/CommunityAnalysisComponent.html",[0,0.148,40,0.671]],["body/components/CommunityAnalysisComponent.html",[0,0.229,1,0.489,2,0.379,3,0.214,4,0.751,5,0.751,6,0.751,7,0.751,8,0.177,10,0.751,11,1.905,12,1.881,14,1.121,16,1.121,18,0.214,19,0.908,22,0.74,23,0.042,24,1.524,25,1.524,26,0.776,28,0.379,29,0.214,30,0.214,31,0.142,32,0.608,33,1.01,34,1.489,35,1.121,36,0.969,37,0.751,38,0.528,39,0.751,40,0.969,41,0.751,42,0.489,43,0.676,44,0.751,45,0.546,46,0.751,47,0.489,48,1.209,49,0.751,50,0.489,51,0.751,52,0.489,53,0.751,54,0.489,55,0.751,56,0.489,57,0.546,58,0.751,59,0.489,60,0.676,61,0.751,62,0.026,63,0.029,126,1.158,133,2.608,143,0.576,152,0.339,155,0.506,161,0.546,162,0.546,165,0.816,188,2.233,266,2.233,283,1.746,284,1.245,285,1.49,286,3.803,287,3.177,288,4.218,289,4.736,290,4.736,291,4.218,292,4.736,293,4.736,294,4.736,295,4.736,296,4.736,297,4.736,298,4.736,299,4.736,300,4.218,301,1.653,302,2.594,303,1.308,304,1.657,305,3.177,306,1.033,307,2.127,308,2.127,309,2.127,310,2.718,311,3.177,312,2.127,313,3.98,314,2.127,315,2.127,316,2.127,317,2.127,318,2.127,319,2.127,320,2.127,321,2.127,322,2.127,323,2.127,324,1.495,325,0.927,326,1.495,327,1.746,328,1.746,329,2.127,330,3.177,331,2.127,332,2.127,333,2.127,334,1.495,335,4.514,336,4.234,337,1.746,338,2.127,339,4.514,340,2.127,341,2.127,342,2.127,343,3.463,344,2.127,345,3.177,346,2.127,347,2.127,348,3.463,349,1.308,350,2.127,351,3.177,352,2.127,353,2.127,354,2.127,355,1.73,356,2.233,357,2.608,358,3.177,359,1.953,360,3.177,361,2.233,362,3.177,363,3.177,364,4.736,365,4.736,366,4.736,367,3.177,368,3.177,369,5.251,370,3.177,371,5.045,372,3.177,373,3.177,374,3.177,375,2.608,376,3.177,377,3.177,378,3.177,379,3.177,380,1.953,381,2.127,382,2.127,383,2.127,384,2.127,385,2.127,386,2.127,387,2.127,388,2.127,389,2.127,390,2.127,391,2.127,392,2.127]],["title/injectables/DataExportService.html",[137,0.405,393,1.796]],["body/injectables/DataExportService.html",[2,0.238,3,0.201,8,0.166,13,0.703,18,0.201,21,1.167,22,0.42,23,0.042,26,0.666,28,0.361,29,0.201,30,0.201,31,0.133,36,1.136,38,0.666,62,0.035,63,0.021,137,0.507,139,2.319,143,0.548,152,0.317,155,0.882,161,1.232,162,1.232,173,0.968,189,0.78,211,2.151,212,2.389,274,3.181,302,1.859,303,1.224,304,1.778,306,1.469,310,1.776,325,0.868,380,3.227,393,1.859,394,4.06,395,3.477,396,1.635,397,3.023,398,3.023,399,3.023,400,3.023,401,3.023,402,1.991,403,2.482,404,1.991,405,3.023,406,1.635,407,3.654,408,1.991,409,1.991,410,2.868,411,1.991,412,3.023,413,1.991,414,3.654,415,2.482,416,1.991,417,3.023,418,1.991,419,1.991,420,1.991,421,3.023,422,1.991,423,3.654,424,1.991,425,1.991,426,3.023,427,3.023,428,3.023,429,1.991,430,5.321,431,1.635,432,1.635,433,3.792,434,1.635,435,3.792,436,1.635,437,3.792,438,1.635,439,3.247,440,1.635,441,2.482,442,1.635,443,2.482,444,1.635,445,2.125,446,1.635,447,2.482,448,1.635,449,2.482,450,1.635,451,2.482,452,1.635,453,2.482,454,1.635,455,2.482,456,1.635,457,2.482,458,1.635,459,2.482,460,1.635,461,2.482,462,1.635,463,2.482,464,1.635,465,2.482,466,1.635,467,2.482,468,1.635,469,2.482,470,1.635,471,2.482,472,1.635,473,2.482,474,1.635,475,1.635,476,1.635,477,1.635,478,1.635,479,1.635,480,1.635,481,1.635,482,1.635,483,2.482,484,1.635,485,2.482,486,1.635,487,1.635,488,1.635,489,2.482,490,1.635,491,2.482,492,1.635,493,2.482,494,1.635,495,2.482,496,1.635,497,2.482,498,1.635,499,2.482,500,1.635,501,2.125,502,3,503,3,504,3,505,3,506,1.635,507,1.635,508,1.635,509,1.635,510,1.635,511,1.635,512,1.635,513,1.635,514,1.635,515,1.635,516,1.635,517,1.635,518,1.635,519,1.635,520,1.635,521,1.635,522,1.635,523,1.635,524,2.247,525,3.654,526,3.654,527,3.654,528,3.654,529,1.991,530,3.654,531,3.654,532,1.991,533,1.991,534,1.991,535,1.991,536,1.991,537,1.991,538,1.991,539,1.991,540,1.991,541,1.991,542,1.991,543,1.991,544,1.991,545,1.991,546,3.023,547,1.991,548,3.023,549,1.991,550,1.991,551,3.023,552,1.991,553,1.991,554,3.023,555,1.991,556,3.654,557,3.654,558,3.654,559,1.991,560,1.991,561,1.991,562,1.991,563,1.991,564,1.991,565,1.991,566,1.991,567,3.35,568,2.125,569,3.35,570,3.35,571,2.614,572,1.635,573,1.635,574,2.482,575,1.635,576,1.635,577,1.635,578,1.635,579,1.635,580,1.635,581,1.635,582,1.635,583,1.991,584,3,585,2.482,586,3.35,587,1.635,588,1.635,589,1.635,590,1.635,591,1.635,592,1.224,593,1.635,594,1.635,595,1.635,596,1.635,597,1.635]],["title/components/FirstPageComponent.html",[0,0.148,42,0.671]],["body/components/FirstPageComponent.html",[0,0.201,1,0.369,2,0.38,3,0.162,4,0.566,5,0.566,6,0.566,7,0.566,8,0.134,10,0.566,11,1.783,12,1.752,14,0.902,16,0.902,18,0.162,19,0.731,21,0.731,22,0.504,23,0.042,24,0.911,25,0.911,26,0.615,28,0.504,29,0.162,30,0.321,31,0.107,32,0.459,33,0.812,34,0.902,35,0.902,36,1.16,37,0.566,38,0.639,39,0.566,40,0.369,41,0.566,42,0.835,43,1.545,44,0.566,45,0.412,46,0.566,47,0.369,48,1.012,49,0.566,50,0.369,51,0.566,52,0.369,53,0.566,54,0.369,55,0.566,56,0.369,57,0.412,58,0.566,59,0.369,60,0.51,61,0.566,62,0.037,63,0.017,74,1.124,112,3.235,132,2.098,139,1.388,143,0.463,144,1.248,152,0.256,155,0.791,161,0.656,162,0.656,165,0.412,173,1.765,192,1.572,211,2.036,212,2.647,274,3.132,284,1.002,285,1.248,301,1.424,302,1.572,303,0.987,304,1.388,306,0.78,310,2.054,324,1.128,325,0.699,326,1.128,327,2.098,355,1.392,361,3.116,393,1.959,395,1.128,403,2.098,406,2.098,415,1.317,431,1.317,432,2.098,433,2.982,434,2.098,435,2.982,436,2.098,437,2.982,438,2.098,439,2.554,440,2.098,441,2.982,442,2.098,443,2.982,444,2.098,445,2.554,446,2.098,447,2.982,448,2.098,449,2.982,450,2.098,451,2.982,452,2.098,453,2.982,454,2.098,455,2.982,456,2.098,457,2.982,458,2.098,459,2.982,460,2.098,461,2.982,462,2.098,463,2.982,464,2.098,465,2.982,466,2.098,467,2.982,468,2.098,469,2.982,470,2.098,471,2.982,472,2.098,473,2.982,474,2.098,475,2.098,476,2.098,477,2.098,478,2.098,479,2.098,480,2.098,481,2.098,482,2.098,483,2.982,484,2.098,485,2.982,486,2.098,487,2.098,488,2.098,489,2.982,490,2.098,491,2.982,492,2.098,493,2.982,494,2.098,495,2.982,496,2.098,497,2.982,498,2.098,499,2.982,500,2.098,501,3.235,502,2.098,503,2.098,504,2.098,505,2.098,506,2.098,507,2.098,508,2.098,509,2.098,510,2.098,511,2.098,512,2.098,513,2.098,514,2.098,515,2.098,516,2.098,517,2.098,518,2.098,519,2.098,520,2.098,521,2.098,522,2.098,523,2.098,567,3.778,568,2.554,569,3.778,570,3.778,571,2.891,572,2.098,573,2.098,574,2.982,575,2.098,576,2.098,577,2.098,578,2.098,579,2.098,580,2.098,581,2.098,582,2.098,584,3.639,585,2.982,586,3.778,587,2.098,588,2.098,589,2.098,590,1.317,591,2.098,592,1.572,593,2.098,594,2.098,595,2.098,596,2.098,597,2.098,598,3.778,599,1.317,600,3.185,601,2.556,602,3.633,603,3.633,604,2.556,605,1.572,606,1.388,607,2.556,608,1.605,609,1.605,610,1.605,611,1.605,612,2.556,613,1.605,614,3.633,615,2.556,616,3.185,617,3.633,618,1.605,619,1.605,620,2.556,621,1.605,622,2.556,623,1.128,624,0.987,625,1.605,626,1.605,627,1.605,628,1.317,629,0.987,630,1.605,631,1.317,632,1.605,633,1.317,634,1.605,635,1.605,636,1.605,637,1.605,638,1.605,639,1.605,640,1.605,641,1.605,642,2.098,643,2.556,644,1.392,645,1.392,646,1.605,647,1.317,648,0.987,649,1.605,650,1.605,651,2.556,652,2.098,653,1.605,654,1.317,655,1.605]],["title/components/HomeEnvComponent.html",[0,0.148,47,0.671]],["body/components/HomeEnvComponent.html",[0,0.264,1,0.71,2,0.369,3,0.312,4,1.091,5,1.091,6,1.091,7,1.091,8,0.257,10,1.091,11,2.04,12,2.025,14,1.462,16,1.462,18,0.312,22,0.429,23,0.041,26,0.575,28,0.494,29,0.312,30,0.312,31,0.206,32,0.884,33,1.316,34,1.462,35,1.462,36,1.146,37,1.091,38,0.648,39,1.091,40,0.71,41,1.091,42,0.71,43,0.982,44,1.091,45,0.793,46,1.091,47,1.146,48,1.808,49,1.091,50,0.71,51,1.091,52,0.71,53,1.091,54,0.71,55,1.091,56,0.71,57,0.793,58,1.091,59,0.71,60,0.982,61,1.091,62,0.028,63,0.028,85,2.013,122,3.284,130,3.4,143,0.751,152,0.493,155,0.493,161,0.793,162,0.793,165,0.793,284,1.623,285,1.831,301,1.956,325,1.347,348,3.4,355,2.255,359,2.546,380,2.546,445,2.911,571,2.255,592,2.546,605,1.9,606,2.036,624,1.9,629,1.9,631,2.537,644,2.255,656,3.834,657,2.537,658,4.671,659,4.141,660,3.09,661,3.09,662,3.09,663,3.4,664,3.4,665,3.4,666,2.911,667,3.4,668,4.141,669,4.141,670,4.141,671,4.141,672,4.141,673,4.141,674,4.99,675,4.141,676,4.141,677,4.141,678,4.141,679,4.141,680,4.141,681,4.141,682,4.141,683,4.141,684,4.141,685,5.356,686,5.356,687,4.141,688,4.141,689,4.141,690,4.141,691,4.141,692,4.141,693,4.096,694,4.141]],["title/components/MapComponent.html",[0,0.148,50,0.671]],["body/components/MapComponent.html",[0,0.269,1,0.75,2,0.39,3,0.329,4,1.152,5,1.152,6,1.152,7,1.152,8,0.272,10,1.152,11,2.057,12,2.044,14,1.516,16,1.516,18,0.329,23,0.041,26,0.596,28,0.512,29,0.329,30,0.329,31,0.218,32,0.934,33,1.365,34,1.516,35,1.516,36,1.172,37,1.152,38,0.596,39,1.152,40,0.75,41,1.152,42,0.75,43,1.038,44,1.152,45,0.838,46,1.152,47,0.75,48,1.526,49,1.152,50,1.172,51,1.152,52,0.75,53,1.152,54,0.75,55,1.152,56,0.75,57,0.838,58,1.152,59,0.75,60,1.365,61,1.152,62,0.029,63,0.029,67,2.295,126,1.778,143,0.779,152,0.765,155,0.521,165,0.838,182,3.956,284,1.684,285,1.881,301,1.999,356,3.02,524,2.008,648,2.008,695,2.295,696,4.8,697,4.296,698,3.265,699,3.265,700,2.295,701,3.265,702,3.265,703,3.265,704,3.265,705,3.265,706,3.265,707,3.265,708,3.265,709,4.296,710,4.296,711,4.296,712,4.296,713,4.296,714,4.296,715,3.526,716,4.296,717,4.296,718,4.296,719,2.008,720,2.681,721,3.898,722,4.673,723,3.941,724,2.008,725,2.008,726,2.008,727,3.941,728,2.681,729,3.265,730,2.295,731,4.296,732,3.265]],["title/components/MyAsideComponent.html",[0,0.148,52,0.671]],["body/components/MyAsideComponent.html",[0,0.271,1,0.771,2,0.401,3,0.339,4,1.185,5,1.185,6,1.185,7,1.185,8,0.28,10,1.185,11,2.065,12,2.053,14,1.544,16,1.544,18,0.339,23,0.041,26,0.607,28,0.522,29,0.339,30,0.491,31,0.224,32,0.96,33,1.391,34,1.544,35,1.544,36,1.185,37,1.185,38,0.607,39,1.185,40,0.771,41,1.185,42,0.771,43,1.067,44,1.185,45,0.862,46,1.185,47,0.771,48,1.067,49,1.185,50,0.771,51,1.185,52,1.185,53,1.185,54,0.771,55,1.185,56,0.771,57,0.862,58,1.185,59,0.771,60,1.547,61,1.185,62,0.03,63,0.03,85,2.126,124,3.421,143,0.793,152,0.776,155,0.535,165,0.862,199,2.69,284,1.715,285,1.907,301,2.021,355,2.382,359,2.69,571,2.382,644,2.382,719,2.065,724,2.065,725,2.065,726,2.065,733,3.421,734,2.757,735,4.375,736,4.866,737,4.375,738,3.358,739,3.358,740,3.591,741,4.375,742,4.375,743,3.358,744,2.757,745,2.757,746,2.757,747,2.757,748,4.232,749,3.591,750,2.757,751,3.591,752,2.757,753,2.757,754,2.757,755,2.757,756,2.757,757,3.421,758,3.995,759,3.075,760,2.757,761,2.757]],["title/components/MyNavComponent.html",[0,0.148,54,0.671]],["body/components/MyNavComponent.html",[0,0.26,1,0.677,2,0.352,3,0.297,4,1.041,5,1.041,6,1.041,7,1.041,8,0.246,10,1.041,11,2.025,12,1.968,14,1.416,16,1.416,18,0.297,19,1.147,22,0.679,23,0.042,24,1.147,25,1.147,26,0.733,28,0.645,29,0.297,30,0.297,31,0.196,32,0.843,33,1.275,34,1.416,35,1.416,36,1.125,37,1.041,38,0.633,39,1.041,40,0.677,41,1.041,42,0.677,43,0.937,44,1.041,45,0.757,46,1.041,47,0.677,48,1.45,49,1.041,50,0.677,51,1.041,52,0.677,53,1.041,54,1.125,55,1.041,56,0.677,57,0.757,58,1.041,59,0.677,60,0.937,61,1.041,62,0.027,63,0.027,74,1.807,95,3.799,98,2.421,139,1.285,143,0.728,144,2.07,152,0.64,155,0.47,161,0.757,162,0.757,165,0.757,169,2.876,170,3.441,180,1.813,192,3.148,211,1.156,284,1.572,285,1.787,301,1.918,524,1.813,605,3.323,606,2.231,623,2.073,624,1.813,628,2.421,629,1.813,633,2.421,647,3.294,648,1.813,666,2.82,719,1.813,721,2.073,724,1.813,725,1.813,726,1.813,730,2.82,733,3.799,757,2.073,762,2.421,763,4.56,764,4.012,765,4.895,766,2.949,767,5.282,768,4.012,769,2.949,770,2.949,771,4.012,772,2.949,773,2.949,774,4.012,775,2.949,776,2.949,777,2.949,778,2.949,779,2.949,780,4.012,781,4.895,782,4.012,783,4.012,784,2.949,785,2.421,786,2.949,787,2.421]],["title/injectables/NavbarService.html",[137,0.405,606,1.273]],["body/injectables/NavbarService.html",[2,0.479,3,0.405,8,0.335,13,1.418,18,0.405,19,1.401,22,0.558,23,0.042,26,0.783,28,0.479,29,0.405,30,0.405,31,0.268,62,0.033,63,0.033,137,0.734,143,0.888,152,0.843,155,0.843,156,3.715,165,1.357,189,1.575,246,3.868,606,2.135,788,3.298,789,5.502,790,5.502,791,5.502,792,4.899,793,4.017,794,4.017,795,4.017,796,5.641,797,3.444,798,3.298]],["title/injectables/ParseService.html",[137,0.405,799,1.59]],["body/injectables/ParseService.html",[2,0.368,3,0.311,8,0.257,13,1.089,18,0.311,19,1.183,21,1.662,22,0.692,23,0.042,24,1.335,25,1.335,26,0.759,28,0.557,29,0.311,30,0.311,31,0.206,38,0.648,62,0.028,63,0.028,137,0.648,139,2.453,140,3.067,141,3.067,142,3.067,143,0.75,144,1.829,145,2.909,148,3.763,152,0.744,155,0.907,161,0.792,162,0.792,165,0.792,175,2.909,177,2.909,178,2.909,184,2.229,186,2.832,187,2.169,189,1.21,190,2.169,191,2.169,215,3.497,245,2.011,276,2.169,277,2.169,280,2.268,281,2.169,282,2.169,336,3.397,645,2.915,799,2.253,800,2.533,801,5.354,802,4.987,803,4.138,804,3.086,805,3.086,806,4.138,807,3.397,808,3.086,809,4.668,810,3.086,811,1.898,812,4.138,813,4.563,814,3.067,815,3.397,816,3.397,817,3.086,818,3.086,819,3.086,820,3.086,821,3.086]],["title/injectables/ProcessorsService.html",[137,0.405,822,2.053]],["body/injectables/ProcessorsService.html",[2,0.353,3,0.298,8,0.246,13,1.043,18,0.298,19,1.149,21,1.306,22,0.41,23,0.042,24,1.149,25,1.574,26,0.68,28,0.48,29,0.298,30,0.298,31,0.197,36,0.679,38,0.558,62,0.027,63,0.027,69,2.471,137,0.634,143,0.729,144,2.187,152,0.728,155,0.942,161,1.032,162,1.032,165,0.759,189,1.159,193,1.575,215,3.151,224,2.826,349,3.251,568,4.177,645,2.879,811,1.818,814,2.808,822,2.826,823,2.427,824,4.019,825,4.019,826,5.408,827,2.956,828,2.956,829,4.567,830,2.956,831,3.632,832,3.21,833,4.019,834,4.023,835,4.9,836,2.956,837,4.019,838,4.9,839,2.956,840,4.019,841,4.019,842,4.019,843,4.019,844,3.3,845,2.956,846,4.019,847,4.019,848,3.3,849,4.019,850,4.019,851,4.019,852,3.749,853,4.019,854,2.956,855,4.019,856,4.019,857,4.019,858,2.956,859,2.956,860,4.019,861,2.956,862,2.956,863,2.956,864,2.956,865,2.956,866,2.956,867,2.956,868,2.956,869,2.956,870,2.956,871,2.956]],["title/injectables/QueryCustomService.html",[137,0.405,872,2.053]],["body/injectables/QueryCustomService.html",[2,0.276,3,0.234,8,0.193,13,0.818,18,0.234,21,1.631,22,0.61,23,0.042,26,0.61,28,0.404,29,0.234,30,0.234,31,0.345,38,0.678,62,0.037,63,0.023,126,2.177,137,0.555,143,0.614,144,1.915,152,0.369,155,0.925,158,2.137,161,1.129,162,1.328,169,2.66,173,2.67,184,2.129,189,0.908,193,1.915,203,2.66,211,1.567,245,1.126,280,2.452,306,2.563,313,2.811,325,1.01,334,2.811,349,3.004,410,1.629,439,2.379,501,3.434,645,2.66,799,2.177,811,2.459,814,2.876,831,3.34,832,3.635,834,3.61,872,2.379,873,3.84,874,3.84,875,1.902,876,3.385,877,3.385,878,3.385,879,1.902,880,2.317,881,2.317,882,3.999,883,3.999,884,2.317,885,3.385,886,3.385,887,2.778,888,4.009,889,2.317,890,4.01,891,3.385,892,2.317,893,2.317,894,4.397,895,3.385,896,2.317,897,2.317,898,1.902,899,1.902,900,1.902,901,2.317,902,3.283,903,3.283,904,3.283,905,4.01,906,3.283,907,3.283,908,3.385,909,3.999,910,3.61,911,3.385,912,4.4,913,2.811,914,3.283,915,3.283,916,3.283,917,2.317,918,3.283,919,3.283,920,3.283,921,3.283,922,2.778,923,3.283,924,3.283,925,2.778,926,2.317,927,2.317,928,1.902,929,2.317,930,2.317,931,1.629,932,1.902,933,2.317,934,2.317,935,1.902,936,1.902,937,2.317,938,1.902,939,1.902,940,1.902,941,1.902,942,1.902]],["title/injectables/QueryService.html",[137,0.405,304,1.273]],["body/injectables/QueryService.html",[2,0.223,3,0.189,8,0.156,13,0.661,18,0.189,21,1.656,22,0.592,23,0.042,24,0.535,25,0.535,26,0.673,28,0.344,29,0.189,30,0.189,31,0.37,38,0.759,62,0.037,63,0.02,126,2.152,137,0.488,143,0.523,144,1.95,152,0.298,155,0.941,161,1.304,162,1.157,173,2.418,184,2.161,189,0.734,193,1.901,203,2.641,211,1.379,225,1.316,245,1.92,274,1.019,280,2.55,304,1.257,306,2.582,313,3.302,325,0.816,334,2.778,349,2.982,410,1.316,645,2.766,799,1.915,811,2.163,813,3.701,814,2.772,831,3.539,832,3.846,879,1.537,888,3.736,890,3.981,898,1.537,899,1.537,900,1.537,902,3.244,903,3.244,904,3.244,905,3.981,906,3.244,907,3.244,910,3.981,912,4.362,913,2.473,914,2.367,915,2.367,916,2.367,918,3.244,919,3.244,920,3.244,921,3.244,922,2.367,923,3.244,924,3.244,925,3.244,928,1.537,931,2.778,932,1.537,935,1.537,936,1.537,938,1.537,939,2.367,940,2.367,941,1.537,942,1.537,943,1.537,944,2.884,945,2.884,946,2.884,947,2.884,948,5.08,949,4.508,950,2.884,951,1.872,952,2.884,953,5.17,954,5.247,955,3.952,956,1.872,957,2.884,958,2.884,959,2.884,960,2.884,961,2.884,962,2.884,963,4.508,964,1.872,965,2.884,966,1.872,967,2.884,968,1.872,969,2.884,970,1.872,971,3.952,972,1.872,973,2.884,974,2.884,975,1.872,976,2.884,977,1.872,978,1.872,979,2.884,980,1.872,981,3.517,982,1.872,983,2.884,984,1.872,985,1.872,986,2.884,987,1.872,988,1.872,989,1.872,990,1.872,991,1.872,992,1.872,993,1.872]],["title/components/SignInComponent.html",[0,0.148,56,0.671]],["body/components/SignInComponent.html",[0,0.258,1,0.667,2,0.346,3,0.293,4,1.025,5,1.025,6,1.025,7,1.025,8,0.242,10,1.025,11,2.019,12,2.003,14,1.401,16,1.401,18,0.293,19,1.135,21,1.504,22,0.628,23,0.042,24,1.135,25,1.135,26,0.707,28,0.608,29,0.293,30,0.293,31,0.193,32,0.83,33,1.262,34,1.401,35,1.401,36,1.117,37,1.025,38,0.628,39,1.025,40,0.667,41,1.025,42,0.667,43,0.923,44,1.025,45,0.745,46,1.025,47,0.667,48,0.923,49,1.025,50,0.667,51,1.025,52,0.667,53,1.025,54,0.667,55,1.025,56,1.117,57,1.443,58,1.025,59,0.667,60,0.923,61,1.025,62,0.027,63,0.027,74,1.716,89,2.782,90,2.041,117,3.696,139,2.119,143,0.72,152,0.633,155,0.633,161,0.745,162,0.745,165,0.745,167,3.696,169,2.648,184,1.556,202,3.696,203,1.581,211,1.773,212,1.581,214,2.041,284,1.556,285,1.773,301,1.906,605,2.441,606,1.972,623,2.041,624,1.785,629,1.785,797,2.041,994,4.316,995,2.383,996,4.524,997,3.97,998,4.863,999,2.903,1000,4.863,1001,5.382,1002,3.97,1003,3.97,1004,2.903,1005,2.903,1006,2.903,1007,2.903,1008,2.903,1009,3.97,1010,2.903,1011,2.903,1012,2.903,1013,2.903,1014,2.903,1015,3.97,1016,3.97,1017,3.97,1018,3.97,1019,3.97,1020,3.97,1021,3.259,1022,3.259]],["title/components/SubmissionsComponent.html",[0,0.148,59,0.671]],["body/components/SubmissionsComponent.html",[0,0.238,1,0.539,2,0.28,3,0.237,4,0.828,5,0.828,6,0.828,7,0.828,8,0.195,10,0.828,11,1.944,12,1.922,14,1.205,16,1.205,18,0.237,19,0.977,21,1.344,22,0.681,23,0.042,24,0.977,25,0.977,26,0.734,28,0.528,29,0.237,30,0.237,31,0.156,32,0.671,33,1.086,34,1.421,35,1.205,36,1.08,37,0.828,38,0.72,39,0.828,40,0.539,41,0.828,42,0.539,43,1.28,44,0.828,45,0.602,46,0.828,47,0.539,48,1.28,49,0.828,50,0.539,51,0.828,52,0.539,53,0.828,54,0.539,55,0.828,56,0.539,57,0.602,58,0.828,59,1.016,60,1.649,61,0.828,62,0.023,63,0.023,110,1.649,143,0.619,152,0.374,155,0.705,158,1.66,161,0.877,162,0.877,165,0.877,193,0.919,199,2.1,223,2.401,284,1.339,285,1.578,301,1.734,302,2.72,303,1.443,304,1.755,306,1.14,310,2.461,324,1.649,325,1.022,326,1.649,328,1.926,355,1.86,361,2.831,524,1.443,592,2.1,642,2.804,644,1.277,648,2.1,652,3.306,654,2.804,663,2.804,664,2.804,665,2.804,666,2.401,667,2.804,715,2.804,719,1.443,720,3.306,721,3.56,722,4.028,723,2.804,724,2.89,725,2.89,726,2.89,727,1.926,728,1.926,730,2.401,744,1.926,745,1.926,746,1.926,747,1.926,748,3.631,749,2.804,750,3.306,751,2.804,752,1.926,753,1.926,754,1.926,755,1.926,756,1.926,757,2.831,758,3.306,759,2.401,760,1.926,761,1.926,785,1.926,787,2.804,848,3.859,887,1.926,1023,1.926,1024,4.027,1025,3.415,1026,4.423,1027,4.423,1028,4.423,1029,4.701,1030,3.415,1031,3.415,1032,2.346,1033,2.346,1034,2.346,1035,2.346,1036,2.346,1037,2.346,1038,2.346,1039,3.415,1040,3.415,1041,3.415,1042,3.415,1043,2.346,1044,4.423,1045,3.415,1046,3.415,1047,2.346,1048,4.423,1049,3.415,1050,2.346,1051,2.346,1052,2.346,1053,2.346,1054,2.346,1055,2.346,1056,2.346,1057,2.346,1058,2.346,1059,3.415,1060,3.415,1061,3.415,1062,3.415,1063,3.415,1064,2.346,1065,4.027,1066,2.346,1067,3.415,1068,2.346,1069,3.415,1070,3.415,1071,3.415,1072,2.346,1073,2.346,1074,2.346,1075,2.346,1076,3.415,1077,4.027,1078,3.415,1079,2.346,1080,3.415,1081,3.415,1082,2.346,1083,2.346,1084,2.346,1085,2.346,1086,2.346,1087,2.346,1088,3.415,1089,3.415,1090,2.346,1091,2.346,1092,2.346,1093,2.346,1094,2.346]],["title/classes/User.html",[31,0.195,158,1.419]],["body/classes/User.html",[2,0.283,3,0.24,8,0.198,13,0.839,18,0.24,19,0.986,20,1.67,21,1.665,22,0.618,23,0.042,26,0.618,28,0.588,29,0.24,30,0.348,31,0.27,36,1.022,38,0.656,57,0.885,62,0.023,63,0.023,74,0.839,76,1.461,137,0.478,138,1.67,139,1.768,140,1.461,141,1.461,142,1.461,144,2.264,145,1.67,146,1.95,148,1.67,150,1.95,152,0.379,155,0.81,156,1.67,158,2.766,163,4.483,166,1.95,167,3.464,169,2.836,170,3.128,172,1.95,173,2.395,175,1.67,177,1.67,178,1.67,180,1.461,181,1.95,182,1.67,183,1.95,184,1.59,185,1.95,186,1.294,187,1.67,188,3.128,189,0.931,190,1.67,191,1.67,192,1.461,193,1.931,194,3.33,195,1.95,196,1.95,197,1.95,198,1.95,199,1.461,200,1.95,201,1.95,202,3.128,203,2.974,204,1.95,205,1.95,206,1.95,207,1.95,208,3.33,209,2.83,210,1.95,211,0.931,212,1.294,213,2.83,214,3.79,215,3.03,216,2.83,217,2.83,218,3.33,219,2.83,220,2.83,221,3.653,222,4.045,223,1.67,224,2.423,225,2.851,226,1.95,227,1.67,228,1.95,229,1.95,230,1.95,231,1.95,232,1.95,233,1.95,234,2.83,235,3.33,236,3.33,237,3.33,238,3.33,239,1.95,240,1.95,241,1.95,242,1.95,243,1.95,244,1.95,245,1.155,246,1.67,247,1.95,248,1.95,249,1.95,250,1.95,251,1.95,252,2.83,253,2.83,254,1.95,255,1.95,256,1.95,257,1.95,258,1.67,259,1.95,260,1.95,261,1.95,262,1.95,263,1.95,264,2.83,265,1.95,266,1.67,267,1.95,268,1.95,269,1.95,270,1.95,271,1.95,272,1.95,273,1.95,274,1.877,275,1.95,276,1.67,277,1.67,278,1.95,279,1.95,280,1.155,281,1.67,282,1.67,1095,2.376,1096,2.376,1097,2.376,1098,2.376]],["title/coverage.html",[1099,3.272]],["body/coverage.html",[0,0.295,1,0.809,8,0.293,9,2.89,22,0.489,23,0.041,31,0.235,40,0.809,42,0.809,45,0.904,47,0.809,50,0.809,52,0.809,54,0.809,56,0.809,59,0.809,62,0.031,63,0.031,74,1.243,85,1.711,95,2.475,112,2.475,117,2.475,122,2.475,124,2.475,137,0.783,138,3.171,158,1.711,186,2.456,193,1.38,283,2.89,304,1.534,310,2.949,393,2.165,394,2.89,395,2.475,396,2.89,598,2.89,599,2.89,606,1.534,644,1.917,656,2.89,657,2.89,695,3.171,700,2.475,733,3.171,734,2.89,762,2.89,788,2.89,799,1.917,800,2.89,822,2.475,823,2.89,872,2.475,873,2.89,874,2.89,875,2.89,943,2.89,994,2.89,995,2.89,1023,2.89,1099,2.89,1100,2.89,1101,3.521,1102,3.521,1103,3.521,1104,4.977,1105,3.521,1106,3.521,1107,3.521,1108,3.521,1109,3.703,1110,3.521,1111,3.414,1112,5.552,1113,4.511,1114,3.521,1115,4.977,1116,3.521,1117,4.511,1118,3.521,1119,2.89,1120,2.89,1121,3.703,1122,2.89,1123,2.89,1124,3.521]],["title/dependencies.html",[66,2.16,1125,2.439]],["body/dependencies.html",[23,0.042,29,0.407,62,0.033,63,0.033,66,2.479,80,4.03,81,3.451,84,3.31,85,1.959,87,3.31,90,2.834,110,2.834,128,3.31,180,2.479,184,1.58,852,3.31,1126,4.032,1127,5.945,1128,4.032,1129,4.032,1130,4.032,1131,4.032,1132,4.909,1133,4.032,1134,3.31,1135,4.032,1136,4.032,1137,4.032,1138,4.032,1139,4.032,1140,4.032,1141,4.032,1142,4.032,1143,4.032,1144,3.31,1145,4.032,1146,4.032,1147,4.032,1148,4.032,1149,4.032,1150,4.032,1151,4.032,1152,4.032,1153,3.31,1154,4.032,1155,4.032,1156,4.032,1157,4.032,1158,4.032,1159,4.032,1160,4.032]],["title/index.html",[18,0.246,1161,2.439,1162,2.439]],["body/index.html",[0,0.28,3,0.451,8,0.289,23,0.03,33,1.104,38,0.482,62,0.03,63,0.03,69,2.749,77,3.143,184,1.938,193,1.361,227,3.671,245,1.687,258,2.441,280,2.173,337,2.85,356,2.441,357,2.85,359,2.135,375,2.85,380,2.749,571,2.693,740,4.436,759,2.441,807,2.85,815,2.85,816,2.85,844,2.85,888,2.441,913,3.143,931,2.441,1021,3.67,1022,4.059,1100,2.85,1111,2.135,1134,3.67,1144,2.85,1153,2.85,1163,4.471,1164,5.7,1165,3.472,1166,4.945,1167,4.945,1168,3.472,1169,4.471,1170,3.472,1171,3.472,1172,4.471,1173,3.472,1174,4.945,1175,3.472,1176,3.472,1177,3.472,1178,3.472,1179,3.472,1180,3.472,1181,3.472,1182,3.472,1183,3.472,1184,3.472,1185,3.472,1186,3.472,1187,3.472,1188,3.472,1189,3.472,1190,5.531,1191,3.472,1192,3.472,1193,3.472,1194,5.222,1195,3.472,1196,3.472,1197,3.472,1198,3.472,1199,3.472,1200,5.222,1201,3.472,1202,3.472,1203,3.472,1204,3.472,1205,3.472,1206,3.472,1207,3.472,1208,4.471,1209,2.85,1210,3.472,1211,3.472,1212,5.222,1213,3.472,1214,3.472,1215,3.472,1216,4.471,1217,4.471,1218,3.472,1219,3.472,1220,3.472,1221,4.471,1222,3.472,1223,3.472,1224,4.471,1225,3.472,1226,3.472,1227,3.472,1228,3.472,1229,3.472,1230,3.472,1231,3.472,1232,3.472,1233,3.472,1234,3.472,1235,3.472,1236,3.472,1237,3.472,1238,3.472,1239,3.472,1240,3.472,1241,3.472]],["title/modules.html",[64,2.17]],["body/modules.html",[23,0.037,62,0.037,63,0.037,64,2.563,65,2.894,81,3.308,1242,4.706,1243,4.706,1244,4.706]],["title/overview.html",[1245,3.272]],["body/overview.html",[0,0.2,1,1.329,23,0.041,30,0.397,31,0.262,32,1.127,40,1.204,42,1.204,45,1.345,47,1.204,50,1.204,52,1.204,54,1.204,56,1.204,59,1.204,62,0.033,63,0.033,64,2.636,65,3.769,66,2.423,67,2.77,68,3.234,69,2.423,70,3.234,71,3.234,72,3.234,73,3.234,74,1.849,75,3.974,76,2.423,77,2.77,137,0.547,310,1.915,343,3.974,693,3.234,1245,3.234,1246,3.94]],["title/routes.html",[89,2.451]],["body/routes.html",[23,0.037,62,0.037,63,0.037,89,2.924]],["title/miscellaneous/variables.html",[1111,2.16,1247,2.002]],["body/miscellaneous/variables.html",[18,0.416,22,0.742,23,0.041,24,1.528,25,1.528,62,0.034,63,0.034,85,2.597,140,3.059,141,3.059,142,3.059,186,3.143,695,2.896,700,3.757,797,2.896,798,4.084,831,3.413,1109,3.382,1111,2.533,1119,3.382,1120,3.382,1121,3.382,1122,4.387,1123,4.387,1209,4.084,1247,3.382,1248,4.12,1249,4.975,1250,4.12,1251,4.12,1252,4.12,1253,4.12,1254,4.12,1255,4.12,1256,4.12,1257,4.12]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":310,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.09",{"_index":702,"title":{},"body":{"components/MapComponent.html":{}}}],["0.12.7",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":1083,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["0.7.2",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1105,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":731,"title":{},"body":{"components/MapComponent.html":{}}}],["1",{"_index":343,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"overview.html":{}}}],["1.6.0",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["1.9.1",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["1/8",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":693,"title":{},"body":{"components/HomeEnvComponent.html":{},"overview.html":{}}}],["100",{"_index":730,"title":{},"body":{"components/MapComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["1000",{"_index":928,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["1000px",{"_index":729,"title":{},"body":{"components/MapComponent.html":{}}}],["10px",{"_index":787,"title":{},"body":{"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["11",{"_index":311,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["12",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":703,"title":{},"body":{"components/MapComponent.html":{}}}],["14px",{"_index":1086,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["16px",{"_index":1071,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["18",{"_index":678,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["1em",{"_index":722,"title":{},"body":{"components/MapComponent.html":{},"components/SubmissionsComponent.html":{}}}],["2",{"_index":345,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["2.1.0",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["2.23.0",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["2.7.2",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["2.7.3",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":691,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["2017",{"_index":664,"title":{},"body":{"components/HomeEnvComponent.html":{},"components/SubmissionsComponent.html":{}}}],["2019",{"_index":667,"title":{},"body":{"components/HomeEnvComponent.html":{},"components/SubmissionsComponent.html":{}}}],["20px",{"_index":1077,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["2em",{"_index":723,"title":{},"body":{"components/MapComponent.html":{},"components/SubmissionsComponent.html":{}}}],["3.2.2",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":686,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["4.16.4",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":680,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["400px",{"_index":649,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["450px",{"_index":1091,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["4px",{"_index":1079,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["5",{"_index":676,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["500",{"_index":925,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["5px",{"_index":728,"title":{},"body":{"components/MapComponent.html":{},"components/SubmissionsComponent.html":{}}}],["6",{"_index":666,"title":{},"body":{"components/HomeEnvComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["6.0.0",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["6.0.2",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["6.1.10",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["6.2.5",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":689,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["7",{"_index":1246,"title":{},"body":{"overview.html":{}}}],["8",{"_index":592,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/SubmissionsComponent.html":{}}}],["8px",{"_index":1080,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["_",{"_index":858,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["_.countby(object",{"_index":869,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["_.map(key",{"_index":864,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["_.mixin",{"_index":859,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["_.object(key",{"_index":863,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["_.sortbi",{"_index":846,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["_.sortby(_.keys(obj",{"_index":861,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["_.sortkeysby(object",{"_index":855,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["access",{"_index":336,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/ParseService.html":{}}}],["activatedrout",{"_index":1000,"title":{},"body":{"components/SignInComponent.html":{}}}],["actual_compon",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["add",{"_index":850,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["addto(map",{"_index":708,"title":{},"body":{"components/MapComponent.html":{}}}],["ag",{"_index":674,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["again",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["alert",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["alerter.dismiss",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["alerter.pres",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["align",{"_index":756,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["alphanumer",{"_index":847,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["alreadi",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["altern",{"_index":1092,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["and/or",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["angular",{"_index":1164,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"components/MyNavComponent.html":{}}}],["angular/cli",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"dependencies.html":{}}}],["angular/core/test",{"_index":777,"title":{},"body":{"components/MyNavComponent.html":{}}}],["angular/form",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"components/SubmissionsComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"components/SignInComponent.html":{},"dependencies.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["app.compon",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["app/providers/auth/auth.servic",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":1167,"title":{},"body":{"index.html":{}}}],["applyfilt",{"_index":1030,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["applyfilter(filtervalu",{"_index":1032,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["appmodul",{"_index":65,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["area",{"_index":745,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["arg",{"_index":405,"title":{},"body":{"injectables/DataExportService.html":{}}}],["args.columndelimit",{"_index":574,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["args.data",{"_index":572,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["args.filenam",{"_index":588,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["args.linedelimit",{"_index":576,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["array",{"_index":349,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["array.length",{"_index":352,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["array.reduc",{"_index":350,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["array_to_export",{"_index":407,"title":{},"body":{"injectables/DataExportService.html":{}}}],["arrayofmatchenvfil",{"_index":288,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["artifact",{"_index":1205,"title":{},"body":{"index.html":{}}}],["asid",{"_index":735,"title":{},"body":{"components/MyAsideComponent.html":{}}}],["aside'},{'nam",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["aside.compon",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["aside.component.html",{"_index":737,"title":{},"body":{"components/MyAsideComponent.html":{}}}],["aside.component.scss",{"_index":736,"title":{},"body":{"components/MyAsideComponent.html":{}}}],["aside.component.t",{"_index":734,"title":{},"body":{"components/MyAsideComponent.html":{},"coverage.html":{}}}],["aside.component.ts:12",{"_index":739,"title":{},"body":{"components/MyAsideComponent.html":{}}}],["aside.component.ts:8",{"_index":738,"title":{},"body":{"components/MyAsideComponent.html":{}}}],["aside/mi",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"components/MyAsideComponent.html":{},"coverage.html":{}}}],["assess",{"_index":780,"title":{},"body":{"components/MyNavComponent.html":{}}}],["assessmentandevalu",{"_index":556,"title":{},"body":{"injectables/DataExportService.html":{}}}],["asset",{"_index":710,"title":{},"body":{"components/MapComponent.html":{}}}],["async",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"classes/User.html":{}}}],["attribut",{"_index":705,"title":{},"body":{"components/MapComponent.html":{}}}],["auth",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"classes/User.html":{}}}],["auth:authservic",{"_index":628,"title":{},"body":{"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{}}}],["authent",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["author",{"_index":806,"title":{},"body":{"injectables/ParseService.html":{}}}],["authpvdr",{"_index":1003,"title":{},"body":{"components/SignInComponent.html":{}}}],["authservic",{"_index":74,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"classes/User.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":786,"title":{},"body":{"components/MyNavComponent.html":{}}}],["averag",{"_index":348,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/HomeEnvComponent.html":{}}}],["await",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/SignInComponent.html":{},"classes/User.html":{}}}],["b",{"_index":716,"title":{},"body":{"components/MapComponent.html":{}}}],["back4app",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["backend",{"_index":807,"title":{},"body":{"injectables/ParseService.html":{},"index.html":{}}}],["background",{"_index":652,"title":{},"body":{"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["bad",{"_index":367,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["base",{"_index":888,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"index.html":{}}}],["below",{"_index":918,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["biggestproblemofcommun",{"_index":479,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["biggestproblemofcommunity:nul",{"_index":521,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["bloodoxygen",{"_index":531,"title":{},"body":{"injectables/DataExportService.html":{}}}],["bloodpressur",{"_index":530,"title":{},"body":{"injectables/DataExportService.html":{}}}],["bloodsugar",{"_index":551,"title":{},"body":{"injectables/DataExportService.html":{}}}],["bloodsugar:nul",{"_index":532,"title":{},"body":{"injectables/DataExportService.html":{}}}],["bmi",{"_index":526,"title":{},"body":{"injectables/DataExportService.html":{}}}],["boolean",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NavbarService.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":1072,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["bottom",{"_index":1069,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["box",{"_index":750,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["brand",{"_index":725,"title":{},"body":{"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["break",{"_index":761,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["breakpoint",{"_index":775,"title":{},"body":{"components/MyNavComponent.html":{}}}],["breakpointobserv",{"_index":767,"title":{},"body":{"components/MyNavComponent.html":{}}}],["breakpointst",{"_index":776,"title":{},"body":{"components/MyNavComponent.html":{}}}],["brought",{"_index":1183,"title":{},"body":{"index.html":{}}}],["brows",{"_index":1244,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1194,"title":{},"body":{"index.html":{}}}],["build:productioncod",{"_index":1210,"title":{},"body":{"index.html":{}}}],["buildth",{"_index":1204,"title":{},"body":{"index.html":{}}}],["bulma",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["button",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["c",{"_index":717,"title":{},"body":{"components/MapComponent.html":{}}}],["capabl",{"_index":1182,"title":{},"body":{"index.html":{}}}],["card",{"_index":646,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["cd",{"_index":1198,"title":{},"body":{"index.html":{}}}],["cedulanumb",{"_index":459,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["center",{"_index":757,"title":{},"body":{"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["chart",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"components/HomeEnvComponent.html":{},"components/MyAsideComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["chart.j",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["chart1",{"_index":1087,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["chart2",{"_index":1090,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["chartsmodul",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["check",{"_index":357,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"index.html":{}}}],["citi",{"_index":449,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["class",{"_index":31,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":1134,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["clinic",{"_index":377,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["clinicaccess",{"_index":489,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["clinicprovid",{"_index":457,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["clone",{"_index":1197,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":813,"title":{},"body":{"injectables/ParseService.html":{},"injectables/QueryService.html":{}}}],["cluster_appmodul",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["collect",{"_index":380,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/HomeEnvComponent.html":{},"index.html":{}}}],["color",{"_index":724,"title":{},"body":{"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["color:$brand",{"_index":1085,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["colum",{"_index":959,"title":{},"body":{"injectables/QueryService.html":{}}}],["column",{"_index":957,"title":{},"body":{"injectables/QueryService.html":{}}}],["columndelimit",{"_index":569,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["commun",{"_index":356,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/MapComponent.html":{},"index.html":{}}}],["communityanalysi",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{}}}],["communityanalysis'},{'nam",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["communityanalysis.component.html",{"_index":287,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["communityanalysis.component.scss",{"_index":286,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["communityanalysiscompon",{"_index":40,"title":{"components/CommunityAnalysisComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["communitynam",{"_index":447,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["compar",{"_index":860,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["comparator(obj[key",{"_index":862,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component:submissionscompon",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["component_templ",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["condit",{"_index":366,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["conditionoffloor",{"_index":495,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["conditionofroof",{"_index":497,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["console.log",{"_index":971,"title":{},"body":{"injectables/QueryService.html":{}}}],["console.log(\"error",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["console.log(\"password",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["console.log(\"th",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["console.log(\"tri",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["console.log('initi",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["console.log('us",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["console.log(array",{"_index":426,"title":{},"body":{"injectables/DataExportService.html":{}}}],["console.log(error",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"injectables/QueryService.html":{},"classes/User.html":{}}}],["console.log(this.dictstoexport",{"_index":616,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["const",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/MapComponent.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["constant",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["constructor",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{}}}],["constructor(authpvdr",{"_index":999,"title":{},"body":{"components/SignInComponent.html":{}}}],["constructor(breakpointobserv",{"_index":766,"title":{},"body":{"components/MyNavComponent.html":{}}}],["constructor(nav",{"_index":660,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["constructor(pars",{"_index":879,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["constructor(priv",{"_index":325,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{}}}],["constructor(queri",{"_index":303,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["containedqueri",{"_index":944,"title":{},"body":{"injectables/QueryService.html":{}}}],["containedquery(2000,surveydata,organization,puent",{"_index":960,"title":{},"body":{"injectables/QueryService.html":{}}}],["containedquery(limit",{"_index":952,"title":{},"body":{"injectables/QueryService.html":{}}}],["content",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{}}}],["context",{"_index":1122,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contribut",{"_index":1228,"title":{},"body":{"index.html":{}}}],["contributor",{"_index":707,"title":{},"body":{"components/MapComponent.html":{}}}],["convertarrayofobjectstocsv",{"_index":397,"title":{},"body":{"injectables/DataExportService.html":{}}}],["convertarrayofobjectstocsv(arg",{"_index":403,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["core",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["corner",{"_index":1075,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["corpor",{"_index":1179,"title":{},"body":{"index.html":{}}}],["correct",{"_index":1217,"title":{},"body":{"index.html":{}}}],["count",{"_index":834,"title":{},"body":{"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{}}}],["count_based_on_object_key",{"_index":824,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["count_based_on_object_keys(object",{"_index":828,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["count_based_on_object_keys(objects,keys_of_objects:str",{"_index":868,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["count_based_on_object_keys(results,&#39;occupation&#39",{"_index":836,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["count_based_on_object_keys(results,'occup",{"_index":867,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["count_sex_education_by_organ",{"_index":876,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["count_sex_education_by_organization(&#39;puente&#39;,&#39;lessthanprimary&#39;,&#39;male&#39",{"_index":889,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["count_sex_education_by_organization('puente','lessthanprimary','mal",{"_index":929,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["count_sex_education_by_organization(organ",{"_index":881,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["count_sex_education_by_organization(organization:string,educationlevelparam:string,sexparam:str",{"_index":930,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["countqueri",{"_index":945,"title":{},"body":{"injectables/QueryService.html":{}}}],["countquery(organ",{"_index":961,"title":{},"body":{"injectables/QueryService.html":{}}}],["cover",{"_index":655,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["coverag",{"_index":1099,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"classes/User.html":{},"index.html":{}}}],["createdat",{"_index":1042,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["css",{"_index":1185,"title":{},"body":{"index.html":{}}}],["csv",{"_index":586,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["csv.match(/^data:text/csv/i",{"_index":618,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["csv.match(/^data:text\\/csv/i",{"_index":590,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["ctr",{"_index":567,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["currentus",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["custom.service.t",{"_index":875,"title":{},"body":{"injectables/QueryCustomService.html":{},"coverage.html":{}}}],["custom.service.ts:101",{"_index":884,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["custom.service.ts:21",{"_index":896,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["custom.service.ts:60",{"_index":892,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["custom.service.ts:7",{"_index":880,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["custom/queri",{"_index":874,"title":{},"body":{"injectables/QueryCustomService.html":{},"coverage.html":{}}}],["d",{"_index":718,"title":{},"body":{"components/MapComponent.html":{}}}],["dash",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboard",{"_index":355,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["dashboarddata.age_average}}yr",{"_index":675,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["dashboarddata.age_under18",{"_index":679,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["dashboarddata.age_under40",{"_index":681,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["dashboarddata.age_under5",{"_index":677,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["dashboarddata.number_of_resid",{"_index":669,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["dashboarddata.number_of_residents_femal",{"_index":673,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["dashboarddata.number_of_residents_mal",{"_index":671,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["dashboarddata.occupation_highest",{"_index":683,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["dashboarddata.occupation_highest_nam",{"_index":682,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["data",{"_index":571,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MyAsideComponent.html":{},"index.html":{}}}],["data.foreach(function(item",{"_index":580,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["data.length",{"_index":573,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["data:dataexportservic",{"_index":630,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["data:text/csv;charset=utf",{"_index":591,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["datacollector",{"_index":461,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["dataexportservic",{"_index":393,"title":{"injectables/DataExportService.html":{}},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"coverage.html":{}}}],["datalist",{"_index":1026,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["datasourc",{"_index":1027,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["debug",{"_index":1203,"title":{},"body":{"index.html":{}}}],["declar",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"components/MapComponent.html":{},"overview.html":{}}}],["decor",{"_index":1045,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["default",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{}}}],["demo",{"_index":1227,"title":{},"body":{"index.html":{}}}],["demographicobject",{"_index":414,"title":{},"body":{"injectables/DataExportService.html":{}}}],["demographicobject.get('c",{"_index":510,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["demographicobject.get('cedulanumb",{"_index":515,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["demographicobject.get('clinicprovid",{"_index":514,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["demographicobject.get('communitynam",{"_index":509,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["demographicobject.get('dob",{"_index":504,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["demographicobject.get('educationlevel",{"_index":507,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["demographicobject.get('fnam",{"_index":502,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["demographicobject.get('insurancenumb",{"_index":512,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["demographicobject.get('insuranceprovid",{"_index":513,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["demographicobject.get('latitud",{"_index":517,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["demographicobject.get('lnam",{"_index":503,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["demographicobject.get('longitud",{"_index":518,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["demographicobject.get('marriagestatu",{"_index":506,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["demographicobject.get('occup",{"_index":508,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["demographicobject.get('provinc",{"_index":511,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["demographicobject.get('sex",{"_index":505,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["demographicobject.get('surveyingus",{"_index":516,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["dentalproblemswheredoyougo",{"_index":473,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["depend",{"_index":66,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1188,"title":{},"body":{"index.html":{}}}],["descript",{"_index":811,"title":{},"body":{"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["design",{"_index":1241,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1186,"title":{},"body":{"index.html":{}}}],["development/product",{"_index":1225,"title":{},"body":{"index.html":{}}}],["dictstoexport",{"_index":602,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["direct",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1213,"title":{},"body":{"index.html":{}}}],["directive|service|etc",{"_index":1219,"title":{},"body":{"index.html":{}}}],["directli",{"_index":1234,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1208,"title":{},"body":{"index.html":{}}}],["dirt",{"_index":368,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["display",{"_index":748,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["displayedcolumn",{"_index":1028,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["dist",{"_index":1207,"title":{},"body":{"index.html":{}}}],["dob",{"_index":437,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["document",{"_index":1100,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["document.createelement('a",{"_index":594,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["dosignin",{"_index":998,"title":{},"body":{"components/SignInComponent.html":{}}}],["downloadcsv",{"_index":398,"title":{},"body":{"injectables/DataExportService.html":{}}}],["downloadcsv(arg",{"_index":406,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["downloadcsv(args,array_to_export",{"_index":583,"title":{},"body":{"injectables/DataExportService.html":{}}}],["dynam",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["educ",{"_index":886,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["educationlevel",{"_index":443,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["educationlevelparam",{"_index":882,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["element",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["email",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["encodeuri(csv",{"_index":593,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["end",{"_index":816,"title":{},"body":{"injectables/ParseService.html":{},"index.html":{}}}],["enumer",{"_index":842,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["env",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"components/HomeEnvComponent.html":{}}}],["env'},{'nam",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["env.compon",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["env.component.html",{"_index":659,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["env.component.scss",{"_index":658,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["env.component.t",{"_index":657,"title":{},"body":{"components/HomeEnvComponent.html":{},"coverage.html":{}}}],["env.component.ts:10",{"_index":661,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["env.component.ts:14",{"_index":662,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["env/hom",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"components/HomeEnvComponent.html":{},"coverage.html":{}}}],["envform",{"_index":424,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environ",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment",{"_index":359,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/HomeEnvComponent.html":{},"components/MyAsideComponent.html":{},"index.html":{}}}],["environment.parseappid",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["environment.parsejavascriptkey",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["environment.parseserverurl",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["environmentalhealthresult",{"_index":432,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('biggestproblemofcommunity').replace(/,/g",{"_index":480,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('c",{"_index":450,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('cedulanumb",{"_index":460,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('clinicprovid",{"_index":458,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('communitynam",{"_index":448,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('dob",{"_index":438,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('educationlevel",{"_index":444,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('fnam",{"_index":434,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('insurancenumb",{"_index":454,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('insuranceprovid",{"_index":456,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('latitud",{"_index":464,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('lnam",{"_index":436,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('longitud",{"_index":466,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('marriagestatu",{"_index":442,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('occup",{"_index":446,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('provinc",{"_index":452,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('sex",{"_index":440,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('surveyingorgan",{"_index":500,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('client').get('surveyingus",{"_index":462,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('clinicaccess",{"_index":490,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('conditionofloorinyourhous",{"_index":496,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('conditionoroofinyourhous",{"_index":498,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('dentalproblemswheredoyougo",{"_index":474,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('houseownership",{"_index":482,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('latrineaccess",{"_index":484,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('medicalproblemswheredoyougo",{"_index":472,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('numberofchildrenlivinginhouseundertheageof5",{"_index":478,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('numberofindividualslivinginthehous",{"_index":476,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('timesperweektrashcollect",{"_index":492,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('typeofwaterdoyoudrink",{"_index":488,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('wateraccess",{"_index":486,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('wheretrashleftbetweenpickup",{"_index":494,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('yearslivedinthecommun",{"_index":468,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environmentalhealthresults.get('yearslivedinthishous",{"_index":470,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["environments/environment.prod",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["error",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"classes/User.html":{}}}],["error.cod",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["error.messag",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["es",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["evalmed",{"_index":428,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical','envform','vit",{"_index":620,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["evalmedical.get('assessmentandevalu",{"_index":564,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('client').get('dob",{"_index":562,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('client').get('fnam",{"_index":560,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('client').get('lnam",{"_index":561,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('client').get('sex",{"_index":563,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('not",{"_index":566,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('planofact",{"_index":565,"title":{},"body":{"injectables/DataExportService.html":{}}}],["exactlyonequeri",{"_index":946,"title":{},"body":{"injectables/QueryService.html":{}}}],["exactlyonequery(parseobject",{"_index":965,"title":{},"body":{"injectables/QueryService.html":{}}}],["exampl",{"_index":645,"title":{},"body":{"components/FirstPageComponent.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["explor",{"_index":781,"title":{},"body":{"components/MyNavComponent.html":{}}}],["export",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"overview.html":{}}}],["export',component:firstpagecompon",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["export.csv",{"_index":589,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["export.servic",{"_index":626,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["export.service.t",{"_index":396,"title":{},"body":{"injectables/DataExportService.html":{},"coverage.html":{}}}],["export.service.ts:13",{"_index":411,"title":{},"body":{"injectables/DataExportService.html":{}}}],["export.service.ts:138",{"_index":418,"title":{},"body":{"injectables/DataExportService.html":{}}}],["export.service.ts:202",{"_index":413,"title":{},"body":{"injectables/DataExportService.html":{}}}],["export.service.ts:240",{"_index":404,"title":{},"body":{"injectables/DataExportService.html":{}}}],["export.service.ts:272",{"_index":408,"title":{},"body":{"injectables/DataExportService.html":{}}}],["export.service.ts:48",{"_index":416,"title":{},"body":{"injectables/DataExportService.html":{}}}],["export.service.ts:8",{"_index":402,"title":{},"body":{"injectables/DataExportService.html":{}}}],["export/data",{"_index":395,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"coverage.html":{}}}],["express",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["f.name",{"_index":712,"title":{},"body":{"components/MapComponent.html":{}}}],["fail",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["fals",{"_index":797,"title":{},"body":{"injectables/NavbarService.html":{},"components/SignInComponent.html":{},"miscellaneous/variables.html":{}}}],["femal",{"_index":672,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["field",{"_index":1067,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["field.mat",{"_index":1066,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{}}}],["filenam",{"_index":584,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["filtervalu",{"_index":1034,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["final_array",{"_index":421,"title":{},"body":{"injectables/DataExportService.html":{}}}],["final_array.push(array",{"_index":427,"title":{},"body":{"injectables/DataExportService.html":{}}}],["final_array.push(result",{"_index":423,"title":{},"body":{"injectables/DataExportService.html":{}}}],["first",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["firstnam",{"_index":433,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["firstpagecompon",{"_index":42,"title":{"components/FirstPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["flex",{"_index":751,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["flexbox",{"_index":753,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["floor",{"_index":365,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["fname",{"_index":1039,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["focus",{"_index":1064,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["folder",{"_index":1221,"title":{},"body":{"index.html":{}}}],["font",{"_index":1070,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["for(let",{"_index":329,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["forgot",{"_index":1020,"title":{},"body":{"components/SignInComponent.html":{}}}],["forgotpassword",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword(email",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword(email:str",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["form",{"_index":361,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["formsmodul",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["framework",{"_index":1173,"title":{},"body":{"index.html":{}}}],["friendli",{"_index":1184,"title":{},"body":{"index.html":{}}}],["front",{"_index":815,"title":{},"body":{"injectables/ParseService.html":{},"index.html":{}}}],["function",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"classes/User.html":{}}}],["function(error",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["function(person",{"_index":870,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["functionnam",{"_index":812,"title":{},"body":{"injectables/ParseService.html":{}}}],["functionrequest",{"_index":809,"title":{},"body":{"injectables/ParseService.html":{}}}],["functionrequest:ani",{"_index":820,"title":{},"body":{"injectables/ParseService.html":{}}}],["further",{"_index":1237,"title":{},"body":{"index.html":{}}}],["gener",{"_index":740,"title":{},"body":{"components/MyAsideComponent.html":{},"index.html":{}}}],["genericqueri",{"_index":947,"title":{},"body":{"injectables/QueryService.html":{}}}],["genericquery(parseobject",{"_index":967,"title":{},"body":{"injectables/QueryService.html":{}}}],["genericquery(surveydata",{"_index":969,"title":{},"body":{"injectables/QueryService.html":{}}}],["get",{"_index":1161,"title":{"index.html":{}},"body":{}}],["getallobject",{"_index":615,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["git",{"_index":1196,"title":{},"body":{"index.html":{}}}],["github",{"_index":1193,"title":{},"body":{"index.html":{}}}],["given",{"_index":841,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["go",{"_index":1238,"title":{},"body":{"index.html":{}}}],["googl",{"_index":1177,"title":{},"body":{"index.html":{}}}],["gt",{"_index":854,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["hack",{"_index":940,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["header",{"_index":650,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["heading,.titl",{"_index":754,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["health",{"_index":741,"title":{},"body":{"components/MyAsideComponent.html":{}}}],["height",{"_index":524,"title":{},"body":{"injectables/DataExportService.html":{},"components/MapComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["hello",{"_index":948,"title":{},"body":{"injectables/QueryService.html":{}}}],["help",{"_index":1022,"title":{},"body":{"components/SignInComponent.html":{},"index.html":{}}}],["hemoglobinlevel",{"_index":548,"title":{},"body":{"injectables/DataExportService.html":{}}}],["hemoglobinlevels:nul",{"_index":534,"title":{},"body":{"injectables/DataExportService.html":{}}}],["heroku",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["hide",{"_index":790,"title":{},"body":{"injectables/NavbarService.html":{}}}],["histori",{"_index":360,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["home",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["home'},{'nam",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["homecompon",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homeenvcompon",{"_index":47,"title":{"components/HomeEnvComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["houseownership",{"_index":481,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["houseownership:nul",{"_index":522,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["html",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"index.html":{}}}],["https://hopetambala.github.io/puent",{"_index":1235,"title":{},"body":{"index.html":{}}}],["https://parseapi.back4app.com",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i'm",{"_index":939,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["i0",{"_index":338,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["i=0",{"_index":330,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["id",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"classes/User.html":{}}}],["identifi",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["imag",{"_index":651,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["implement",{"_index":284,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["import",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{}}}],["improv",{"_index":1231,"title":{},"body":{"index.html":{}}}],["in'},{'nam",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["in.compon",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["in.component.html",{"_index":997,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.scss",{"_index":996,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.t",{"_index":995,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{}}}],["in.component.ts:16",{"_index":1006,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:17",{"_index":1002,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:25",{"_index":1005,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:28",{"_index":1004,"title":{},"body":{"components/SignInComponent.html":{}}}],["in/sign",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"components/SignInComponent.html":{},"coverage.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["individu",{"_index":1178,"title":{},"body":{"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{}}}],["infrastructur",{"_index":1189,"title":{},"body":{"index.html":{}}}],["inject",{"_index":137,"title":{"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"classes/User.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{}}}],["insid",{"_index":1222,"title":{},"body":{"index.html":{}}}],["instal",{"_index":1195,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":1201,"title":{},"body":{"index.html":{}}}],["instead",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProcessorsService.html":{},"classes/User.html":{}}}],["insurancenumb",{"_index":453,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["insuranceprovid",{"_index":455,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["invalid",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["ionic",{"_index":1171,"title":{},"body":{"index.html":{}}}],["ishandset",{"_index":765,"title":{},"body":{"components/MyNavComponent.html":{}}}],["issu",{"_index":1224,"title":{},"body":{"index.html":{}}}],["item",{"_index":1093,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["item[key",{"_index":582,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["januari",{"_index":665,"title":{},"body":{"components/HomeEnvComponent.html":{},"components/SubmissionsComponent.html":{}}}],["jfwiqlinrhxih72j9kiotl8m0eusdry1yfiiylad",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["job",{"_index":685,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["josh",{"_index":694,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["js",{"_index":1144,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["justifi",{"_index":758,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["key",{"_index":568,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"injectables/ProcessorsService.html":{}}}],["keys.foreach(function(key",{"_index":581,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["keys.join(columndelimit",{"_index":579,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["keys_of_object",{"_index":829,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["known",{"_index":1223,"title":{},"body":{"index.html":{}}}],["l",{"_index":700,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["l.map('map').setview([51.505",{"_index":701,"title":{},"body":{"components/MapComponent.html":{}}}],["l.name",{"_index":713,"title":{},"body":{"components/MapComponent.html":{}}}],["l.tilelayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":704,"title":{},"body":{"components/MapComponent.html":{}}}],["last",{"_index":642,"title":{},"body":{"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["lastnam",{"_index":435,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["later",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["latitud",{"_index":463,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["latrin",{"_index":335,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["latrineaccess",{"_index":483,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["latrineaccessno",{"_index":289,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["latrineaccessy",{"_index":290,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["layoutmodul",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["led",{"_index":1175,"title":{},"body":{"index.html":{}}}],["left",{"_index":744,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["left:0px",{"_index":732,"title":{},"body":{"components/MapComponent.html":{}}}],["legend",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"overview.html":{}}}],["level",{"_index":887,"title":{},"body":{"injectables/QueryCustomService.html":{},"components/SubmissionsComponent.html":{}}}],["librari",{"_index":853,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["lighten($brand",{"_index":1088,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["limit",{"_index":912,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["linedelimit",{"_index":570,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["link",{"_index":585,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["link.click",{"_index":597,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["link.setattribute('download",{"_index":596,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["link.setattribute('href",{"_index":595,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["list",{"_index":832,"title":{},"body":{"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["listallpati",{"_index":949,"title":{},"body":{"injectables/QueryService.html":{}}}],["listofallid",{"_index":291,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["listpatientsbyorgan",{"_index":950,"title":{},"body":{"injectables/QueryService.html":{}}}],["listpatientsbyorganization(organ",{"_index":974,"title":{},"body":{"injectables/QueryService.html":{}}}],["listpatientsbyorganization(puent",{"_index":976,"title":{},"body":{"injectables/QueryService.html":{}}}],["lname",{"_index":1040,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["loader",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["loader.dismiss",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["loader.dismiss().then",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["loader.pres",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["local",{"_index":931,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"index.html":{}}}],["locat",{"_index":1218,"title":{},"body":{"index.html":{}}}],["log",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["login",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"components/SignInComponent.html":{},"classes/User.html":{}}}],["logout",{"_index":783,"title":{},"body":{"components/MyNavComponent.html":{}}}],["longitud",{"_index":465,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["look",{"_index":1214,"title":{},"body":{"index.html":{}}}],["main",{"_index":720,"title":{},"body":{"components/MapComponent.html":{},"components/SubmissionsComponent.html":{}}}],["male",{"_index":670,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["manag",{"_index":1170,"title":{},"body":{"index.html":{}}}],["map",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"components/MapComponent.html":{},"classes/User.html":{}}}],["map',compon",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["map'},{'nam",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["map.component.html",{"_index":697,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":696,"title":{},"body":{"components/MapComponent.html":{}}}],["mapcompon",{"_index":50,"title":{"components/MapComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["march",{"_index":663,"title":{},"body":{"components/HomeEnvComponent.html":{},"components/SubmissionsComponent.html":{}}}],["margin",{"_index":785,"title":{},"body":{"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["margin:1",{"_index":1094,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["marriagestatu",{"_index":441,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["mat",{"_index":1065,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["matbuttonmodul",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodul",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":1240,"title":{},"body":{"index.html":{}}}],["matformfieldmodul",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodul",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodul",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodul",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["matpagin",{"_index":1044,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["matpaginatormodul",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodul",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["matsort",{"_index":1048,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["matsortmodul",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabledatasourc",{"_index":1051,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["mattabledatasource(this.datalist",{"_index":1054,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["mattablemodul",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodul",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":647,"title":{},"body":{"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{}}}],["meant",{"_index":1168,"title":{},"body":{"index.html":{}}}],["medic",{"_index":742,"title":{},"body":{"components/MyAsideComponent.html":{}}}],["medicalproblemswheredoyougo",{"_index":471,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["member",{"_index":711,"title":{},"body":{"components/MapComponent.html":{}}}],["messag",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["method",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["migrat",{"_index":337,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"index.html":{}}}],["miscellan",{"_index":1247,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mixin",{"_index":851,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["mobil",{"_index":1172,"title":{},"body":{"index.html":{}}}],["model",{"_index":410,"title":{},"body":{"injectables/DataExportService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["modul",{"_index":64,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":1226,"title":{},"body":{"index.html":{}}}],["more",{"_index":375,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"index.html":{}}}],["ms",{"_index":752,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["myasidecompon",{"_index":52,"title":{"components/MyAsideComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mynavcompon",{"_index":54,"title":{"components/MyNavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["n",{"_index":577,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["name",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"index.html":{}}}],["nav",{"_index":605,"title":{},"body":{"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{}}}],["nav'},{'nam",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["nav.compon",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["nav.component.html",{"_index":764,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.scss",{"_index":763,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.t",{"_index":762,"title":{},"body":{"components/MyNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:16",{"_index":772,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.ts:18",{"_index":768,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.ts:21",{"_index":773,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.ts:22",{"_index":770,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.ts:27",{"_index":769,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav/mi",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"components/MyNavComponent.html":{},"coverage.html":{}}}],["nav:navbarservic",{"_index":629,"title":{},"body":{"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{}}}],["navbarservic",{"_index":606,"title":{"injectables/NavbarService.html":{}},"body":{"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"components/SignInComponent.html":{},"coverage.html":{}}}],["navig",{"_index":743,"title":{},"body":{"components/MyAsideComponent.html":{}}}],["nbsp;·&nbsp",{"_index":1019,"title":{},"body":{"components/SignInComponent.html":{}}}],["need",{"_index":1021,"title":{},"body":{"components/SignInComponent.html":{},"index.html":{}}}],["new",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":1212,"title":{},"body":{"index.html":{}}}],["ng2",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngmodul",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":301,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["node.j",{"_index":1191,"title":{},"body":{"index.html":{}}}],["note",{"_index":558,"title":{},"body":{"injectables/DataExportService.html":{}}}],["now",{"_index":856,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["npm",{"_index":1200,"title":{},"body":{"index.html":{}}}],["null",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"injectables/QueryService.html":{},"classes/User.html":{}}}],["number",{"_index":313,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["number=1000",{"_index":985,"title":{},"body":{"injectables/QueryService.html":{}}}],["numberofchildrenlivinginhouseundertheageof5",{"_index":477,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["numberofchildrenlivinginhouseundertheageof5:nul",{"_index":520,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["numberofid",{"_index":292,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["numberofindividualslivinginthehous",{"_index":475,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["numberofindividualslivinginthehouse:nul",{"_index":519,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["numberofmatchingid",{"_index":293,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["obj",{"_index":840,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["obj[key",{"_index":865,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["object",{"_index":831,"title":{},"body":{"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"miscellaneous/variables.html":{}}}],["object.entries(obj",{"_index":866,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["object.keys(data[0",{"_index":578,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["object_to_array_of_object",{"_index":825,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["object_to_array_of_objects(obj",{"_index":838,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["object_to_export",{"_index":430,"title":{},"body":{"injectables/DataExportService.html":{}}}],["objekt",{"_index":980,"title":{},"body":{"injectables/QueryService.html":{}}}],["observ",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"components/MyNavComponent.html":{},"classes/User.html":{}}}],["observable((observ",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["observer.complet",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["observer.error(error",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["observer.next(tru",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["occup",{"_index":445,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{}}}],["on",{"_index":837,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["onc",{"_index":372,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["oninit",{"_index":285,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["open",{"_index":1174,"title":{},"body":{"index.html":{}}}],["openstreetmap",{"_index":706,"title":{},"body":{"components/MapComponent.html":{}}}],["option",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["order",{"_index":844,"title":{},"body":{"injectables/ProcessorsService.html":{},"index.html":{}}}],["organ",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"classes/User.html":{}}}],["organizationwhoownsdata",{"_index":499,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["out",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1245,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":746,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["packag",{"_index":1125,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":721,"title":{},"body":{"components/MapComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["page",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"components/FirstPageComponent.html":{}}}],["page'},{'nam",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["page.compon",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["page.component.html",{"_index":601,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.scss",{"_index":600,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.t",{"_index":599,"title":{},"body":{"components/FirstPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:15",{"_index":619,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.ts:17",{"_index":621,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.ts:18",{"_index":607,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.ts:193",{"_index":611,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.ts:204",{"_index":609,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.ts:30",{"_index":608,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page/first",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"components/FirstPageComponent.html":{},"coverage.html":{}}}],["pages/communityanalysis/communityanalysis.compon",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/first",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/hom",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/home/home.compon",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/map/map.compon",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/sign",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/submissions/submissions.compon",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["pagin",{"_index":1029,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["painlevel",{"_index":554,"title":{},"body":{"injectables/DataExportService.html":{}}}],["painlevels:nul",{"_index":533,"title":{},"body":{"injectables/DataExportService.html":{}}}],["pair",{"_index":835,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["param",{"_index":814,"title":{},"body":{"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["paramet",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["pars",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"classes/User.html":{},"dependencies.html":{},"index.html":{}}}],["parse.cloud.run(functionname,functionrequest",{"_index":821,"title":{},"body":{"injectables/ParseService.html":{}}}],["parse.initialize(this.parseappid",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["parse.initialize(this.parseappid,this.parsejavascriptkey",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["parse.object.extend('surveydata",{"_index":909,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["parse.object.extend(parsemodel",{"_index":978,"title":{},"body":{"injectables/QueryService.html":{}}}],["parse.object.extend(parseobject",{"_index":981,"title":{},"body":{"injectables/QueryService.html":{}}}],["parse.query(model",{"_index":932,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["parse.query(objekt",{"_index":982,"title":{},"body":{"injectables/QueryService.html":{}}}],["parse.query(parse.us",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["parse.query(patientidmodel",{"_index":911,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["parse.query(surveydata",{"_index":986,"title":{},"body":{"injectables/QueryService.html":{}}}],["parse.serverurl",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["parse.us",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["parse.user.curr",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["parse.user.login(this.usernam",{"_index":1011,"title":{},"body":{"components/SignInComponent.html":{}}}],["parse.user.login(usernam",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["parse.user.logout().then",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["parse.user.requestpasswordreset(email",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["parse/parse.servic",{"_index":898,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["parse:parseservic",{"_index":899,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["parseappid",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["parsecolumn",{"_index":954,"title":{},"body":{"injectables/QueryService.html":{}}}],["parseenviron",{"_index":801,"title":{},"body":{"injectables/ParseService.html":{}}}],["parseiniti",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["parsejavascriptkey",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["parsemodel",{"_index":962,"title":{},"body":{"injectables/QueryService.html":{}}}],["parsemodel:string,parsecolumn",{"_index":977,"title":{},"body":{"injectables/QueryService.html":{}}}],["parseobject",{"_index":953,"title":{},"body":{"injectables/QueryService.html":{}}}],["parseparamvalu",{"_index":963,"title":{},"body":{"injectables/QueryService.html":{}}}],["parseparamvaluesarray",{"_index":955,"title":{},"body":{"injectables/QueryService.html":{}}}],["parseserverurl",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["parseservic",{"_index":799,"title":{"injectables/ParseService.html":{}},"body":{"injectables/ParseService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["password",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"components/SignInComponent.html":{},"classes/User.html":{}}}],["path",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["patient",{"_index":501,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"injectables/QueryCustomService.html":{}}}],["patientdemographicsclass",{"_index":973,"title":{},"body":{"injectables/QueryService.html":{}}}],["patientidmodel",{"_index":908,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["patientmodelclass",{"_index":894,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["per",{"_index":370,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["person.get(keys_of_object",{"_index":871,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["planofact",{"_index":557,"title":{},"body":{"injectables/DataExportService.html":{}}}],["platform",{"_index":1169,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":1015,"title":{},"body":{"components/SignInComponent.html":{}}}],["poor",{"_index":363,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["poorfloorcondit",{"_index":294,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["poorroofcondit",{"_index":295,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["power",{"_index":1181,"title":{},"body":{"index.html":{}}}],["primari",{"_index":726,"title":{},"body":{"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["privat",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"components/SignInComponent.html":{},"classes/User.html":{}}}],["proce",{"_index":1016,"title":{},"body":{"components/SignInComponent.html":{}}}],["processorsservic",{"_index":822,"title":{"injectables/ProcessorsService.html":{}},"body":{"injectables/ProcessorsService.html":{},"coverage.html":{}}}],["product",{"_index":1209,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":782,"title":{},"body":{"components/MyNavComponent.html":{}}}],["project",{"_index":1216,"title":{},"body":{"index.html":{}}}],["promis",{"_index":890,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["promise((resolv",{"_index":906,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["properti",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{}}}],["provid",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProcessorsService.html":{},"index.html":{},"overview.html":{}}}],["providedin",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"classes/User.html":{}}}],["providers/auth/auth.servic",{"_index":623,"title":{},"body":{"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{}}}],["providers/componentname/componentnamethi",{"_index":1220,"title":{},"body":{"index.html":{}}}],["providers/data",{"_index":625,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["providers/navbar/navbar.servic",{"_index":624,"title":{},"body":{"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{}}}],["providers/query/query.servic",{"_index":324,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["provinc",{"_index":451,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["public",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"classes/User.html":{}}}],["puent",{"_index":1163,"title":{},"body":{"index.html":{}}}],["puente_export.csv",{"_index":641,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["pull",{"_index":1230,"title":{},"body":{"index.html":{}}}],["puls",{"_index":528,"title":{},"body":{"injectables/DataExportService.html":{}}}],["q",{"_index":627,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["queri",{"_index":306,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{}}}],["query.containedin(parsecolumn,parseparamvaluesarray",{"_index":983,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.count().then((surveypoint",{"_index":942,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["query.descend",{"_index":937,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["query.equalto(\"surveyingorganization\",organ",{"_index":927,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["query.equalto(\"surveyinguser\",usernam",{"_index":917,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["query.equalto('educationlevel',educationlevelparam",{"_index":933,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["query.equalto('sex',sexparam",{"_index":934,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["query.equalto('surveyingorganization',organ",{"_index":936,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["query.equalto('surveyingorganization',parsecolumn",{"_index":989,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.equalto('surveyinguser','candiani",{"_index":941,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["query.equalto('surveyinguser',usernam",{"_index":935,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["query.equalto('surveyinguser',usersnam",{"_index":990,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.equalto(parsecolumn",{"_index":938,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["query.equalto(parsecolumn,parseparam",{"_index":987,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.equalto(parsecolumn,parseparamvalu",{"_index":979,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.find().then((surveypoint",{"_index":922,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["query.first().then((surveypoint",{"_index":984,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.limit(2000",{"_index":914,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["query.limit(limit",{"_index":988,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.notequalto(\"surveyingorgan",{"_index":915,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["query/query.servic",{"_index":419,"title":{},"body":{"injectables/DataExportService.html":{}}}],["query:queryservic",{"_index":326,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["querycustomservic",{"_index":872,"title":{"injectables/QueryCustomService.html":{}},"body":{"injectables/QueryCustomService.html":{},"coverage.html":{}}}],["queryservic",{"_index":304,"title":{"injectables/QueryService.html":{}},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{}}}],["radiu",{"_index":1073,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["reach",{"_index":1233,"title":{},"body":{"index.html":{}}}],["readm",{"_index":1239,"title":{},"body":{"index.html":{}}}],["record",{"_index":358,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["redirect",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["refactor",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["reject",{"_index":905,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["reject(error",{"_index":924,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["rememb",{"_index":1017,"title":{},"body":{"components/SignInComponent.html":{}}}],["rene",{"_index":688,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["report",{"_index":1229,"title":{},"body":{"index.html":{}}}],["repositori",{"_index":1192,"title":{},"body":{"index.html":{}}}],["request",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"index.html":{}}}],["requir",{"_index":1123,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"overview.html":{}}}],["resid",{"_index":668,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["resiz",{"_index":784,"title":{},"body":{"components/MyNavComponent.html":{}}}],["resolv",{"_index":903,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["resolve(surveypoint",{"_index":923,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["resprat",{"_index":546,"title":{},"body":{"injectables/DataExportService.html":{}}}],["resprate:nul",{"_index":529,"title":{},"body":{"injectables/DataExportService.html":{}}}],["result",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.length",{"_index":333,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["retriev",{"_index":334,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["retrieveall_patientid_info_by_organ",{"_index":877,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["retrieveall_patientid_info_by_organization(&#39;puente&#39",{"_index":893,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["retrieveall_patientid_info_by_organization('puent",{"_index":926,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["retrieveall_patientid_info_by_organization(organ",{"_index":891,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["retrieveall_patientid_info_by_us",{"_index":878,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["retrieveall_patientid_info_by_user(&#39;puente&#39",{"_index":897,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["retrieveall_patientid_info_by_user('puent",{"_index":901,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["retrieveall_patientid_info_by_user(usernam",{"_index":895,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["return",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{}}}],["rgba(0,0,0,0.2",{"_index":1081,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["right",{"_index":727,"title":{},"body":{"components/MapComponent.html":{},"components/SubmissionsComponent.html":{}}}],["rodrigo",{"_index":690,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["roof",{"_index":364,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"classes/User.html":{}}}],["root'},{'nam",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["rose",{"_index":692,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["round",{"_index":1074,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["rout",{"_index":89,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"components/SignInComponent.html":{},"routes.html":{}}}],["router",{"_index":1001,"title":{},"body":{"components/SignInComponent.html":{}}}],["routermodul",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["row",{"_index":747,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["run",{"_index":1190,"title":{},"body":{"index.html":{}}}],["runcloudfunct",{"_index":802,"title":{},"body":{"injectables/ParseService.html":{}}}],["runcloudfunction(functionnam",{"_index":808,"title":{},"body":{"injectables/ParseService.html":{}}}],["runcloudfunction(functionname:str",{"_index":819,"title":{},"body":{"injectables/ParseService.html":{}}}],["rxj",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"components/MyNavComponent.html":{},"classes/User.html":{},"dependencies.html":{}}}],["rxjs/add/operator/map",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["rxjs/oper",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["s.user",{"_index":714,"title":{},"body":{"components/MapComponent.html":{}}}],["same",{"_index":843,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["scaffold",{"_index":1211,"title":{},"body":{"index.html":{}}}],["search",{"_index":919,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["secondari",{"_index":1068,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["secondary,0",{"_index":1089,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["sent",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["server",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"classes/User.html":{},"index.html":{}}}],["set",{"_index":913,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"index.html":{}}}],["settimeout",{"_index":907,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["setup",{"_index":302,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["setup(organ",{"_index":409,"title":{},"body":{"injectables/DataExportService.html":{}}}],["setup(organization:string,model:str",{"_index":420,"title":{},"body":{"injectables/DataExportService.html":{}}}],["setupevalmedicalqueri",{"_index":399,"title":{},"body":{"injectables/DataExportService.html":{}}}],["setupevalmedicalquery(demographicobject",{"_index":412,"title":{},"body":{"injectables/DataExportService.html":{}}}],["setupqueri",{"_index":400,"title":{},"body":{"injectables/DataExportService.html":{}}}],["setupquery(demographicobject",{"_index":415,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["setupvitalsqueri",{"_index":401,"title":{},"body":{"injectables/DataExportService.html":{}}}],["setupvitalsquery(demographicobject",{"_index":417,"title":{},"body":{"injectables/DataExportService.html":{}}}],["sex",{"_index":439,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"injectables/QueryCustomService.html":{}}}],["sexparam",{"_index":883,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["shadow",{"_index":1078,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["show",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NavbarService.html":{},"classes/User.html":{}}}],["sign",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{}}}],["signin",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin(usernam",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["signincompon",{"_index":56,"title":{"components/SignInComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signout",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["signup",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup(usernam",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["simpli",{"_index":849,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["size",{"_index":654,"title":{},"body":{"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["somewher",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["sort",{"_index":848,"title":{},"body":{"injectables/ProcessorsService.html":{},"components/SubmissionsComponent.html":{}}}],["sortkeysbi",{"_index":826,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"index.html":{}}}],["spec\\.t",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spread",{"_index":1232,"title":{},"body":{"index.html":{}}}],["src/.../environment.prod.t",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../home.component.t",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../map.component.t",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/mi",{"_index":733,"title":{},"body":{"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"coverage.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.t",{"_index":283,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"coverage.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:12",{"_index":315,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:13",{"_index":309,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:14",{"_index":316,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:15",{"_index":317,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:17",{"_index":314,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:18",{"_index":312,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:20",{"_index":318,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:21",{"_index":319,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:23",{"_index":323,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:24",{"_index":322,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:25",{"_index":320,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:26",{"_index":321,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:27",{"_index":305,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:33",{"_index":307,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:36",{"_index":308,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/first",{"_index":598,"title":{},"body":{"components/FirstPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/hom",{"_index":656,"title":{},"body":{"components/HomeEnvComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.component.t",{"_index":1109,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/map/map.component.t",{"_index":695,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/map/map.component.ts:13",{"_index":699,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/pages/map/map.component.ts:9",{"_index":698,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/pages/sign",{"_index":994,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{}}}],["src/app/pages/submissions/submissions.component.t",{"_index":1023,"title":{},"body":{"components/SubmissionsComponent.html":{},"coverage.html":{}}}],["src/app/pages/submissions/submissions.component.ts:13",{"_index":1038,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:14",{"_index":1037,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:15",{"_index":1043,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:21",{"_index":1047,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:26",{"_index":1031,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:36",{"_index":1035,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:39",{"_index":1036,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:54",{"_index":1033,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/providers/auth/auth.service.t",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"coverage.html":{}}}],["src/app/providers/auth/auth.service.ts:104",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/providers/auth/auth.service.ts:130",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/providers/auth/auth.service.ts:136",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/providers/auth/auth.service.ts:14",{"_index":1096,"title":{},"body":{"classes/User.html":{}}}],["src/app/providers/auth/auth.service.ts:147",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/providers/auth/auth.service.ts:15",{"_index":1097,"title":{},"body":{"classes/User.html":{}}}],["src/app/providers/auth/auth.service.ts:16",{"_index":1095,"title":{},"body":{"classes/User.html":{}}}],["src/app/providers/auth/auth.service.ts:160",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/providers/auth/auth.service.ts:164",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/providers/auth/auth.service.ts:17",{"_index":1098,"title":{},"body":{"classes/User.html":{}}}],["src/app/providers/auth/auth.service.ts:24",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/providers/auth/auth.service.ts:25",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/providers/auth/auth.service.ts:26",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/providers/auth/auth.service.ts:33",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/providers/data",{"_index":394,"title":{},"body":{"injectables/DataExportService.html":{},"coverage.html":{}}}],["src/app/providers/navbar/navbar.service.t",{"_index":788,"title":{},"body":{"injectables/NavbarService.html":{},"coverage.html":{}}}],["src/app/providers/navbar/navbar.service.ts:12",{"_index":793,"title":{},"body":{"injectables/NavbarService.html":{}}}],["src/app/providers/navbar/navbar.service.ts:14",{"_index":794,"title":{},"body":{"injectables/NavbarService.html":{}}}],["src/app/providers/navbar/navbar.service.ts:16",{"_index":795,"title":{},"body":{"injectables/NavbarService.html":{}}}],["src/app/providers/navbar/navbar.service.ts:8",{"_index":792,"title":{},"body":{"injectables/NavbarService.html":{}}}],["src/app/providers/parse/parse.service.t",{"_index":800,"title":{},"body":{"injectables/ParseService.html":{},"coverage.html":{}}}],["src/app/providers/parse/parse.service.ts:10",{"_index":817,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/providers/parse/parse.service.ts:11",{"_index":818,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/providers/parse/parse.service.ts:12",{"_index":803,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/providers/parse/parse.service.ts:26",{"_index":804,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/providers/parse/parse.service.ts:37",{"_index":805,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/providers/parse/parse.service.ts:54",{"_index":810,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/providers/processors/processors.service.t",{"_index":823,"title":{},"body":{"injectables/ProcessorsService.html":{},"coverage.html":{}}}],["src/app/providers/processors/processors.service.ts:21",{"_index":845,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["src/app/providers/processors/processors.service.ts:43",{"_index":839,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["src/app/providers/processors/processors.service.ts:56",{"_index":830,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["src/app/providers/processors/processors.service.ts:7",{"_index":827,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["src/app/providers/queri",{"_index":873,"title":{},"body":{"injectables/QueryCustomService.html":{},"coverage.html":{}}}],["src/app/providers/query/query.service.t",{"_index":943,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["src/app/providers/query/query.service.ts:136",{"_index":968,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/providers/query/query.service.ts:16",{"_index":964,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/providers/query/query.service.ts:178",{"_index":970,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/providers/query/query.service.ts:189",{"_index":972,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/providers/query/query.service.ts:201",{"_index":975,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/providers/query/query.service.ts:56",{"_index":966,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/providers/query/query.service.ts:7",{"_index":951,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/providers/query/query.service.ts:97",{"_index":956,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/environments/environment.prod.t",{"_index":1119,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1120,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1121,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":1165,"title":{},"body":{"index.html":{}}}],["start",{"_index":1162,"title":{"index.html":{}},"body":{}}],["start:localbuild",{"_index":1202,"title":{},"body":{"index.html":{}}}],["statement",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":1206,"title":{},"body":{"index.html":{}}}],["string",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{}}}],["string(this.auth.currentuser().nam",{"_index":779,"title":{},"body":{"components/MyNavComponent.html":{}}}],["structur",{"_index":1215,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["style",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["submiss",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["submissions.component.html",{"_index":1025,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["submissions.component.scss",{"_index":1024,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["submissions:hov",{"_index":1084,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["submissionscompon",{"_index":59,"title":{"components/SubmissionsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["subscrib",{"_index":1010,"title":{},"body":{"components/SignInComponent.html":{}}}],["subtitl",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["success",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"components/SignInComponent.html":{},"classes/User.html":{}}}],["success.tojson().usernam",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["successfulli",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["sum",{"_index":351,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["support",{"_index":1242,"title":{},"body":{"modules.html":{}}}],["survey",{"_index":1061,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["surveydata",{"_index":910,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["surveyingus",{"_index":1041,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["surveyor",{"_index":687,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["surveypoint",{"_index":921,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["svg",{"_index":1243,"title":{},"body":{"modules.html":{}}}],["t",{"_index":575,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["tabl",{"_index":644,"title":{},"body":{"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["team",{"_index":1176,"title":{},"body":{"index.html":{}}}],["temp",{"_index":527,"title":{},"body":{"injectables/DataExportService.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["test",{"_index":916,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["testdownload",{"_index":603,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["testsetup",{"_index":604,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["testsetup(form",{"_index":610,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["testsetup(form:str",{"_index":635,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["text",{"_index":755,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["theme.scss",{"_index":719,"title":{},"body":{"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["there'",{"_index":904,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["this.alertctrl.cr",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["this.alertservice.error(error",{"_index":1013,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.arrayofmatchenvfil",{"_index":331,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.arrayofmatchenvfiles[i].get('timesperweektrashcollect",{"_index":340,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.auth.authent",{"_index":633,"title":{},"body":{"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{}}}],["this.auth.currentuser().nam",{"_index":774,"title":{},"body":{"components/MyNavComponent.html":{}}}],["this.auth.currentuser().organ",{"_index":622,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.authpvdr.signin(this.usernam",{"_index":1008,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset",{"_index":771,"title":{},"body":{"components/MyNavComponent.html":{}}}],["this.convertarrayofobjectstocsv",{"_index":587,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["this.currentus",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["this.data.downloadcsv",{"_index":640,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.data.setup(this.organization,'envform').then((result",{"_index":638,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.data.setup(this.organization,'evalmedical').then((result",{"_index":637,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.data.setup(this.organization,'vitals').then((result",{"_index":639,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.data.setup(this.organization,form).then((result",{"_index":636,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.datasourc",{"_index":1053,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["this.datasource.pagin",{"_index":1055,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["this.datasource.sort",{"_index":1057,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["this.dictstoexport",{"_index":617,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.dictstoexport.push",{"_index":614,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.getallobject",{"_index":632,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.load",{"_index":1014,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.loadctrl.cr",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["this.nav.hid",{"_index":1007,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.nav.show",{"_index":631,"title":{},"body":{"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{}}}],["this.numberofmatchingid",{"_index":332,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.pagin",{"_index":1056,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["this.parse.parseenviron",{"_index":902,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["this.parse.parseiniti",{"_index":900,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["this.parse.runcloudfunction(\"hello\",nul",{"_index":991,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.parse.runcloudfunction(\"retrievepatientrecordbyorgn",{"_index":993,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.parse.runcloudfunction(\"retrievepatientrecordsal",{"_index":992,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.parseiniti",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["this.parseserverurl",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["this.password",{"_index":1009,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.query.exactlyonequery('evaluationmedical','client',demographicobject).then((evalmed",{"_index":559,"title":{},"body":{"injectables/DataExportService.html":{}}}],["this.query.exactlyonequery('historyenvironmentalhealth','client',demographicobject).then((environmentalhealthresult",{"_index":431,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["this.query.exactlyonequery('vitals','client',demographicobject).then((vit",{"_index":535,"title":{},"body":{"injectables/DataExportService.html":{}}}],["this.query.genericquery('surveydata',organization).then((patientresult",{"_index":422,"title":{},"body":{"injectables/DataExportService.html":{}}}],["this.query.genericquery('surveydata',this.organization).then((patientresult",{"_index":612,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.query.listallpatients().then((result",{"_index":328,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/SubmissionsComponent.html":{}}}],["this.router.navigate(['/hom",{"_index":1012,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.setup",{"_index":327,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{}}}],["this.setup().then",{"_index":1052,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["this.setupevalmedicalquery(demographicobject).then(result",{"_index":429,"title":{},"body":{"injectables/DataExportService.html":{}}}],["this.setupquery(demographicobject",{"_index":613,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.setupquery(demographicobject).then(result",{"_index":425,"title":{},"body":{"injectables/DataExportService.html":{}}}],["this.sort",{"_index":1058,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["this.testsetup('evalmed",{"_index":634,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.trash1aweek",{"_index":344,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.trash2aweek",{"_index":346,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.trash3omor",{"_index":347,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.trashaverag",{"_index":353,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.trashperweek",{"_index":354,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.trashperweek.push(trashnumb",{"_index":341,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.usernam",{"_index":778,"title":{},"body":{"components/MyNavComponent.html":{}}}],["this.vis",{"_index":796,"title":{},"body":{"injectables/NavbarService.html":{}}}],["this_proj",{"_index":1199,"title":{},"body":{"index.html":{}}}],["those",{"_index":1180,"title":{},"body":{"index.html":{}}}],["thrice",{"_index":374,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["time",{"_index":715,"title":{},"body":{"components/MapComponent.html":{},"components/SubmissionsComponent.html":{}}}],["times/week",{"_index":379,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["titl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/User.html":{}}}],["toggl",{"_index":791,"title":{},"body":{"injectables/NavbarService.html":{}}}],["tool",{"_index":709,"title":{},"body":{"components/MapComponent.html":{}}}],["top",{"_index":1076,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["total",{"_index":342,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["transit",{"_index":1082,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["trash",{"_index":369,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trash1aweek",{"_index":296,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trash2aweek",{"_index":297,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trash3omor",{"_index":298,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trashaverag",{"_index":299,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trashloc",{"_index":493,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["trashnumb",{"_index":339,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trashperweek",{"_index":300,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trashpickupfrequ",{"_index":491,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["tri",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["true",{"_index":798,"title":{},"body":{"injectables/NavbarService.html":{},"miscellaneous/variables.html":{}}}],["twice",{"_index":373,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeofwaterdrank",{"_index":487,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["typeofwaterdrank:nul",{"_index":523,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["typescript",{"_index":1153,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["u",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["u.get('email",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["u.get('organ",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["u.get('usernam",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["u.id",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["uarr",{"_index":684,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["uglifi",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["underscor",{"_index":852,"title":{},"body":{"injectables/ProcessorsService.html":{},"dependencies.html":{}}}],["up",{"_index":1018,"title":{},"body":{"components/SignInComponent.html":{}}}],["url('https://material.angular.io/assets/img/examples/shiba1.jpg",{"_index":653,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["us",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"index.html":{}}}],["usabl",{"_index":857,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["user",{"_index":158,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/QueryCustomService.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["user'",{"_index":885,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["user.createdat",{"_index":1063,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["user.email",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["user.fnam",{"_index":1059,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["user.get(\"email",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["user.get(\"usernam",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["user.get('clinicaccess",{"_index":384,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get('conditionofloorinyourhous",{"_index":382,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get('conditionoroofinyourhous",{"_index":383,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get('latrineaccess",{"_index":381,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get('timesperweektrashcollect",{"_index":386,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get('wateraccess",{"_index":385,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get(\\'clinicaccess",{"_index":390,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get(\\'conditionofloorinyourhous",{"_index":388,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get(\\'conditionoroofinyourhous",{"_index":389,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get(\\'latrineaccess",{"_index":387,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get(\\'timesperweektrashcollect",{"_index":392,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get(\\'wateraccess",{"_index":391,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.id",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"classes/User.html":{}}}],["user.lnam",{"_index":1060,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["user.nam",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["user.organ",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["user.set('email",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["user.set('organ",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["user.set('password",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["user.set('usernam",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["user.signup(nul",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["user.surveyingus",{"_index":1062,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["userid",{"_index":376,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["usernam",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"components/MyNavComponent.html":{},"injectables/QueryCustomService.html":{},"components/SignInComponent.html":{},"classes/User.html":{}}}],["userqueri",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["userquery.equalto('email",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["userquery.first().then(funct",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["valu",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/ProcessorsService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{}}}],["variabl",{"_index":1111,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["vbdthqqu31iylw5uyrdiwb8ew8zczgbzmqchugjr",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1187,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":1050,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["viewchild(matpagin",{"_index":1046,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["viewchild(matsort",{"_index":1049,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["visibl",{"_index":789,"title":{},"body":{"injectables/NavbarService.html":{}}}],["vital",{"_index":536,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('bloodoxygen",{"_index":553,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('bloodpressur",{"_index":550,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('bloodsugar",{"_index":552,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('bmi",{"_index":543,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('client').get('dob",{"_index":539,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('client').get('fnam",{"_index":537,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('client').get('lnam",{"_index":538,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('client').get('sex",{"_index":540,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('height",{"_index":541,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('hemoglobinlevel",{"_index":549,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('painlevel",{"_index":555,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('puls",{"_index":545,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('respr",{"_index":547,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('temp",{"_index":544,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('weight",{"_index":542,"title":{},"body":{"injectables/DataExportService.html":{}}}],["void",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["want",{"_index":833,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["water",{"_index":378,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["wateraccess",{"_index":485,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["web",{"_index":1166,"title":{},"body":{"index.html":{}}}],["webkit",{"_index":749,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["week",{"_index":371,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["weight",{"_index":525,"title":{},"body":{"injectables/DataExportService.html":{}}}],["what'",{"_index":920,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["width",{"_index":648,"title":{},"body":{"components/FirstPageComponent.html":{},"components/MapComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["within",{"_index":958,"title":{},"body":{"injectables/QueryService.html":{}}}],["word",{"_index":759,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{},"index.html":{}}}],["workbench",{"_index":1236,"title":{},"body":{"index.html":{}}}],["wrap",{"_index":760,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["ye",{"_index":362,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["yearslivedinthecommun",{"_index":467,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["yearslivedinthishous",{"_index":469,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["ze",{"_index":643,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["zone.j",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n    \n\n    \n        \n-->\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '-->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeEnvComponent', 'selector': 'app-home-env'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MyAsideComponent', 'selector': 'app-my-aside'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommunityAnalysisComponent\n\nCommunityAnalysisComponent\n\nAppModule -->\n\nCommunityAnalysisComponent->AppModule\n\n\n\n\n\nFirstPageComponent\n\nFirstPageComponent\n\nAppModule -->\n\nFirstPageComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHomeEnvComponent\n\nHomeEnvComponent\n\nAppModule -->\n\nHomeEnvComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nMyAsideComponent\n\nMyAsideComponent\n\nAppModule -->\n\nMyAsideComponent->AppModule\n\n\n\n\n\nMyNavComponent\n\nMyNavComponent\n\nAppModule -->\n\nMyNavComponent->AppModule\n\n\n\n\n\nSignInComponent\n\nSignInComponent\n\nAppModule -->\n\nSignInComponent->AppModule\n\n\n\n\n\nSubmissionsComponent\n\nSubmissionsComponent\n\nAppModule -->\n\nSubmissionsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CommunityAnalysisComponent\n                        \n                        \n                            FirstPageComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            HomeEnvComponent\n                        \n                        \n                            MapComponent\n                        \n                        \n                            MyAsideComponent\n                        \n                        \n                            MyNavComponent\n                        \n                        \n                            SignInComponent\n                        \n                        \n                            SubmissionsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ChartsModule } from 'ng2-charts';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\n//Providers\nimport { AuthService } from '../app/providers/auth/auth.service';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MyNavComponent } from './my-nav/my-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, MatCardModule, MatTableModule, MatPaginatorModule, MatSortModule, MatFormFieldModule, MatInputModule} from '@angular/material';\nimport { FirstPageComponent } from './pages/first-page/first-page.component';\nimport { CommunityAnalysisComponent } from './pages/communityAnalysis/communityAnalysis.component';\nimport { SubmissionsComponent } from './pages/submissions/submissions.component';\nimport { SignInComponent } from './pages/sign-in/sign-in.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { MapComponent } from './pages/map/map.component';\nimport { HomeEnvComponent } from './pages/home-env/home-env.component';\nimport { MyAsideComponent } from './my-aside/my-aside.component';\n\n\nconst appRoutes: Routes = [\n  { path: '', component: SignInComponent},\n  { path: 'dash-env', component: HomeEnvComponent},\n  { path: 'env-export',component:FirstPageComponent},\n  { path: 'submissions', component: SubmissionsComponent},\n  { path: 'first-page', component: FirstPageComponent},\n  { path: 'communityAnalysis', component: CommunityAnalysisComponent},\n  { path: 'sign-in', component: SignInComponent},\n  { path: 'home', component: HomeComponent},\n  { path: 'map',component: MapComponent},\n  { path: 'submissions', component:SubmissionsComponent},\n  \n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MyNavComponent,\n    FirstPageComponent,\n    CommunityAnalysisComponent,\n    SubmissionsComponent,\n    SignInComponent,\n    HomeComponent,\n    MapComponent,\n    HomeEnvComponent,\n    MyAsideComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    ChartsModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule\n  ],\n  providers: [\n    AuthService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/auth/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                parseAppId\n                            \n                            \n                                    Private\n                                parseJavascriptKey\n                            \n                            \n                                    Private\n                                parseServerUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authenticated\n                            \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Public\n                                forgotPassword\n                            \n                            \n                                    Public\n                                parseInitialize\n                            \n                            \n                                    Public\n                                signin\n                            \n                            \n                                    Public\n                                signout\n                            \n                            \n                                    Public\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/providers/auth/auth.service.ts:26\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authenticated()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:160\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        currentUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:147\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     User\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forgotPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forgotPassword(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:136\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parseInitialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parseInitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:164\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            signin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signin(username: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            signout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:130\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signup(username: string, password: string, email: string, organization: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        organization\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parseAppId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parseAppId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.parseAppId\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parseJavascriptKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parseJavascriptKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.parseJavascriptKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parseServerUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parseServerUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.parseServerUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n//import 'rxjs/add/operator/map';\nimport { map } from 'rxjs/operators';\n\n\n// Parse\nimport { Parse } from 'parse';\n\n// Constants\nimport { environment } from '../../../environments/environment.prod';\n\nexport class User {\n  public id: string;\n  public name: string;\n  public email: string;\n  public organization: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private parseAppId: string = environment.parseAppId;\n  private parseServerUrl: string = environment.parseServerUrl;\n  private parseJavascriptKey: string = environment.parseJavascriptKey;\n\n  constructor() { \n    this.parseInitialize();\n    console.log('Initiated Auth');\n  }\n\n  public signin(username: string, password: string): Observable {\n    \n    return new Observable((observer) => {\n      //REFACTOR LATER\n      /*\n      let loader = this.loadCtrl.create({\n\n        content: 'Signing in...'\n      });\n\n      let alerter = this.alertCtrl.create({\n        title: 'Login Error',\n        subTitle: 'Invalid username and/or password',\n        buttons: ['Try Again']\n      });\n\n      loader.present(); */\n      async () => {\n        await Parse.User.logIn(username, password, {\n          success: function (user) {\n            // Do stuff after successful login, like a redirect.\n            console.log('User logged in successful with username: ' + user.get(\"username\"));\n            observer.next(true);\n            observer.complete();\n          },\n          error: function (user, error) {\n            // If the user inputs the email instead of the username\n            //console.log(error);\n            console.log(\"Trying to use email instead of Username\");\n            var userQuery = new Parse.Query(Parse.User);\n\n            userQuery.equalTo('email', username);\n            userQuery.first().then(function (success) {\n              var username = success.toJSON().username; \n              Parse.User.logIn(username, password, {\n                success: function (user) {\n                  // Do stuff after successful login, like a redirect.\n                  //loader.dismiss();\n                  console.log('User logged in successful with email: ' + user.get(\"email\"));\n                  observer.next(true);\n                  observer.complete();\n                },\n                error: function (user, error) {\n                  //loader.dismiss().then(()=>{\n                  //  alerter.present();\n                  //})\n                  //alerter.dismiss();\n                  console.log(error);\n                  observer.error(error);\n                  observer.complete();\n                }\n              });\n            }, function (error) {\n              //loader.dismiss().then(()=>{\n              //  alerter.present();\n              //})\n              //alerter.dismiss();\n              console.log(error);\n              observer.error(error);\n              observer.complete();\n            });\n            //loader.dismiss().then(()=>{\n            //  alerter.present();\n            //})\n            //alerter.dismiss();\n          }\n        });\n      }\n    });\n  }\n\n  public signup(username: string, password: string, email: string, organization: string): Observable {\n    return new Observable((observer) => {\n      var user = new Parse.User();\n      user.set('username', username);\n      user.set('password', password);\n      user.set('email', email);\n      user.set('organization', organization)\n\n      user.signUp(null, {\n        success: (user) => {\n          console.log('User created successful with name: ' + user.get(\"username\") + ' and email: ' + user.get(\"email\"));\n          observer.next(true);\n          observer.complete();\n        },\n        error: (user, error) => {\n          // Show the error message somewhere and let the user try again.\n          // It is likely that the user is trying to sign with a username or email already taken.\n          console.log(\"Error: \" + error.code + \" \" + error.message);\n          observer.error(error);\n          observer.complete();\n        }\n      });\n\n    });\n  }\n\n  public signout(): Observable {\n    return new Observable((observer) => {\n      Parse.User.logOut().then(() => observer.next(true));\n    });\n  }\n\n  public forgotPassword(email:string) {\n    return Parse.User.requestPasswordReset(email, {\n      success: function() {\n          console.log(\"Password reset request was sent successfully\");\n      },\n      error: function(error) {\n          console.log(\"The login failed with error: \" + error.code + \" \" + error.message);\n      }\n  });\n  }\n\n  public currentUser(): User {\n    let u = Parse.User.current();\n    if (u) {\n      var user = new User();\n      user.id = u.id;\n      user.name = u.get('username');\n      user.email = u.get('email');\n      user.organization = u.get('organization');\n      return user;\n    }\n    return null\n  }\n\n  public authenticated(): boolean {\n    return this.currentUser() !== null;\n  }\n\n  public parseInitialize() {\n    //Back4app\n    Parse.initialize(this.parseAppId,this.parseJavascriptKey);\n    \n    //Heroku\n    //Parse.initialize(this.parseAppId);\n    \n    //Server\n    Parse.serverURL = this.parseServerUrl;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommunityAnalysisComponent.html":{"url":"components/CommunityAnalysisComponent.html","title":"component - CommunityAnalysisComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CommunityAnalysisComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/communityAnalysis/communityAnalysis.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-communityAnalysis\n            \n\n            \n                styleUrls\n                ./communityAnalysis.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./communityAnalysis.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arrayOfMatchEnvFiles\n                            \n                            \n                                latrineAccessNo\n                            \n                            \n                                latrineAccessYes\n                            \n                            \n                                listOfAllIDs\n                            \n                            \n                                numberOfIds\n                            \n                            \n                                numberofMatchingIds\n                            \n                            \n                                poorFloorCondition\n                            \n                            \n                                poorRoofCondition\n                            \n                            \n                                trash1aweek\n                            \n                            \n                                trash2aweek\n                            \n                            \n                                trash3omore\n                            \n                            \n                                trashAverage\n                            \n                            \n                                trashPerWeek\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(query: QueryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                    QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrayOfMatchEnvFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        arrayOfMatchEnvFiles:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latrineAccessNo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        latrineAccessNo:     \n\n                    \n                \n                    \n                        \n                            Default value : 0 + 11\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latrineAccessYes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        latrineAccessYes:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listOfAllIDs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        listOfAllIDs:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberOfIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numberOfIds:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberofMatchingIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numberofMatchingIds:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            poorFloorCondition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        poorFloorCondition:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            poorRoofCondition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        poorRoofCondition:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trash1aweek\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trash1aweek:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trash2aweek\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trash2aweek:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trash3omore\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trash3omore:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trashAverage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trashAverage:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trashPerWeek\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trashPerWeek:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { QueryService } from '../../providers/query/query.service';\n\n@Component({\n  selector: 'app-communityAnalysis',\n  templateUrl: './communityAnalysis.component.html',\n  styleUrls: ['./communityAnalysis.component.scss']\n})\nexport class CommunityAnalysisComponent implements OnInit {\n\n  listOfAllIDs = [];\n  arrayOfMatchEnvFiles = [];\n  numberOfIds = 0;\n  numberofMatchingIds;\n\n  latrineAccessYes = 0;\n  latrineAccessNo = 0 + 11;\n\n  poorFloorCondition = 0;\n  poorRoofCondition = 0;\n\n  trashPerWeek = [];\n  trashAverage;\n  trash1aweek = 0;\n  trash2aweek = 0;\n  trash3omore = 0;\n\n  constructor(private query:QueryService) { \n    this.setup();\n  }\n\n  ngOnInit() {\n  }\n\n  setup() {\n    this.query.listAllPatients().then((results)=>{\n      for(let i=0; i{\n        this.arrayOfMatchEnvFiles = results;\n        this.numberofMatchingIds = results.length;\n\n        //Retrieve Latrine Access info from migration\n        for (let i=0; i0) {\n            let trashNumber = this.arrayOfMatchEnvFiles[i].get('timesperweektrashcollected');\n            this.trashPerWeek.push(trashNumber);\n            //total += trashNumber;\n            \n            if (trashNumber == 1){\n              this.trash1aweek +=1;\n            }\n\n            else if (trashNumber == 2){\n              this.trash2aweek +=1;\n            }\n\n            else if (trashNumber > 2){\n              this.trash3omore +=1;\n            }\n\n          }\n\n          \n        }\n        \n        const average = array => array.reduce( ( sum, element ) => sum + element) / array.length;\n    \n        this.trashAverage = average( this.trashPerWeek );\n    \n      })\n\n\n    })\n      \n    \n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Home\n    Dashboard\n  \n\n\n\n  Number of Community IDs Checked: {{ numberOfIds }}\n\n\n\n    Number of Matching Records in Environmental History Form: {{ numberofMatchingIds }}\n\n\n\n\n  \n  \n    Latrine Access\n    \n      Yes\n      No\n    \n  \n  \n    \n      {{latrineAccessYes}}\n      {{latrineAccessNo}}\n    \n  \n\n  \n  \n    Poor Roof and Floor Conditions\n    \n      Bad Roof\n      Dirt Floor\n    \n  \n  \n    \n      {{poorRoofCondition}}\n      {{poorFloorCondition}}\n    \n  \n\n\n\n  \n    \n      Average Trash Per week\n      Trash Once a Week\n      Trash Twice a week\n      Trash Thrice or More a week\n    \n\n  \n  \n    \n      {{trashAverage}}\n      {{trash1aweek}}\n      {{trash2aweek}}\n      {{trash3omore}}\n    \n  \n\n\n\n  \n    UserID\n    Latrine Access\n    Floor Condition\n    Roof Condition\n    Clinic Access\n    Water Access\n    Times/Week Trash Collected\n    \n  \n  \n    {{ user.id }} \n    {{ user.get('latrineAccess') }} \n    {{ user.get('conditionoFloorinyourhouse') }} \n    {{ user.get('conditionoRoofinyourhouse') }} \n    {{ user.get('clinicAccess') }} \n    {{ user.get('waterAccess') }} \n    {{ user.get('timesperweektrashcollected') }} \n  \n\n    \n\n    \n                \n                    ./communityAnalysis.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Home    Dashboard    Number of Community IDs Checked: {{ numberOfIds }}    Number of Matching Records in Environmental History Form: {{ numberofMatchingIds }}        Latrine Access          Yes      No                  {{latrineAccessYes}}      {{latrineAccessNo}}              Poor Roof and Floor Conditions          Bad Roof      Dirt Floor                  {{poorRoofCondition}}      {{poorFloorCondition}}                  Average Trash Per week      Trash Once a Week      Trash Twice a week      Trash Thrice or More a week                  {{trashAverage}}      {{trash1aweek}}      {{trash2aweek}}      {{trash3omore}}            UserID    Latrine Access    Floor Condition    Roof Condition    Clinic Access    Water Access    Times/Week Trash Collected            {{ user.id }}     {{ user.get(\\'latrineAccess\\') }}     {{ user.get(\\'conditionoFloorinyourhouse\\') }}     {{ user.get(\\'conditionoRoofinyourhouse\\') }}     {{ user.get(\\'clinicAccess\\') }}     {{ user.get(\\'waterAccess\\') }}     {{ user.get(\\'timesperweektrashcollected\\') }}   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeEnvComponent', 'selector': 'app-home-env'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MyAsideComponent', 'selector': 'app-my-aside'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CommunityAnalysisComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataExportService.html":{"url":"injectables/DataExportService.html","title":"injectable - DataExportService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/data-export/data-export.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertArrayOfObjectsToCSV\n                            \n                            \n                                    Async\n                                downloadCSV\n                            \n                            \n                                    Async\n                                setup\n                            \n                            \n                                    Private\n                                    Async\n                                setupEvalMedicalQuery\n                            \n                            \n                                    Private\n                                    Async\n                                setupQuery\n                            \n                            \n                                    Private\n                                    Async\n                                setupVitalsQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: QueryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/providers/data-export/data-export.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                    QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            convertArrayOfObjectsToCSV\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        convertArrayOfObjectsToCSV(args)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/data-export/data-export.service.ts:240\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            downloadCSV\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        downloadCSV(args, array_to_export)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/data-export/data-export.service.ts:272\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        array_to_export\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            setup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setup(organization: string, model: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/data-export/data-export.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organization\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            setupEvalMedicalQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setupEvalMedicalQuery(demographicObject)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/data-export/data-export.service.ts:202\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        demographicObject\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            setupQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setupQuery(demographicObject)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/data-export/data-export.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        demographicObject\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            setupVitalsQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setupVitalsQuery(demographicObject)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/data-export/data-export.service.ts:138\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        demographicObject\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { QueryService } from '../query/query.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataExportService {\n\n  constructor(private query: QueryService) { }\n\n  \n  async setup(organization:string,model:string) {\n    var final_array = []\n    this.query.genericQuery('SurveyData',organization).then((patientResults) => {\n      for (var i = 0; i [\n            final_array.push(results)\n          ])\n        }\n\n        else if (model == 'EnvForm'){\n          this.setupQuery(demographicObject).then(results=>[\n            final_array.push(results)\n          ])\n          //console.log(array)\n          //final_array.push(array)\n          \n        }\n\n        else if (model == 'EvalMedical'){\n          this.setupEvalMedicalQuery(demographicObject).then(results=>[\n            final_array.push(results)\n          ])\n          //console.log(array)\n          //final_array.push(array)\n          \n        }\n      }\n    });\n    return final_array\n  }\n\n  private async setupQuery(demographicObject){\n    var object_to_export = {}\n\n    return await this.query.exactlyOneQuery('HistoryEnvironmentalHealth','client',demographicObject).then((environmentalHealthResults) =>{\n      if (environmentalHealthResults){\n        object_to_export = {\n              firstName: environmentalHealthResults.get('client').get('fname'),\n              lastName: environmentalHealthResults.get('client').get('lname'),\n              dob: environmentalHealthResults.get('client').get('dob'),\n              sex: environmentalHealthResults.get('client').get('sex'),\n              marriageStatus: environmentalHealthResults.get('client').get('marriageStatus'),\n              educationLevel: environmentalHealthResults.get('client').get('educationLevel'),\n              occupation: environmentalHealthResults.get('client').get('occupation'),\n              communityName: environmentalHealthResults.get('client').get('communityname'),\n              city: environmentalHealthResults.get('client').get('city'),\n              province: environmentalHealthResults.get('client').get('province'),\n              insuranceNumber: environmentalHealthResults.get('client').get('insuranceNumber'),\n              insuranceProvider: environmentalHealthResults.get('client').get('insuranceProvider'),\n              clinicProvider: environmentalHealthResults.get('client').get('clinicProvider'),\n              cedulaNumber: environmentalHealthResults.get('client').get('cedulaNumber'),\n              dataCollector: environmentalHealthResults.get('client').get('surveyingUser'),\n              latitude: environmentalHealthResults.get('client').get('latitude'),\n              longitude: environmentalHealthResults.get('client').get('longitude'),\n\n              yearsLivedinthecommunity: environmentalHealthResults.get('yearsLivedinthecommunity'),\n              yearsLivedinThisHouse: environmentalHealthResults.get('yearsLivedinThisHouse'),\n              medicalproblemswheredoyougo: environmentalHealthResults.get('medicalproblemswheredoyougo'),\n              dentalproblemswheredoyougo: environmentalHealthResults.get('dentalproblemswheredoyougo'),\n              numberofIndividualsLivingintheHouse: environmentalHealthResults.get('numberofIndividualsLivingintheHouse'),\n              numberofChildrenLivinginHouseUndertheAgeof5: environmentalHealthResults.get('numberofChildrenLivinginHouseUndertheAgeof5'),\n              biggestproblemofcommunity: environmentalHealthResults.get('biggestproblemofcommunity').replace(/,/g, '-'),\n              houseownership: environmentalHealthResults.get('houseownership'),\n              latrineAccess: environmentalHealthResults.get('latrineAccess'),\n              waterAccess: environmentalHealthResults.get('waterAccess'),\n              typeOfWaterDrank: environmentalHealthResults.get('typeofWaterdoyoudrink'),\n              clinicAccess: environmentalHealthResults.get('clinicAccess'),\n              trashPickUpFrequency: environmentalHealthResults.get('timesperweektrashcollected'),\n              trashLocation: environmentalHealthResults.get('wheretrashleftbetweenpickups'),\n              conditionOfFloor: environmentalHealthResults.get('conditionoFloorinyourhouse'),\n              conditionOfRoof: environmentalHealthResults.get('conditionoRoofinyourhouse'),\n              organizationWhoOwnsData: environmentalHealthResults.get('client').get('surveyingOrganization')\n            \n        }\n      }\n      else {\n        object_to_export = {\n          //patient:{\n            firstName: demographicObject.get('fname'),\n            lastName: demographicObject.get('lname'),\n            dob: demographicObject.get('dob'),\n            sex: demographicObject.get('sex'),\n            marriageStatus: demographicObject.get('marriageStatus'),\n            educationLevel: demographicObject.get('educationLevel'),\n            occupation: demographicObject.get('occupation'),\n            communityName: demographicObject.get('communityname'),\n            city: demographicObject.get('city'),\n            province: demographicObject.get('province'),\n            insuranceNumber: demographicObject.get('insuranceNumber'),\n            insuranceProvider: demographicObject.get('insuranceProvider'),\n            clinicProvider: demographicObject.get('clinicProvider'),\n            cedulaNumber: demographicObject.get('cedulaNumber'),\n            dataCollector: demographicObject.get('surveyingUser'),\n            latitude: demographicObject.get('latitude'),\n            longitude: demographicObject.get('longitude'),\n\n            yearsLivedinthecommunity: null,\n            yearsLivedinThisHouse: null,\n            medicalproblemswheredoyougo: null,\n            dentalproblemswheredoyougo: null,\n            numberofIndividualsLivingintheHouse:null,\n            numberofChildrenLivinginHouseUndertheAgeof5:null,\n            biggestproblemofcommunity:null,\n            houseownership:null,\n            latrineAccess: null,\n            waterAccess: null,\n            typeOfWaterDrank:null,\n            clinicAccess: null,\n            trashPickUpFrequency: null,\n            trashLocation: null,\n            conditionOfFloor: null,\n            conditionOfRoof: null,\n            organizationWhoOwnsData: null\n              \n        };\n      }\n      return object_to_export\n    })\n    \n  }\n\n  private async setupVitalsQuery(demographicObject){\n    var object_to_export = {}\n\n    /*\n    height: null,\n    weight: null,\n    bmi: null,\n    temp: null,\n    pulse: null,\n    respRate:null,\n    bloodPressure: null,\n    bloodOxygen: null,\n    bloodSugar:null,\n    painLevels:null,\n    hemoglobinLevels:null */\n\n    return await this.query.exactlyOneQuery('Vitals','client',demographicObject).then((Vitals) =>{\n      if (Vitals){\n        object_to_export = {\n              firstName: Vitals.get('client').get('fname'),\n              lastName: Vitals.get('client').get('lname'),\n              dob: Vitals.get('client').get('dob'),\n              sex: Vitals.get('client').get('sex'),\n\n              height: Vitals.get('height'),\n              weight: Vitals.get('weight'),\n              bmi: Vitals.get('bmi'),\n              temp: Vitals.get('temp'),\n              pulse: Vitals.get('pulse'),\n              respRate: Vitals.get('respRate'),\n              hemoglobinLevels: Vitals.get('hemoglobinLevels'),\n              bloodPressure: Vitals.get('bloodPressure'),\n              bloodSugar: Vitals.get('bloodSugar'),\n              bloodOxygen: Vitals.get('bloodOxygen'),\n              painLevels: Vitals.get('painLevels')  \n        }\n      }\n      else {\n        object_to_export = {\n          //patient:{\n            firstName: demographicObject.get('fname'),\n            lastName: demographicObject.get('lname'),\n            dob: demographicObject.get('dob'),\n            sex: demographicObject.get('sex'),\n\n            height: 'Not Collected',\n            weight: 'Not Collected',\n            bmi: 'Not Collected',\n            temp: 'Not Collected',\n            pulse: 'Not Collected',\n            respRate: 'Not Collected',\n            hemoglobinLevels: 'Not Collected',\n            bloodPressure: 'Not Collected',\n            bloodSugar: 'Not Collected',\n            bloodOxygen: 'Not Collected',\n            painLevels: 'Not Collected'  \n              \n        };\n      }\n      return object_to_export\n    })\n    \n  }\n\n  private async setupEvalMedicalQuery(demographicObject){\n    var object_to_export = {}\n\n    /*\n    AssessmentandEvaluation: null,\n    planOfAction: null,\n    notes: null, */\n\n    return await this.query.exactlyOneQuery('EvaluationMedical','client',demographicObject).then((EvalMedical) =>{\n      if (EvalMedical){\n        object_to_export = {\n          firstName: EvalMedical.get('client').get('fname'),\n          lastName: EvalMedical.get('client').get('lname'),\n          dob: EvalMedical.get('client').get('dob'),\n          sex: EvalMedical.get('client').get('sex'),\n\n          AssessmentandEvaluation: EvalMedical.get('AssessmentandEvaluation'),\n          planOfAction: EvalMedical.get('planOfAction'),\n          notes: EvalMedical.get('notes') \n        }\n      }\n      else {\n        object_to_export = {\n          firstName: demographicObject.get('fname'),\n          lastName: demographicObject.get('lname'),\n          dob: demographicObject.get('dob'),\n          sex: demographicObject.get('sex'),\n\n          AssessmentandEvaluation: null,\n          planOfAction: null,\n          notes: null \n        };\n      }\n      return object_to_export\n    })\n    \n  }\n  \n  private convertArrayOfObjectsToCSV(args) {  \n    var result, ctr, keys, columnDelimiter, lineDelimiter, data;\n\n    data = args.data || null;\n    if (data == null || !data.length) {\n        return null;\n    }\n\n    columnDelimiter = args.columnDelimiter || ',';\n    //columnDelimiter = args.columnDelimiter || '\\t';\n    lineDelimiter = args.lineDelimiter || '\\n';\n\n    keys = Object.keys(data[0]);\n\n    result = '';\n    result += keys.join(columnDelimiter);\n    result += lineDelimiter;\n\n    data.forEach(function(item) {\n        ctr = 0;\n        keys.forEach(function(key) {\n            if (ctr > 0) result += columnDelimiter;\n\n            result += item[key];\n            ctr++;\n        });\n        result += lineDelimiter;\n    });\n\n    return result;\n  }\n\n  async downloadCSV(args,array_to_export) {  \n    var data, filename, link;\n    var csv = await this.convertArrayOfObjectsToCSV({\n        data: await array_to_export\n    });\n    if (csv == null) return;\n\n    filename = args.filename || 'export.csv';\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n        csv = 'data:text/csv;charset=utf-8,' + csv;\n    }\n    data = encodeURI(csv);\n\n    link = document.createElement('a');\n    link.setAttribute('href', data);\n    link.setAttribute('download', filename);\n    link.click();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FirstPageComponent.html":{"url":"components/FirstPageComponent.html","title":"component - FirstPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FirstPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/first-page/first-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-first-page\n            \n\n            \n                styleUrls\n                ./first-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./first-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dictsToExport\n                            \n                            \n                                    Public\n                                forms\n                            \n                            \n                                organization\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                testDownload\n                            \n                            \n                                    Async\n                                testSetup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(query: QueryService, auth: AuthService, nav: NavbarService, data: DataExportService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/first-page/first-page.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                    QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    NavbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    DataExportService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/first-page/first-page.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            testDownload\n                            \n                            \n                        \n                    \n                \n                \n                    \ntestDownload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/first-page/first-page.component.ts:204\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            testSetup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        testSetup(form: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/first-page/first-page.component.ts:193\n                            \n                        \n\n\n                \n                    \n                            async setup() {\n   return this.query.genericQuery('SurveyData',this.organization).then((patientResults) => {\n     for (var i = 0; i \n   this.setupQuery(demographicObject)\n }   });\n}\nasync setupQuery(demographicObject){\n   await this.query.exactlyOneQuery('HistoryEnvironmentalHealth','client',demographicObject).then((environmentalHealthResults) =>{\n     if (environmentalHealthResults){\n         this.dictsToExport.push({\n             firstName: environmentalHealthResults.get('client').get('fname'),\n             lastName: environmentalHealthResults.get('client').get('lname'),\n             dob: environmentalHealthResults.get('client').get('dob'),\n             sex: environmentalHealthResults.get('client').get('sex'),\n             marriageStatus: environmentalHealthResults.get('client').get('marriageStatus'),\n             educationLevel: environmentalHealthResults.get('client').get('educationLevel'),\n             occupation: environmentalHealthResults.get('client').get('occupation'),\n             communityName: environmentalHealthResults.get('client').get('communityname'),\n             city: environmentalHealthResults.get('client').get('city'),\n             province: environmentalHealthResults.get('client').get('province'),\n             insuranceNumber: environmentalHealthResults.get('client').get('insuranceNumber'),\n             insuranceProvider: environmentalHealthResults.get('client').get('insuranceProvider'),\n             clinicProvider: environmentalHealthResults.get('client').get('clinicProvider'),\n             cedulaNumber: environmentalHealthResults.get('client').get('cedulaNumber'),\n             dataCollector: environmentalHealthResults.get('client').get('surveyingUser'),\n             latitude: environmentalHealthResults.get('client').get('latitude'),\n             longitude: environmentalHealthResults.get('client').get('longitude'),\n         yearsLivedinthecommunity: environmentalHealthResults.get('yearsLivedinthecommunity'),\n         yearsLivedinThisHouse: environmentalHealthResults.get('yearsLivedinThisHouse'),\n         medicalproblemswheredoyougo: environmentalHealthResults.get('medicalproblemswheredoyougo'),\n         dentalproblemswheredoyougo: environmentalHealthResults.get('dentalproblemswheredoyougo'),\n         numberofIndividualsLivingintheHouse: environmentalHealthResults.get('numberofIndividualsLivingintheHouse'),\n         numberofChildrenLivinginHouseUndertheAgeof5: environmentalHealthResults.get('numberofChildrenLivinginHouseUndertheAgeof5'),\n         biggestproblemofcommunity: environmentalHealthResults.get('biggestproblemofcommunity').replace(/,/g, '-'),\n         houseownership: environmentalHealthResults.get('houseownership'),\n         latrineAccess: environmentalHealthResults.get('latrineAccess'),\n         waterAccess: environmentalHealthResults.get('waterAccess'),\n         typeOfWaterDrank: environmentalHealthResults.get('typeofWaterdoyoudrink'),\n         clinicAccess: environmentalHealthResults.get('clinicAccess'),\n         trashPickUpFrequency: environmentalHealthResults.get('timesperweektrashcollected'),\n         trashLocation: environmentalHealthResults.get('wheretrashleftbetweenpickups'),\n         conditionOfFloor: environmentalHealthResults.get('conditionoFloorinyourhouse'),\n         conditionOfRoof: environmentalHealthResults.get('conditionoRoofinyourhouse'),\n         organizationWhoOwnsData: environmentalHealthResults.get('client').get('surveyingOrganization')\n\n   })\n }\n else {\n   this.dictsToExport.push({\n     //patient:{\n       firstName: demographicObject.get('fname'),\n       lastName: demographicObject.get('lname'),\n       dob: demographicObject.get('dob'),\n       sex: demographicObject.get('sex'),\n       marriageStatus: demographicObject.get('marriageStatus'),\n       educationLevel: demographicObject.get('educationLevel'),\n       occupation: demographicObject.get('occupation'),\n       communityName: demographicObject.get('communityname'),\n       city: demographicObject.get('city'),\n       province: demographicObject.get('province'),\n       insuranceNumber: demographicObject.get('insuranceNumber'),\n       insuranceProvider: demographicObject.get('insuranceProvider'),\n       clinicProvider: demographicObject.get('clinicProvider'),\n       cedulaNumber: demographicObject.get('cedulaNumber'),\n       dataCollector: demographicObject.get('surveyingUser'),\n       latitude: demographicObject.get('latitude'),\n       longitude: demographicObject.get('longitude'),\n\n       yearsLivedinthecommunity: null,\n       yearsLivedinThisHouse: null,\n       medicalproblemswheredoyougo: null,\n       dentalproblemswheredoyougo: null,\n       numberofIndividualsLivingintheHouse:null,\n       numberofChildrenLivinginHouseUndertheAgeof5:null,\n       biggestproblemofcommunity:null,\n       houseownership:null,\n       latrineAccess: null,\n       waterAccess: null,\n       typeOfWaterDrank:null,\n       clinicAccess: null,\n       trashPickUpFrequency: null,\n       trashLocation: null,\n       conditionOfFloor: null,\n       conditionOfRoof: null,\n       organizationWhoOwnsData: null\n\n   });\n }   })\n}\nasync getAllObjects() {\n   await this.setup();\n   console.log(this.dictsToExport)\n}\nconvertArrayOfObjectsToCSV(args) {   var result, ctr, keys, columnDelimiter, lineDelimiter, data;\n   data = args.data || null;\n   if (data == null || !data.length) {\n       return null;\n   }\n   columnDelimiter = args.columnDelimiter || ',';\n   //columnDelimiter = args.columnDelimiter || '\\t';\n   lineDelimiter = args.lineDelimiter || '\\n';\n   keys = Object.keys(data[0]);\n   result = '';\n   result += keys.join(columnDelimiter);\n   result += lineDelimiter;\n   data.forEach(function(item) {\n       ctr = 0;\n       keys.forEach(function(key) {\n           if (ctr > 0) result += columnDelimiter;\n       result += item[key];\n       ctr++;\n   });\n   result += lineDelimiter;   });\n   return result;\n}\nasync downloadCSV(args) {   var data, filename, link;\n   var csv = await this.convertArrayOfObjectsToCSV({\n       data: await this.dictsToExport\n   });\n   if (csv == null) return;\n   filename = args.filename || 'export.csv';\n   if (!csv.match(/^data:text/csv/i)) {\n       csv = 'data:text/csv;charset=utf-8,' + csv;\n   }\n   data = encodeURI(csv);\n   link = document.createElement('a');\n   link.setAttribute('href', data);\n   link.setAttribute('download', filename);\n   link.click();\n}\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dictsToExport\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dictsToExport:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/first-page/first-page.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        forms:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['EvalMedical','EnvForm','Vitals']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/first-page/first-page.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organization\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organization:     \n\n                    \n                \n                    \n                        \n                            Default value : this.auth.currentUser().organization\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/first-page/first-page.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from '../../providers/auth/auth.service';\nimport { QueryService} from '../../providers/query/query.service';\nimport { NavbarService } from '../../providers/navbar/navbar.service';\nimport { DataExportService } from '../../providers/data-export/data-export.service';\nimport { async } from 'q';\n\n@Component({\n  selector: 'app-first-page',\n  templateUrl: './first-page.component.html',\n  styleUrls: ['./first-page.component.scss']\n})\nexport class FirstPageComponent implements OnInit {\n  dictsToExport = []\n\n  public forms = ['EvalMedical','EnvForm','Vitals'];\n  organization = this.auth.currentUser().organization\n\n  constructor(private query:QueryService, \n    private auth:AuthService,\n    private nav:NavbarService,\n    private data:DataExportService) { \n    this.nav.show();\n    //this.getAllObjects()\n\n    \n  }\n\n  async ngOnInit() {\n    await this.auth.authenticated()\n    await this.testSetup('EvalMedical');\n  }\n\n  /**\n    \n \n  async setup() {\n    return this.query.genericQuery('SurveyData',this.organization).then((patientResults) => {\n      for (var i = 0; i {\n      if (environmentalHealthResults){\n          this.dictsToExport.push({\n              firstName: environmentalHealthResults.get('client').get('fname'),\n              lastName: environmentalHealthResults.get('client').get('lname'),\n              dob: environmentalHealthResults.get('client').get('dob'),\n              sex: environmentalHealthResults.get('client').get('sex'),\n              marriageStatus: environmentalHealthResults.get('client').get('marriageStatus'),\n              educationLevel: environmentalHealthResults.get('client').get('educationLevel'),\n              occupation: environmentalHealthResults.get('client').get('occupation'),\n              communityName: environmentalHealthResults.get('client').get('communityname'),\n              city: environmentalHealthResults.get('client').get('city'),\n              province: environmentalHealthResults.get('client').get('province'),\n              insuranceNumber: environmentalHealthResults.get('client').get('insuranceNumber'),\n              insuranceProvider: environmentalHealthResults.get('client').get('insuranceProvider'),\n              clinicProvider: environmentalHealthResults.get('client').get('clinicProvider'),\n              cedulaNumber: environmentalHealthResults.get('client').get('cedulaNumber'),\n              dataCollector: environmentalHealthResults.get('client').get('surveyingUser'),\n              latitude: environmentalHealthResults.get('client').get('latitude'),\n              longitude: environmentalHealthResults.get('client').get('longitude'),\n\n              yearsLivedinthecommunity: environmentalHealthResults.get('yearsLivedinthecommunity'),\n              yearsLivedinThisHouse: environmentalHealthResults.get('yearsLivedinThisHouse'),\n              medicalproblemswheredoyougo: environmentalHealthResults.get('medicalproblemswheredoyougo'),\n              dentalproblemswheredoyougo: environmentalHealthResults.get('dentalproblemswheredoyougo'),\n              numberofIndividualsLivingintheHouse: environmentalHealthResults.get('numberofIndividualsLivingintheHouse'),\n              numberofChildrenLivinginHouseUndertheAgeof5: environmentalHealthResults.get('numberofChildrenLivinginHouseUndertheAgeof5'),\n              biggestproblemofcommunity: environmentalHealthResults.get('biggestproblemofcommunity').replace(/,/g, '-'),\n              houseownership: environmentalHealthResults.get('houseownership'),\n              latrineAccess: environmentalHealthResults.get('latrineAccess'),\n              waterAccess: environmentalHealthResults.get('waterAccess'),\n              typeOfWaterDrank: environmentalHealthResults.get('typeofWaterdoyoudrink'),\n              clinicAccess: environmentalHealthResults.get('clinicAccess'),\n              trashPickUpFrequency: environmentalHealthResults.get('timesperweektrashcollected'),\n              trashLocation: environmentalHealthResults.get('wheretrashleftbetweenpickups'),\n              conditionOfFloor: environmentalHealthResults.get('conditionoFloorinyourhouse'),\n              conditionOfRoof: environmentalHealthResults.get('conditionoRoofinyourhouse'),\n              organizationWhoOwnsData: environmentalHealthResults.get('client').get('surveyingOrganization')\n            \n        })\n      }\n      else {\n        this.dictsToExport.push({\n          //patient:{\n            firstName: demographicObject.get('fname'),\n            lastName: demographicObject.get('lname'),\n            dob: demographicObject.get('dob'),\n            sex: demographicObject.get('sex'),\n            marriageStatus: demographicObject.get('marriageStatus'),\n            educationLevel: demographicObject.get('educationLevel'),\n            occupation: demographicObject.get('occupation'),\n            communityName: demographicObject.get('communityname'),\n            city: demographicObject.get('city'),\n            province: demographicObject.get('province'),\n            insuranceNumber: demographicObject.get('insuranceNumber'),\n            insuranceProvider: demographicObject.get('insuranceProvider'),\n            clinicProvider: demographicObject.get('clinicProvider'),\n            cedulaNumber: demographicObject.get('cedulaNumber'),\n            dataCollector: demographicObject.get('surveyingUser'),\n            latitude: demographicObject.get('latitude'),\n            longitude: demographicObject.get('longitude'),\n\n            yearsLivedinthecommunity: null,\n            yearsLivedinThisHouse: null,\n            medicalproblemswheredoyougo: null,\n            dentalproblemswheredoyougo: null,\n            numberofIndividualsLivingintheHouse:null,\n            numberofChildrenLivinginHouseUndertheAgeof5:null,\n            biggestproblemofcommunity:null,\n            houseownership:null,\n            latrineAccess: null,\n            waterAccess: null,\n            typeOfWaterDrank:null,\n            clinicAccess: null,\n            trashPickUpFrequency: null,\n            trashLocation: null,\n            conditionOfFloor: null,\n            conditionOfRoof: null,\n            organizationWhoOwnsData: null\n              \n        });\n      }\n    })\n  }\n\n  async getAllObjects() {\n    await this.setup();\n    console.log(this.dictsToExport)\n  }\n  \n  convertArrayOfObjectsToCSV(args) {  \n    var result, ctr, keys, columnDelimiter, lineDelimiter, data;\n\n    data = args.data || null;\n    if (data == null || !data.length) {\n        return null;\n    }\n\n    columnDelimiter = args.columnDelimiter || ',';\n    //columnDelimiter = args.columnDelimiter || '\\t';\n    lineDelimiter = args.lineDelimiter || '\\n';\n\n    keys = Object.keys(data[0]);\n\n    result = '';\n    result += keys.join(columnDelimiter);\n    result += lineDelimiter;\n\n    data.forEach(function(item) {\n        ctr = 0;\n        keys.forEach(function(key) {\n            if (ctr > 0) result += columnDelimiter;\n\n            result += item[key];\n            ctr++;\n        });\n        result += lineDelimiter;\n    });\n\n    return result;\n  }\n\n  async downloadCSV(args) {  \n    var data, filename, link;\n    var csv = await this.convertArrayOfObjectsToCSV({\n        data: await this.dictsToExport\n    });\n    if (csv == null) return;\n\n    filename = args.filename || 'export.csv';\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n        csv = 'data:text/csv;charset=utf-8,' + csv;\n    }\n    data = encodeURI(csv);\n\n    link = document.createElement('a');\n    link.setAttribute('href', data);\n    link.setAttribute('download', filename);\n    link.click();\n  }\n   */\n\n  async testSetup(form:string){\n    await this.data.setup(this.organization,form).then((results)=>{\n    //this.data.setup(this.organization,'EvalMedical').then((results)=>{\n    //this.data.setup(this.organization,'EnvForm').then((results)=>{\n    //this.data.setup(this.organization,'Vitals').then((results)=>{\n      this.dictsToExport = results\n    })\n   \n    \n  }\n\n  testDownload(){\n    console.log(this.dictsToExport)\n    this.data.downloadCSV({ filename: \"puente_export.csv\" },this.dictsToExport)\n  }\n}\n\n    \n\n    \n        \n  \n    \n    Patient First Name\n    Patient Last Name\n  \n  \n  \n    \n      All ze patient Info\n    \n  \n  \n\n   \n    \n\n    \n        \n          \n            Home\n            Dashboard\n          \n        \n        \n\n        Tables: \n        \n            \n                {{form}}\n            \n        \n\n        \n          Export!\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./first-page.component.scss\n                \n                .example-card {\n    max-width: 400px;\n  }\n  \n  .example-header-image {\n    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n    background-size: cover;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Patient First Name    Patient Last Name                All ze patient Info                                                 Home            Dashboard                                  Tables:                                     {{form}}                                      Export!                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeEnvComponent', 'selector': 'app-home-env'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MyAsideComponent', 'selector': 'app-my-aside'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FirstPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeEnvComponent.html":{"url":"components/HomeEnvComponent.html","title":"component - HomeEnvComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeEnvComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home-env/home-env.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-env\n            \n\n            \n                styleUrls\n                ./home-env.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home-env.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(nav: NavbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home-env/home-env.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    NavbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/home-env/home-env.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { NavbarService} from '../../providers/navbar/navbar.service';\n\n@Component({\n  selector: 'app-home-env',\n  templateUrl: './home-env.component.html',\n  styleUrls: ['./home-env.component.scss']\n})\nexport class HomeEnvComponent implements OnInit {\n\n  constructor(private nav:NavbarService) { }\n\n  ngOnInit() {\n    this.nav.show();\n  }\n\n}\n\n    \n\n    \n        \n     \n      \n       \n      \n  \n      \n        \n          \n            Home\n            Environmental Data\n            Tables and Charts\n          \n        \n  \n        \n          \n            \n              Dashboard\n            \n          \n          \n            \n              \n                March 8, 2017 - January 6, 2019\n              \n            \n          \n        \n  \n        \n        \n          \n              \n                Residents\n                {{dashboardData.number_of_residents}} collected\n                \n                  \n                    \n                      Male\n                      {{dashboardData.number_of_residents_male}}\n                    \n                  \n                  \n                    \n                      Female\n                      {{dashboardData.number_of_residents_female}}\n                    \n                  \n                \n              \n          \n          \n            \n              Ages\n              {{dashboardData.age_average}}yrs (Average)\n              \n                \n                  \n                    Age ~5\n                    {{dashboardData.age_under5}}\n                  \n                \n                \n                  \n                    ~18\n                    {{dashboardData.age_under18}}\n                  \n                \n                \n                  \n                    ~40\n                    {{dashboardData.age_under40}}\n                  \n                \n              \n            \n          \n          \n            \n              Occupation\n              {{dashboardData.occupation_highest_name}}: {{dashboardData.occupation_highest}} &uarr;\n              \n                \n                  \n                    Job\n                    30%\n                  \n                \n                \n                  \n                    Job\n                    30%\n                  \n                \n                \n                  \n                    Job\n                    30%\n                  \n                \n              \n            \n          \n          \n              \n                Surveyor\n                Renely: 60% &uarr;\n                \n                  \n                    \n                      Rodrigo\n                      20%\n                    \n                  \n                  \n                    \n                      Rose\n                      10%\n                    \n                  \n                  \n                    \n                      Josh\n                      10%\n                    \n                  \n                \n              \n          \n        \n        \n        \n        \n        \n          \n            \n            \n          \n          \n            \n          \n        \n      \n  \n    \n\n    \n\n    \n                \n                    ./home-env.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              Home            Environmental Data            Tables and Charts                                                                Dashboard                                                                          March 8, 2017 - January 6, 2019                                                                                                      Residents                {{dashboardData.number_of_residents}} collected                                                                            Male                      {{dashboardData.number_of_residents_male}}                                                                                                  Female                      {{dashboardData.number_of_residents_female}}                                                                                                                  Ages              {{dashboardData.age_average}}yrs (Average)                                                                    Age ~5                    {{dashboardData.age_under5}}                                                                                        ~18                    {{dashboardData.age_under18}}                                                                                        ~40                    {{dashboardData.age_under40}}                                                                                                          Occupation              {{dashboardData.occupation_highest_name}}: {{dashboardData.occupation_highest}} ↑                                                                    Job                    30%                                                                                        Job                    30%                                                                                        Job                    30%                                                                                                              Surveyor                Renely: 60% ↑                                                                            Rodrigo                      20%                                                                                                  Rose                      10%                                                                                                  Josh                      10%                                                                                                                                                                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeEnvComponent', 'selector': 'app-home-env'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MyAsideComponent', 'selector': 'app-my-aside'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeEnvComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/map/map.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map\n            \n\n            \n                styleUrls\n                ./map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/map/map.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/map/map.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\ndeclare let L;\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    const map = L.map('map').setView([51.505, -0.09], 13);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '© OpenStreetMap contributors'\n    }).addTo(map);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n        \n          \n            Map Tools\n          \n          \n            Assets\n            Community Member\n          \n        \n    \n    \n      \n        \n          Home\n          Map\n        \n      \n\n      \n  \n      \n    \n    \n      \n        \n          \n            F.Name\n            L.Name\n            S.User\n            Time\n          \n        \n        \n          \n            A\n            B\n            C\n            D\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./map.component.scss\n                \n                @import '../../../theme.scss';\n\nmain{\n    // padding: 1em 2em 1em 1em;\n    padding: 1em 2em 1em 1em;\n    a{\n        color: $brand-primary;\n    }\n    padding-right: 5px;\n}\n\n#map{\n    height: 1000px;\n    width: 100%;\n    padding-right: 0px;\n}\n\n.submissions{\n    //padding: 1em 2em 1em 1em;\n    padding-left:0px;\n    padding-right: 0px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Map Tools                                Assets            Community Member                                                  Home          Map                                                                        F.Name            L.Name            S.User            Time                                                A            B            C            D                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeEnvComponent', 'selector': 'app-home-env'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MyAsideComponent', 'selector': 'app-my-aside'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyAsideComponent.html":{"url":"components/MyAsideComponent.html","title":"component - MyAsideComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MyAsideComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/my-aside/my-aside.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-my-aside\n            \n\n            \n                styleUrls\n                ./my-aside.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./my-aside.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/my-aside/my-aside.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/my-aside/my-aside.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-aside',\n  templateUrl: './my-aside.component.html',\n  styleUrls: ['./my-aside.component.scss']\n})\nexport class MyAsideComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        General\n      \n      \n        Dashboard\n        Submissions\n      \n      \n        Environmental\n      \n      \n        Tables and Charts\n        Data Export\n      \n      \n        Health\n      \n      \n        Medical\n      \n    \n  \n    \n\n    \n                \n                    ./my-aside.component.scss\n                \n                // navigation left area\n@import \"../../theme.scss\";\n\np{\n  color: $brand-primary;\n}\n\n.row{\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display:         flex;\n}\n.heading,.title{\n  text-align: center;\n  justify-content: center;\n  word-wrap: break-word;\n}\n\n.justify{\n  justify-content: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  General                    Dashboard        Submissions                    Environmental                    Tables and Charts        Data Export                    Health                    Medical            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeEnvComponent', 'selector': 'app-home-env'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MyAsideComponent', 'selector': 'app-my-aside'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyAsideComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyNavComponent.html":{"url":"components/MyNavComponent.html","title":"component - MyNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MyNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/my-nav/my-nav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                my-nav\n            \n\n            \n                styleUrls\n                ./my-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./my-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                isHandset\n                            \n                            \n                                    Public\n                                nav\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, nav: NavbarService, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/my-nav/my-nav.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    NavbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/my-nav/my-nav.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/my-nav/my-nav.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isHandset:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.breakpointObserver.observe(Breakpoints.Handset)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/my-nav/my-nav.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nav:     NavbarService\n\n                    \n                \n                    \n                        \n                            Type :     NavbarService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/my-nav/my-nav.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     \n\n                    \n                \n                    \n                        \n                            Default value : this.auth.currentUser().name\n                        \n                    \n                        \n                            \n                                    Defined in src/app/my-nav/my-nav.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../providers/auth/auth.service';\nimport { NavbarService } from '../providers/navbar/navbar.service';\nimport { async } from '@angular/core/testing';\n\n\n@Component({\n  selector: 'my-nav',\n  templateUrl: './my-nav.component.html',\n  styleUrls: ['./my-nav.component.scss']\n})\nexport class MyNavComponent implements OnInit {\n  isHandset: Observable = this.breakpointObserver.observe(Breakpoints.Handset);\n\n  username = this.auth.currentUser().name;\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    public nav:NavbarService,\n    public auth:AuthService) {\n\n        //this.username = String(this.auth.currentUser().name)\n      }\n        \n    ngOnInit() {\n      this.auth.authenticated()\n    }\n  }\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n          \n        \n        Assess\n        Explore\n        \n        \n          \n          \n          \n        -->\n\n      \n\n\n      \n        Home\n        Explore\n                      \n          \n            \n          \n          6\n          \n        \n                        \n            \n              \n            \n            {{username}}\n          \n        \n                        \n              \n                \n                  \n                \n                Profile\n              \n              \n              \n                \n                  \n                \n                Logout\n              \n          \n        \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./my-nav.component.scss\n                \n                @import '../../theme.scss';\n\na{\n  color: $brand-primary\n}\n/*\n.resize {\n  max-width:  100%;\n  max-height: 100%;\n}*/\n\n.center {\n  margin: auto;\n  padding: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      Assess        Explore                                                      -->                    Home        Explore                                                                6                                                                                            {{username}}                                                                                                                          Profile                                                                                                            Logout                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeEnvComponent', 'selector': 'app-home-env'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MyAsideComponent', 'selector': 'app-my-aside'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavbarService.html":{"url":"injectables/NavbarService.html","title":"injectable - NavbarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NavbarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/navbar/navbar.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/providers/navbar/navbar.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \nhide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/navbar/navbar.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \nshow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/navbar/navbar.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/navbar/navbar.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/navbar/navbar.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavbarService {\n\n  visible: boolean;\n\n  constructor() { this.visible = false; }\n\n  hide() { this.visible = false; }\n\n  show() { this.visible = true; }\n\n  toggle() { this.visible = !this.visible; }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseService.html":{"url":"injectables/ParseService.html","title":"injectable - ParseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/parse/parse.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                parseAppId\n                            \n                            \n                                    Private\n                                parseJavascriptKey\n                            \n                            \n                                    Private\n                                parseServerUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                parseEnvironment\n                            \n                            \n                                    Public\n                                parseInitialize\n                            \n                            \n                                runCloudFunction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/providers/parse/parse.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parseEnvironment\n                            \n                            \n                        \n                    \n                \n                \n                    \nparseEnvironment()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/parse/parse.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Example :\n                                        \n                                            Returns a Parse Environment\nparseEnvironment()\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    a Parse Environment\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parseInitialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parseInitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/parse/parse.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Example :\n                                        \n                                            Authorize authentication into Parse-Server Backend\nparseInitialize()\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            runCloudFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \nrunCloudFunction(functionName: string, functionRequest: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/parse/parse.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        functionName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Name of Cloud Function\n\n                                                        \n                                                \n                                                \n                                                        functionRequest\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Paramers for Cloud Function\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Creates front-end function to access Cloud Function\nrunCloudFunction()\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Cloud Function\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parseAppId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parseAppId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.parseAppId\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/parse/parse.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parseJavascriptKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parseJavascriptKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.parseJavascriptKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/parse/parse.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parseServerUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parseServerUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.parseServerUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/parse/parse.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment.prod'\n\nimport { Parse } from 'parse';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParseService {\n  private parseAppId: string = environment.parseAppId;\n  private parseServerUrl: string = environment.parseServerUrl;\n  private parseJavascriptKey: string = environment.parseJavascriptKey;\n\n  constructor() { \n    this.parseInitialize();\n    console.log('Initiated Parse');\n  }\n\n  /**\n    * @example\n    * Returns a Parse Environment\n    * parseEnvironment()\n    *\n    * @returns a Parse Environment\n  */\n  parseEnvironment() {\n    return Parse;\n  }\n\n  /**\n    * @example\n    * Authorize authentication into Parse-Server Backend\n    * parseInitialize()\n    *\n    * @returns\n  */\n  public parseInitialize() {\n    //Back4app\n    Parse.initialize(this.parseAppId,this.parseJavascriptKey);\n    \n    //Server\n    Parse.serverURL = this.parseServerUrl;\n  }\n\n  /**\n    * @example\n    * Creates front-end function to access Cloud Function\n    * runCloudFunction()\n    *\n    * @param {string} functionName  Name of Cloud Function\n    * @param {string} functionRequest  Paramers for Cloud Function\n    * @returns Cloud Function\n  */\n  runCloudFunction(functionName:string, functionRequest:any){\n    return Parse.Cloud.run(functionName,functionRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessorsService.html":{"url":"injectables/ProcessorsService.html","title":"injectable - ProcessorsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProcessorsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/processors/processors.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                count_based_on_object_keys\n                            \n                            \n                                    Public\n                                object_to_array_of_objects\n                            \n                            \n                                    Public\n                                sortKeysBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/providers/processors/processors.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            count_based_on_object_keys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        count_based_on_object_keys(objects, keys_of_objects: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/processors/processors.service.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        objects\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                List of Objects with Keys\n\n                                                        \n                                                \n                                                \n                                                        keys_of_objects\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Key of object we want counted\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns an object of key-value pairs\ncount_based_on_object_keys(results,&#39;occupation&#39;)\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    ONE new object with counts as values for the keys\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            object_to_array_of_objects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        object_to_array_of_objects(obj)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/processors/processors.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns an array of a given objects own enumerable property [key, value] pairs, in the same order as that provided\nobject_to_array_of_objects(obj)\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Array of keys\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sortKeysBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sortKeysBy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/processors/processors.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Example :\n                                        \n                                            Like _.sortBy(), but on keys instead of values, returning an object, not an array. Defaults to alphanumeric sort.\n(Simply adds the mixin to the underscore library)\nsortKeysBy()\n-&gt;\n_.sortKeysBy(object) //this function is now usable\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    Object\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { _ } from 'underscore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProcessorsService {\n\n  constructor() { }\n  \n  /**\n    * @example\n    * Like _.sortBy(), but on keys instead of values, returning an object, not an array. Defaults to alphanumeric sort.\n    * (Simply adds the mixin to the underscore library)\n    * sortKeysBy()\n    * ->\n    * _.sortKeysBy(object) //this function is now usable\n    *\n    * @returns Object\n  */\n  public sortKeysBy(){\n    _.mixin({\n      'sortKeysBy': function (obj, comparator) {\n          var keys = _.sortBy(_.keys(obj), function (key) {\n              return comparator ? comparator(obj[key], key) : key;\n          });\n  \n          return _.object(keys, _.map(keys, function (key) {\n              return obj[key];\n          }));\n      }\n    });\n  }\n\n  /**\n    * @example\n    * Returns an array of a given objects own enumerable property [key, value] pairs, in the same order as that provided\n    * object_to_array_of_objects(obj)\n    *\n    * @param {any} objects  List of Objects with Keys\n    * @returns Array of keys\n  */  \n  public object_to_array_of_objects(obj){\n    return Object.entries(obj)\n  }\n\n  /**\n    * @example\n    * Returns an object of key-value pairs\n    * count_based_on_object_keys(results,'occupation')\n    *\n    * @param {any} objects  List of Objects with Keys\n    * @param {string} keys_of_objects  Key of object we want counted\n    * @returns ONE new object with counts as values for the keys\n  */\n  public count_based_on_object_keys(objects,keys_of_objects:string){\n    return _.countBy(objects, function(person) { return person.get(keys_of_objects)});\n  }\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryCustomService.html":{"url":"injectables/QueryCustomService.html","title":"injectable - QueryCustomService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueryCustomService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/query-custom/query-custom.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                count_sex_education_by_organization\n                            \n                            \n                                    Public\n                                retrieveAll_patientid_info_by_organization\n                            \n                            \n                                    Public\n                                retrieveAll_patientid_info_by_user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parse: ParseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/providers/query-custom/query-custom.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parse\n                                                  \n                                                        \n                                                                    ParseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            count_sex_education_by_organization\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        count_sex_education_by_organization(organization: string, educationLevelParam: string, sexParam: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query-custom/query-custom.service.ts:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        organization\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Name of User's organization\n\n                                                        \n                                                \n                                                \n                                                        educationLevelParam\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Options of Education level\n\n                                                        \n                                                \n                                                \n                                                        sexParam\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Options of Sex\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns a count of Patients Based on User Organization \ncount_sex_education_by_organization(&#39;puente&#39;,&#39;lessThanPrimary&#39;,&#39;Male&#39;)\n                                        \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    count of objects based\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            retrieveAll_patientid_info_by_organization\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        retrieveAll_patientid_info_by_organization(organization: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query-custom/query-custom.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        organization\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Organization\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns a list of Patients Based on Organization \nretrieveAll_patientid_info_by_organization(&#39;puente&#39;)\n                                        \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    list of objects based on patientModelClass\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            retrieveAll_patientid_info_by_user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        retrieveAll_patientid_info_by_user(username: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query-custom/query-custom.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Username of user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns a list of Patients Based on Username \nretrieveAll_patientid_info_by_user(&#39;puente&#39;)\n                                        \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    list of objects based on patientModelClass\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ParseService } from '../parse/parse.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueryCustomService {\n\n  constructor(private parse:ParseService) { \n    this.parse.parseInitialize();\n  }\n\n  /**\n    * @example\n    * Returns a list of Patients Based on Username \n    * retrieveAll_patientid_info_by_user('puente')\n    *\n    * @param {string} username  Username of user\n    * @returns list of objects based on patientModelClass\n  */\n  public retrieveAll_patientid_info_by_user(username: string): Promise {\n    //This is Retrieving Results from Parse Server\n    let Parse = this.parse.parseEnvironment();\n\n    //Returns the resolve (the query) and if there's an error, rejects\n    //Returns array of objects\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const PatientIDModel = Parse.Object.extend('SurveyData');\n\n        //Queries the SurveyData class from Parse Server\n        let query = new Parse.Query(PatientIDModel);\n\n        //You can limit the number of results by setting \"limit\"\n        query.limit(2000);\n        \n        query.notEqualTo(\"surveyingOrganization\", \"test\");\n        \n        //Limiting Results based on a class\n        query.equalTo(\"surveyingUser\",username);\n\n        //Below searches what's in the surveyPoints array\n        query.find().then((surveyPoints) => {\n          resolve(surveyPoints);\n        }, (error) => {\n          reject(error);\n        });\n      }, 500);\n    });\n  }\n\n  /**\n    * @example\n    * Returns a list of Patients Based on Organization \n    * retrieveAll_patientid_info_by_organization('puente')\n    *\n    * @param {string} organization  Organization\n    * @returns list of objects based on patientModelClass\n  */\n  public retrieveAll_patientid_info_by_organization(organization: string): Promise {\n    //This is Retrieving Results from Parse Server\n    let Parse = this.parse.parseEnvironment();\n\n    //Returns the resolve (the query) and if there's an error, rejects\n    //Returns array of objects\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const PatientIDModel = Parse.Object.extend('SurveyData');\n\n        //Queries the SurveyData class from Parse Server\n        let query = new Parse.Query(PatientIDModel);\n\n        //You can limit the number of results by setting \"limit\"\n        query.limit(2000);\n        \n        //query.notEqualTo(\"surveyingOrganization\", \"test\");\n        \n        //Limiting Results based on a class\n        query.equalTo(\"surveyingOrganization\",organization);\n\n        //Below searches what's in the surveyPoints array\n        query.find().then((surveyPoints) => {\n          resolve(surveyPoints);\n        }, (error) => {\n          reject(error);\n        });\n      }, 1000);\n    });\n  }\n\n  /**\n    * @example\n    * Returns a count of Patients Based on User Organization \n    * count_sex_education_by_organization('puente','lessThanPrimary','Male')\n    *\n    * @param {string} organization  Name of User's organization\n    * @param {string} educationLevelParam  Options of Education level\n    * @param {string} sexParam  Options of Sex\n    * @returns count of objects based\n  */\n  async count_sex_education_by_organization(organization:string,educationLevelParam:string,sexParam:string): Promise {\n  //This is Retrieving Results from Parse Server\n  let Parse = this.parse.parseEnvironment();\n\n  //Returns the resolve (the query) and if there's an error, rejects\n  //Returns array of objects\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      //Creates local object based on \"SurveyData\" Object in Parse-Server\n      const Model = Parse.Object.extend('SurveyData');\n\n      //Queries the SurveyData class from Parse Server\n      let query = new Parse.Query(Model);\n\n      //You can limit the number of results by setting \"limit\"\n      //query.limit(2000);\n\n      //Limiting Results based on a class\n      query.equalTo('educationLevel',educationLevelParam);\n      query.equalTo('sex',sexParam);\n      //query.equalTo('surveyingUser',username);\n      query.equalTo('surveyingOrganization',organization);\n\n      query.descending();\n      \n      //query.notEqualTo(\"surveyingOrganization\", \"test\");\n      \n      //Limiting Results based on a class\n      //query.equalTo(parseColumn);\n\n      //I'm a hack\n      //query.equalTo('surveyingUser','candiany')\n\n      //Below searches what's in the surveyPoints array\n      query.count().then((surveyPoints) => {\n        resolve(surveyPoints);\n      }, (error) => {\n        reject(error);\n      });\n    }, 500);\n  });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryService.html":{"url":"injectables/QueryService.html","title":"injectable - QueryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/query/query.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                containedQuery\n                            \n                            \n                                    Async\n                                countQuery\n                            \n                            \n                                    Public\n                                exactlyOneQuery\n                            \n                            \n                                    Public\n                                genericQuery\n                            \n                            \n                                hello\n                            \n                            \n                                listAllPatients\n                            \n                            \n                                listPatientsByOrganization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parse: ParseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/providers/query/query.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parse\n                                                  \n                                                        \n                                                                    ParseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            containedQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        containedQuery(limit: number, parseObject: string, parseColumn: string, parseParamValuesArray: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query/query.service.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        limit\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                1000\n                                                        \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        parseObject\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                Name of Cloud Class\n\n                                                        \n                                                \n                                                \n                                                        parseColumn\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                Name of Cloud Class Column \n\n                                                        \n                                                \n                                                \n                                                        parseParamValuesArray\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                Name of Parameter within Class Colum\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns a list of objects based on parameters \ncontainedQuery(2000,SurveyData,organization,Puente)\n                                        \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    list of objects\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            countQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        countQuery(organization, parseModel: string, parseColumn: string, parseParamValue: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query/query.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organization\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parseModel\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parseColumn\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parseParamValue\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            exactlyOneQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        exactlyOneQuery(parseObject: string, parseColumn: string, parseParamValue: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query/query.service.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parseObject\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parseColumn\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parseParamValue\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            genericQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        genericQuery(parseObject: string, parseColumn: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query/query.service.ts:136\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        parseObject\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Name of Cloud Class\n\n                                                        \n                                                \n                                                \n                                                        parseColumn\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns a list of objects \ngenericQuery(SurveyData)\n                                        \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    list of objects\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hello\n                            \n                            \n                        \n                    \n                \n                \n                    \nhello()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query/query.service.ts:178\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Example :\n                                        \n                                            Returns a console.log of Hello\nhello()\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    console.log of hello\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listAllPatients\n                            \n                            \n                        \n                    \n                \n                \n                    \nlistAllPatients()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query/query.service.ts:189\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Example :\n                                        \n                                            Returns a list of all objects in SurveyData (PatientDemographicsClass)\nlistAllPatients()\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    list of objects\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listPatientsByOrganization\n                            \n                            \n                        \n                    \n                \n                \n                    \nlistPatientsByOrganization(organization)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query/query.service.ts:201\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        organization\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Name of Organization\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns a list of objects based on organization \nlistPatientsByOrganization(Puente)\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    list of objects\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ParseService } from '../parse/parse.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueryService {\n\n  constructor(private parse:ParseService) { \n    this.parse.parseInitialize();\n  }\n\n  /*\n\n  */\n  async countQuery(organization, parseModel:string,parseColumn: string, parseParamValue: any): Promise {\n    //This is Retrieving Results from Parse Server\n    let Parse = this.parse.parseEnvironment();\n\n    //Returns the resolve (the query) and if there's an error, rejects\n    //Returns array of objects\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        //Creates local object based on \"SurveyData\" Object in Parse-Server\n        const Model = Parse.Object.extend(parseModel);\n\n        //Queries the SurveyData class from Parse Server\n        let query = new Parse.Query(Model);\n\n        //You can limit the number of results by setting \"limit\"\n        query.limit(2000);\n\n        //Limiting Results based on a class\n        query.equalTo(parseColumn,parseParamValue);\n        //query.equalTo('surveyingUser',username);\n        query.equalTo('surveyingOrganization',organization);\n        \n        //query.notEqualTo(\"surveyingOrganization\", \"test\");\n        \n        //Limiting Results based on a class\n        //query.equalTo(parseColumn);\n\n        //I'm a hack\n        //query.equalTo('surveyingUser','candiany')\n\n        //Below searches what's in the surveyPoints array\n        query.count().then((surveyPoints) => {\n          resolve(surveyPoints);\n        }, (error) => {\n          reject(error);\n        });\n      }, 500);\n    });\n  }\n\n  public exactlyOneQuery(parseObject: string, parseColumn: string, parseParamValue: any): Promise{\n    //This is Retrieving Results from Parse Server\n    let Parse = this.parse.parseEnvironment();\n\n    //Returns the resolve (the query) and if there's an error, rejects\n    //Returns array of objects\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        //Creates local object based on parseObject in Parse-Server\n        const Objekt = Parse.Object.extend(parseObject);\n\n        //Queries the parseObject class from Parse Server\n        let query = new Parse.Query(Objekt);\n\n        //Limiting Results based on a class\n        query.equalTo(parseColumn,parseParamValue);\n        //query.containedIn(parseColumn,parseParamValuesArray);\n\n        //Below searches what's in the surveyPoints array\n        query.first().then((surveyPoints) => {\n          resolve(surveyPoints);\n        }, (error) => {\n          reject(error);\n          //console.log(error)\n        });\n      }, 500);\n    });\n\n  }\n\n  /**\n    * @example\n    * Returns a list of objects based on parameters \n    * containedQuery(2000,SurveyData,organization,Puente)\n    *\n    * @param {number} Limit  Number of Queries\n    * @param {string} parseObject  Name of Cloud Class\n    * @param {string} parseColumn  Name of Cloud Class Column \n    * @param {string} parseParamValuesArray Name of Parameter within Class Colum\n    * @returns list of objects\n  */\n  public containedQuery(limit: number=1000, parseObject: string, parseColumn: string, parseParamValuesArray: any): Promise {\n    //This is Retrieving Results from Parse Server\n    let Parse = this.parse.parseEnvironment();\n\n    //Returns the resolve (the query) and if there's an error, rejects\n    //Returns array of objects\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        //Creates local object based on parseObject in Parse-Server\n        const SurveyData = Parse.Object.extend(parseObject);\n\n        //Queries the parseObject class from Parse Server\n        let query = new Parse.Query(SurveyData);\n\n        //Limiting Results based on a class\n        //query.equalTo(parseColumn,parseParam);\n        query.containedIn(parseColumn,parseParamValuesArray);\n\n        //You can limit the number of results by setting \"limit\"\n        query.limit(limit);\n\n        //Below searches what's in the surveyPoints array\n        query.find().then((surveyPoints) => {\n          resolve(surveyPoints);\n        }, (error) => {\n          reject(error);\n        });\n      }, 500);\n    });\n  }\n\n  /**\n    * @example\n    * Returns a list of objects \n    * genericQuery(SurveyData)\n    *\n    * @param {string} parseObject  Name of Cloud Class\n    * @returns list of objects\n  */\n  public genericQuery(parseObject: string, parseColumn: string): Promise {\n    //This is Retrieving Results from Parse Server\n    let Parse = this.parse.parseEnvironment();\n\n    //Returns the resolve (the query) and if there's an error, rejects\n    //Returns array of objects\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        //Creates local object based on \"SurveyData\" Object in Parse-Server\n        const SurveyData = Parse.Object.extend(parseObject);\n\n        //Queries the SurveyData class from Parse Server\n        let query = new Parse.Query(SurveyData);\n\n        //You can limit the number of results by setting \"limit\"\n        query.limit(2000);\n        \n        //query.notEqualTo(\"surveyingOrganization\", \"test\");\n        \n        //Limiting Results based on a class\n        query.equalTo('surveyingOrganization',parseColumn);\n\n        //I'm a hack\n        //query.equalTo('surveyingUser',usersName);\n\n        //Below searches what's in the surveyPoints array\n        query.find().then((surveyPoints) => {\n          resolve(surveyPoints);\n        }, (error) => {\n          reject(error);\n        });\n      }, 500);\n    });\n  }\n\n  /**\n    * @example\n    * Returns a console.log of Hello\n    * hello()\n    *\n    * @returns console.log of hello\n  */\n  hello(){\n    return this.parse.runCloudFunction(\"hello\",null);\n  }\n\n  /**\n    * @example\n    * Returns a list of all objects in SurveyData (PatientDemographicsClass)\n    * listAllPatients()\n    *\n    * @returns list of objects\n  */\n  listAllPatients(){\n    return this.parse.runCloudFunction(\"retrievePatientRecordsAll\", null);\n  }\n\n  /**\n    * @example\n    * Returns a list of objects based on organization \n    * listPatientsByOrganization(Puente)\n    *\n    * @param {string} organization Name of Organization\n    * @returns list of objects\n  */\n  listPatientsByOrganization(organization){\n    return this.parse.runCloudFunction(\"retrievePatientRecordByOrgnization\", {\n      organization: organization\n    });\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignInComponent.html":{"url":"components/SignInComponent.html","title":"component - SignInComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignInComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/sign-in/sign-in.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-in\n            \n\n            \n                styleUrls\n                ./sign-in.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sign-in.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                doSignin\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authPvdr: AuthService, route: ActivatedRoute, router: Router, nav: NavbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/sign-in/sign-in.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authPvdr\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    NavbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            doSignin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doSignin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/sign-in/sign-in.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/sign-in/sign-in.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/sign-in/sign-in.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/sign-in/sign-in.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {Parse} from 'parse';\n\nimport { NavbarService } from '../../providers/navbar/navbar.service';\nimport { AuthService } from '../../providers/auth/auth.service';\n\n\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss']\n})\nexport class SignInComponent implements OnInit {\n  password: string = '';\n  username: string = '';\n\n  constructor(\n    private authPvdr: AuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private nav:NavbarService) { }\n\n  ngOnInit() {\n    this.nav.hide();\n  }\n  async doSignin(){\n    //this.authPvdr.signin(this.username, this.password)\n    //  .subscribe(\n    //    success => {\n    await Parse.User.logIn(this.username, this.password);\n    this.router.navigate(['/home']);\n    // },\n    //    error => {\n            //this.alertService.error(error);\n            //this.loading = false;\n    //    });\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n          \n              Login\n              Please login to proceed.\n              \n                  \n                      \n                  \n\n                  \n                      \n                          \n                              \n                          \n                      \n\n                      \n                          \n                              \n                          \n                      \n                      \n                        \n                            \n                            Remember me\n                        \n                      -->\n                      Login\n                  \n              \n              \n                  Sign Up &nbsp;·&nbsp;\n                  Forgot Password &nbsp;·&nbsp;\n                  Need Help?\n              -->\n          \n      \n  \n\n    \n\n    \n                \n                    ./sign-in.component.scss\n                \n                \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Login              Please login to proceed.                                                                                                                                                                                                                                                                                                                                                                                                                                                            Remember me                                              -->                      Login                                                                Sign Up  ·                   Forgot Password  ·                   Need Help?              -->                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeEnvComponent', 'selector': 'app-home-env'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MyAsideComponent', 'selector': 'app-my-aside'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignInComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SubmissionsComponent.html":{"url":"components/SubmissionsComponent.html","title":"component - SubmissionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SubmissionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/submissions/submissions.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-submissions\n            \n\n            \n                styleUrls\n                ./submissions.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./submissions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataList\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(query: QueryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/submissions/submissions.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                    QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyFilter(filterValue: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterValue\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataSource:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayedColumns:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['fname', 'lname', 'surveyingUser', 'createdAt']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paginator:     MatPaginator\n\n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sort:     MatSort\n\n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { QueryService} from '../../providers/query/query.service';\n\nimport { MatSort, MatPaginator, MatTableDataSource} from '@angular/material';\n\n@Component({\n  selector: 'app-submissions',\n  templateUrl: './submissions.component.html',\n  styleUrls: ['./submissions.component.scss']\n})\nexport class SubmissionsComponent implements OnInit {\n\n  dataSource;\n  dataList = [];\n  displayedColumns: string[] = ['fname', 'lname', 'surveyingUser', 'createdAt'];\n\n  /*\n    Pagination\n  */\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  /*\n    Sorting\n  */\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private query:QueryService) { \n    this.setup().then(()=>{\n      this.dataSource = new MatTableDataSource(this.dataList);\n      this.dataSource.paginator = this.paginator; \n      this.dataSource.sort = this.sort;\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  setup(){\n    return this.query.listAllPatients().then((results) => {\n      for (var i = 0; i \n    \n\n    \n        \n     \n      \n       \n      \n      \n      \n        \n          \n            Home\n            Dashboard\n            Submissions\n          \n        \n  \n        \n          \n            \n              Submissions\n            \n          \n          \n            \n              \n                March 8, 2017 - January 6, 2019\n              \n            \n          \n        \n        \n        \n\n            \n              \n            \n          \n            \n          \n              \n                 First Name \n                 {{user.fname}} \n              \n          \n              \n                 Last Name \n                 {{user.lname}} \n              \n          \n              \n                 Surveying User \n                 {{user.surveyingUser}} \n              \n          \n              \n                 Time \n                 {{user.createdAt}} \n              \n          \n              \n              \n            \n          \n            \n        \n      \n  \n    \n  \n\n    \n\n    \n                \n                    ./submissions.component.scss\n                \n                @import \"../../../theme.scss\";\n\n/* When the input is not focused */\nmat-form-field.mat-form-field {\n    background-color: $brand-secondary;\n    padding-bottom: 0%;\n    font-size: 16px;\n}\n\n  \n\n.submissions {\n    border-radius: 10px; /* 5px rounded corners */\n    //padding-top: 20px;\n    padding-right: 20px;\n    padding-bottom: 10px;\n    padding-left: 20px;\n    color: $brand-primary;\n    margin-top: 0%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n    transition: 0.3s;\n    \n}\n.submissions:hover {\n    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\n  }\n\ntable {\n    width: 100%;\n    \n}\n\n.mat-input-element{\n    color:$brand-primary;\n}\n.mat-form-field {\n    font-size: 14px;\n    width: 100%;\n    color: $brand-primary;\n}\n\n// main area\n.main{\n   // padding: 1em 2em 1em 1em;\n    a{\n      color: $brand-primary;\n    }\n}\n\nmain{\n  padding: 1em 2em 1em 1em;\n}\n\np{\n  color: $brand-primary;\n}\n\n.row{\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display:         flex;\n}\n.heading,.title{\n  text-align: center;\n  justify-content: center;\n  word-wrap: break-word;\n}\n\n.justify{\n  justify-content: center;\n}\n\n\n.chart1{\n  background: lighten($brand-secondary,0);\n}\n\n.chart2{\n  height: 450px;\n  background: lighten($brand-alternative-secondary,0);\n}\n\n.level-item{\n  margin:1%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                  Home            Dashboard            Submissions                                                                Submissions                                                                          March 8, 2017 - January 6, 2019                                                                                                                                                                 First Name                  {{user.fname}}                                                        Last Name                  {{user.lname}}                                                        Surveying User                  {{user.surveyingUser}}                                                        Time                  {{user.createdAt}}                                                                                                             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeEnvComponent', 'selector': 'app-home-env'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MyAsideComponent', 'selector': 'app-my-aside'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SubmissionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                organization\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            organization\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organization:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n//import 'rxjs/add/operator/map';\nimport { map } from 'rxjs/operators';\n\n\n// Parse\nimport { Parse } from 'parse';\n\n// Constants\nimport { environment } from '../../../environments/environment.prod';\n\nexport class User {\n  public id: string;\n  public name: string;\n  public email: string;\n  public organization: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private parseAppId: string = environment.parseAppId;\n  private parseServerUrl: string = environment.parseServerUrl;\n  private parseJavascriptKey: string = environment.parseJavascriptKey;\n\n  constructor() { \n    this.parseInitialize();\n    console.log('Initiated Auth');\n  }\n\n  public signin(username: string, password: string): Observable {\n    \n    return new Observable((observer) => {\n      //REFACTOR LATER\n      /*\n      let loader = this.loadCtrl.create({\n\n        content: 'Signing in...'\n      });\n\n      let alerter = this.alertCtrl.create({\n        title: 'Login Error',\n        subTitle: 'Invalid username and/or password',\n        buttons: ['Try Again']\n      });\n\n      loader.present(); */\n      async () => {\n        await Parse.User.logIn(username, password, {\n          success: function (user) {\n            // Do stuff after successful login, like a redirect.\n            console.log('User logged in successful with username: ' + user.get(\"username\"));\n            observer.next(true);\n            observer.complete();\n          },\n          error: function (user, error) {\n            // If the user inputs the email instead of the username\n            //console.log(error);\n            console.log(\"Trying to use email instead of Username\");\n            var userQuery = new Parse.Query(Parse.User);\n\n            userQuery.equalTo('email', username);\n            userQuery.first().then(function (success) {\n              var username = success.toJSON().username; \n              Parse.User.logIn(username, password, {\n                success: function (user) {\n                  // Do stuff after successful login, like a redirect.\n                  //loader.dismiss();\n                  console.log('User logged in successful with email: ' + user.get(\"email\"));\n                  observer.next(true);\n                  observer.complete();\n                },\n                error: function (user, error) {\n                  //loader.dismiss().then(()=>{\n                  //  alerter.present();\n                  //})\n                  //alerter.dismiss();\n                  console.log(error);\n                  observer.error(error);\n                  observer.complete();\n                }\n              });\n            }, function (error) {\n              //loader.dismiss().then(()=>{\n              //  alerter.present();\n              //})\n              //alerter.dismiss();\n              console.log(error);\n              observer.error(error);\n              observer.complete();\n            });\n            //loader.dismiss().then(()=>{\n            //  alerter.present();\n            //})\n            //alerter.dismiss();\n          }\n        });\n      }\n    });\n  }\n\n  public signup(username: string, password: string, email: string, organization: string): Observable {\n    return new Observable((observer) => {\n      var user = new Parse.User();\n      user.set('username', username);\n      user.set('password', password);\n      user.set('email', email);\n      user.set('organization', organization)\n\n      user.signUp(null, {\n        success: (user) => {\n          console.log('User created successful with name: ' + user.get(\"username\") + ' and email: ' + user.get(\"email\"));\n          observer.next(true);\n          observer.complete();\n        },\n        error: (user, error) => {\n          // Show the error message somewhere and let the user try again.\n          // It is likely that the user is trying to sign with a username or email already taken.\n          console.log(\"Error: \" + error.code + \" \" + error.message);\n          observer.error(error);\n          observer.complete();\n        }\n      });\n\n    });\n  }\n\n  public signout(): Observable {\n    return new Observable((observer) => {\n      Parse.User.logOut().then(() => observer.next(true));\n    });\n  }\n\n  public forgotPassword(email:string) {\n    return Parse.User.requestPasswordReset(email, {\n      success: function() {\n          console.log(\"Password reset request was sent successfully\");\n      },\n      error: function(error) {\n          console.log(\"The login failed with error: \" + error.code + \" \" + error.message);\n      }\n  });\n  }\n\n  public currentUser(): User {\n    let u = Parse.User.current();\n    if (u) {\n      var user = new User();\n      user.id = u.id;\n      user.name = u.get('username');\n      user.email = u.get('email');\n      user.organization = u.get('organization');\n      return user;\n    }\n    return null\n  }\n\n  public authenticated(): boolean {\n    return this.currentUser() !== null;\n  }\n\n  public parseInitialize() {\n    //Back4app\n    Parse.initialize(this.parseAppId,this.parseJavascriptKey);\n    \n    //Heroku\n    //Parse.initialize(this.parseAppId);\n    \n    //Server\n    Parse.serverURL = this.parseServerUrl;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/my-aside/my-aside.component.ts\n            \n            \n                component\n            \n            \n                MyAsideComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/my-nav/my-nav.component.ts\n            \n            \n                component\n            \n            \n                MyNavComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/pages/communityAnalysis/communityAnalysis.component.ts\n            \n            \n                component\n            \n            \n                CommunityAnalysisComponent\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/pages/first-page/first-page.component.ts\n            \n            \n                component\n            \n            \n                FirstPageComponent\n            \n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/pages/home-env/home-env.component.ts\n            \n            \n                component\n            \n            \n                HomeEnvComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.component.ts\n            \n            \n                variable\n            \n            \n                Chart\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/map/map.component.ts\n            \n            \n                variable\n            \n            \n                L\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/sign-in/sign-in.component.ts\n            \n            \n                component\n            \n            \n                SignInComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pages/submissions/submissions.component.ts\n            \n            \n                component\n            \n            \n                SubmissionsComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/providers/auth/auth.service.ts\n            \n            \n                class\n            \n            \n                User\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/providers/auth/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/providers/data-export/data-export.service.ts\n            \n            \n                injectable\n            \n            \n                DataExportService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/providers/navbar/navbar.service.ts\n            \n            \n                injectable\n            \n            \n                NavbarService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/providers/parse/parse.service.ts\n            \n            \n                injectable\n            \n            \n                ParseService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/providers/processors/processors.service.ts\n            \n            \n                injectable\n            \n            \n                ProcessorsService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/providers/query-custom/query-custom.service.ts\n            \n            \n                injectable\n            \n            \n                QueryCustomService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/providers/query/query.service.ts\n            \n            \n                injectable\n            \n            \n                QueryService\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.0\n        \n            @angular/cdk : ^6.0.0\n        \n            @angular/cli : ^6.2.5\n        \n            @angular/common : ^6.0.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/compiler-cli : ^6.1.10\n        \n            @angular/core : ^6.0.0\n        \n            @angular/forms : ^6.0.0\n        \n            @angular/http : ^6.0.0\n        \n            @angular/material : ^6.0.2\n        \n            @angular/platform-browser : ^6.0.0\n        \n            @angular/platform-browser-dynamic : ^6.0.0\n        \n            @angular/router : ^6.0.0\n        \n            bulma : ^0.7.2\n        \n            chart.js : ^2.7.3\n        \n            core-js : ^2.5.4\n        \n            express : ^4.16.4\n        \n            moment : ^2.23.0\n        \n            ng2-charts : ^1.6.0\n        \n            parse : ^2.1.0\n        \n            path : ^0.12.7\n        \n            rxjs : ^6.0.0\n        \n            typescript : ~2.7.2\n        \n            underscore : ^1.9.1\n        \n            uglify-es : ^3.2.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPuente Angular\nStack\n\n\nAbout\nThis web application is meant to be the web platform used to manage data collected on the ionic mobile application Puente Data Collection\nAngular Framework\nAngular is a TypeScript-based open-source front-end web application platform led by the Angular Team at Google and by a community of individuals and corporations. Those powerful capabilities are brought to Angular because it provides mobile-friendly HTML, JS, and CSS components to developers.\nParse Server\nParse Server is an open source version of the Parse backend that can be deployed to any infrastructure that can run Node.js. Its repository on Github.\nBuild and Run\nInstall\ngit clone \ncd THIS_PROJ\nnpm installRun\nnpm run start:localBuild\nFor debug build\nnpm run buildThe build artifacts will be stored in the dist/ directory. \nFor production build\nnpm run build:productionCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nLook at the structure of the project in order to generate component in the correct location\nng generate directive|service|etc /providers/componentName/componentNameThis will create a folder for the component in the providers directory with the correct files inside that folder\nKnown Issues\n\nNeed to set environmental variables for local development/production \nNeed to set mongo migration for demo data\n\nContribution\n\nReport issues\nOpen pull request with improvements\nSpread the word\nReach out to me directly at \n\nDocumentation\nhttps://hopetambala.github.io/puente-angular-workbench/\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nThis project uses Material Design\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommunityAnalysisComponent\n\nCommunityAnalysisComponent\n\nAppModule -->\n\nCommunityAnalysisComponent->AppModule\n\n\n\n\n\nFirstPageComponent\n\nFirstPageComponent\n\nAppModule -->\n\nFirstPageComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHomeEnvComponent\n\nHomeEnvComponent\n\nAppModule -->\n\nHomeEnvComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nMyAsideComponent\n\nMyAsideComponent\n\nAppModule -->\n\nMyAsideComponent->AppModule\n\n\n\n\n\nMyNavComponent\n\nMyNavComponent\n\nAppModule -->\n\nMyNavComponent->AppModule\n\n\n\n\n\nSignInComponent\n\nSignInComponent\n\nAppModule -->\n\nSignInComponent->AppModule\n\n\n\n\n\nSubmissionsComponent\n\nSubmissionsComponent\n\nAppModule -->\n\nSubmissionsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Chart   (src/.../home.component.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            L   (src/.../map.component.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/pages/home/home.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Chart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Chart:     \n\n                    \n                \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  parseAppId: 'vBdTHqQU31IyLW5uYRDIWb8Ew8zCZGBzMqChugjr',\n  parseJavascriptKey: 'jFWiqliNRHXiH72J9kiotL8m0EuSdry1yFIiYlad',\n  parseServerUrl: 'https://parseapi.back4app.com/'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  parseAppId: '',\n  parseJavascriptKey: '',\n  parseServerUrl: ''\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/pages/map/map.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            L\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        L:     \n\n                    \n                \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
