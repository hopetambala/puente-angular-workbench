var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.142,1,0.709]],["body/components/AppComponent.html",[0,0.269,1,1.303,2,0.426,3,0.36,4,1.366,5,1.366,6,1.366,7,1.366,8,0.298,9,3.111,10,1.366,11,1.966,12,1.974,13,1.713,14,1.549,15,5.18,16,1.549,17,4.741,18,0.36,19,1.137,20,2.99,21,1.02,22,0.426,23,0.04,24,1.007,25,1.007,26,0.567,27,3.779,28,0.426,29,0.36,30,0.36,31,0.238,32,1.116,33,1.549,34,1.713,35,1.713,36,1.303,37,1.366,38,0.711,39,1.366,40,0.906,41,1.366,42,0.906,43,1.116,44,1.366,45,1.007,46,1.366,47,0.906,48,1.235,49,1.366,50,0.813,51,1.366,52,0.906,53,1.366,54,0.906,55,1.366,56,0.906,57,1.007,58,1.366,59,0.906,60,1.235,61,1.366,62,0.031,63,0.031]],["title/modules/AppModule.html",[64,1.627,65,1.833]],["body/modules/AppModule.html",[0,0.258,1,1.376,2,0.311,3,0.263,8,0.218,23,0.04,28,0.674,29,0.263,30,0.367,31,0.174,32,0.816,40,1.286,42,1.286,43,0.816,45,1.429,47,1.286,48,0.903,50,1.153,52,1.253,54,1.253,56,1.312,57,0.736,59,1.286,60,1.259,62,0.025,63,0.025,64,2.12,65,3.761,66,1.713,67,2.749,68,3.651,69,2.974,70,2.274,71,2.274,72,2.274,73,2.274,74,1.888,75,3.171,76,1.713,77,1.953,78,2.763,79,3.852,80,3.171,81,1.953,82,3.852,83,3.852,84,2.274,85,1.361,86,3.852,87,2.274,88,2.763,89,2.388,90,1.953,91,2.763,92,2.274,93,2.763,94,2.763,95,3.852,96,2.763,97,1.953,98,2.763,99,3.852,100,2.274,101,3.852,102,3.852,103,3.852,104,3.852,105,3.852,106,3.852,107,3.852,108,3.852,109,3.852,110,3.852,111,3.852,112,1.953,113,2.763,114,1.953,115,2.763,116,2.763,117,2.763,118,2.763,119,1.953,120,2.763,121,2.763,122,2.763,123,2.763,124,1.953,125,2.763,126,1.953,127,2.763,128,1.713,129,2.763,130,4.632,131,2.763,132,3.171,133,2.763,134,2.274,135,2.274,136,2.763,137,2.763,138,2.763,139,2.763,140,2.763,141,2.763]],["title/injectables/AuthService.html",[74,1.068,142,0.444]],["body/injectables/AuthService.html",[2,0.235,3,0.199,8,0.165,13,0.755,18,0.199,19,0.754,20,1.15,21,1.288,22,0.534,23,0.041,24,1.008,25,1.008,26,0.805,28,0.534,29,0.199,30,0.3,31,0.198,36,1.009,38,0.677,57,0.838,62,0.02,63,0.02,74,1.137,76,1.295,142,0.567,143,1.477,144,2.297,145,2.609,146,2.609,147,2.609,148,0.604,149,2.351,150,2.975,151,3.465,152,3.145,153,2.975,154,3.145,155,3.465,156,3.145,157,0.644,158,3.145,159,2.089,160,0.945,161,1.95,162,2.089,163,2.499,164,2.089,165,2.089,166,0.907,167,0.907,168,4.415,169,2.089,170,0.557,171,2.589,172,3.732,173,2.089,174,2.906,175,3.479,176,2.089,177,2.589,178,2.224,179,2.089,180,2.223,181,2.089,182,2.223,183,2.223,184,2.089,185,1.295,186,1.72,187,1.15,188,1.72,189,1.512,190,1.72,191,1.15,192,1.477,193,1.477,194,0.835,195,1.477,196,1.477,197,1.295,198,1.897,199,3.114,200,1.72,201,1.72,202,1.72,203,1.72,204,1.15,205,1.72,206,1.72,207,2.975,208,2.952,209,1.72,210,1.72,211,1.72,212,1.72,213,2.674,214,2.589,215,1.72,216,0.835,217,1.15,218,2.589,219,3.732,220,2.94,221,2.589,222,2.589,223,3.114,224,2.589,225,2.589,226,3.465,227,3.905,228,1.477,229,2.223,230,2.674,231,1.72,232,1.477,233,1.72,234,1.72,235,1.72,236,1.72,237,1.72,238,1.72,239,2.589,240,3.114,241,3.114,242,3.114,243,3.114,244,1.72,245,1.72,246,1.72,247,1.72,248,1.72,249,1.72,250,1.029,251,1.477,252,1.72,253,1.72,254,1.72,255,1.72,256,1.72,257,2.589,258,2.589,259,1.72,260,1.72,261,1.72,262,1.72,263,1.477,264,1.72,265,1.72,266,1.72,267,1.72,268,1.72,269,2.589,270,1.72,271,1.477,272,1.72,273,1.72,274,1.72,275,1.72,276,1.72,277,1.72,278,1.72,279,1.731,280,1.72,281,1.477,282,1.477,283,1.72,284,1.72,285,1.029,286,1.477,287,1.477]],["title/components/CommunityAnalysisComponent.html",[0,0.142,40,0.709]],["body/components/CommunityAnalysisComponent.html",[0,0.217,1,0.503,2,0.355,3,0.2,4,0.759,5,0.759,6,0.759,7,0.759,8,0.165,10,0.759,11,1.777,12,1.754,14,1.031,16,1.031,18,0.2,19,0.757,22,0.604,23,0.04,24,1.43,25,1.43,26,0.847,28,0.355,29,0.2,30,0.2,31,0.132,32,0.62,33,1.031,34,1.525,35,1.141,36,1.012,37,0.759,38,0.569,39,0.759,40,1.012,41,0.759,42,0.503,43,0.62,44,0.759,45,0.559,46,0.759,47,0.503,48,1.24,49,0.759,50,0.452,51,0.759,52,0.503,53,0.759,54,0.503,55,0.759,56,0.503,57,0.559,58,0.759,59,0.503,60,0.686,61,0.759,62,0.025,63,0.027,128,1.301,135,2.599,148,0.606,157,0.358,160,0.538,166,0.503,167,0.503,170,0.841,193,2.231,271,2.231,288,1.728,289,1.141,290,1.371,291,3.793,292,3.157,293,4.219,294,4.752,295,4.752,296,4.219,297,4.752,298,4.752,299,4.752,300,4.752,301,4.752,302,4.752,303,4.752,304,4.752,305,4.219,306,1.525,307,2.982,308,1.156,309,1.681,310,3.157,311,0.93,312,2.099,313,2.099,314,2.099,315,3.106,316,3.157,317,2.099,318,3.146,319,2.099,320,2.099,321,2.099,322,2.099,323,2.099,324,2.099,325,2.099,326,2.099,327,2.099,328,2.099,329,1.484,330,0.759,331,1.484,332,2.099,333,1.728,334,1.484,335,3.157,336,2.099,337,2.099,338,2.099,339,1.301,340,4.523,341,4.272,342,1.728,343,2.099,344,4.523,345,2.099,346,2.099,347,2.099,348,3.473,349,2.099,350,3.157,351,2.099,352,2.099,353,3.473,354,1.034,355,2.099,356,3.157,357,2.099,358,2.099,359,2.099,360,1.738,361,2.231,362,2.599,363,3.157,364,1.957,365,3.157,366,2.231,367,3.157,368,3.157,369,4.752,370,4.752,371,4.752,372,3.157,373,3.157,374,5.286,375,3.157,376,5.072,377,3.157,378,3.157,379,3.157,380,2.599,381,3.157,382,3.157,383,3.157,384,3.157,385,1.957,386,2.099,387,2.099,388,2.099,389,2.099,390,2.099,391,2.099,392,2.099,393,2.099,394,2.099,395,2.099,396,2.099,397,2.099]],["title/injectables/DataExportService.html",[142,0.444,398,1.833]],["body/injectables/DataExportService.html",[2,0.18,3,0.152,8,0.126,13,0.576,18,0.152,21,0.913,22,0.287,23,0.04,26,0.669,28,0.287,29,0.152,30,0.152,31,0.101,36,1.11,38,0.669,62,0.034,63,0.016,142,0.478,144,2.256,148,0.49,157,0.272,160,0.936,163,1.13,166,1.069,167,1.069,178,2.092,194,0.638,213,1.803,216,2.12,217,2.191,279,2.454,307,1.803,308,0.878,309,1.613,311,1.613,315,1.754,330,0.576,339,1.581,354,1.794,385,3.724,398,1.581,399,3.812,400,3.273,401,1.313,402,2.55,403,2.55,404,2.55,405,2.55,406,2.55,407,1.595,408,2.55,409,1.595,410,2.55,411,1.595,412,3.187,413,1.595,414,1.595,415,2.96,416,1.595,417,0.878,418,2.257,419,1.257,420,1.581,421,1.595,422,2.1,423,1.257,424,2.55,425,1.595,426,3.187,427,2.55,428,1.595,429,2.55,430,1.595,431,1.595,432,1.595,433,1.257,434,1.595,435,2.55,436,1.595,437,3.187,438,1.595,439,1.595,440,2.55,441,2.55,442,2.55,443,1.595,444,5.092,445,1.595,446,1.595,447,4.246,448,1.595,449,4.246,450,1.595,451,4.246,452,1.595,453,3.495,454,1.595,455,4.246,456,1.595,457,4.246,458,1.595,459,3.495,460,1.595,461,4.246,462,1.595,463,4.246,464,1.595,465,4.246,466,1.595,467,4.246,468,1.595,469,4.246,470,1.595,471,4.246,472,1.595,473,4.246,474,1.595,475,4.246,476,1.595,477,4.246,478,1.595,479,4.246,480,1.595,481,4.246,482,4.246,483,2.55,484,1.595,485,2.55,486,1.595,487,2.55,488,1.595,489,2.55,490,1.595,491,1.595,492,1.595,493,1.595,494,1.595,495,1.595,496,1.595,497,1.595,498,1.595,499,2.55,500,1.595,501,2.55,502,1.595,503,1.595,504,1.595,505,2.55,506,1.595,507,2.55,508,1.595,509,2.55,510,1.595,511,2.55,512,1.595,513,2.55,514,1.595,515,2.55,516,1.595,517,2.55,518,1.595,519,2.55,520,1.595,521,1.803,522,3.981,523,3.981,524,3.981,525,3.981,526,3.981,527,3.981,528,3.981,529,3.981,530,3.981,531,3.981,532,3.981,533,3.981,534,3.981,535,3.981,536,3.981,537,3.981,538,3.981,539,1.595,540,1.595,541,1.595,542,1.595,543,1.595,544,1.595,545,1.595,546,1.581,547,1.595,548,2.55,549,1.595,550,2.55,551,1.595,552,2.55,553,1.595,554,2.55,555,1.595,556,2.55,557,1.595,558,2.55,559,1.595,560,2.55,561,1.595,562,2.55,563,1.595,564,2.55,565,1.595,566,2.55,567,1.595,568,2.55,569,1.595,570,2.55,571,1.595,572,3.187,573,2.55,574,2.55,575,1.595,576,1.595,577,1.595,578,1.595,579,1.595,580,1.595,581,1.595,582,1.595,583,1.595,584,1.595,585,1.595,586,2.55,587,1.595,588,1.595,589,2.55,590,2.1,591,1.595,592,1.595,593,1.595,594,1.595,595,1.595,596,1.595,597,1.595,598,1.595,599,1.595,600,1.595,601,1.595,602,1.595,603,2.1,604,2.55,605,1.595,606,1.595,607,2.55,608,2.55,609,1.595,610,1.595,611,1.595,612,1.595,613,1.595,614,1.595,615,2.55,616,1.595,617,2.55,618,1.595,619,1.595,620,1.595,621,1.595,622,1.595,623,1.595,624,1.595,625,1.595,626,1.595,627,1.595,628,1.595,629,1.595,630,1.595,631,1.595,632,1.595,633,1.595,634,1.595,635,1.595,636,1.595,637,3.641,638,2.1,639,3.641,640,3.641,641,2.454,642,1.595,643,1.595,644,2.55,645,1.595,646,1.595,647,1.595,648,1.595,649,1.595,650,1.595,651,1.595,652,1.595,653,1.595,654,2.623,655,2.55,656,3.641,657,1.595,658,1.595,659,1.595,660,1.595,661,1.595,662,1.127,663,1.595,664,1.595,665,1.595,666,1.595,667,1.595]],["title/components/FirstPageComponent.html",[0,0.142,42,0.709]],["body/components/FirstPageComponent.html",[0,0.237,1,0.625,2,0.484,3,0.248,4,0.941,5,0.941,6,0.941,7,0.941,8,0.205,10,0.941,11,1.855,12,1.837,14,1.207,16,1.207,18,0.248,19,0.886,21,0.924,22,0.526,23,0.04,24,1.144,25,1.144,26,0.791,28,0.577,29,0.248,30,0.409,31,0.164,32,0.769,33,1.207,34,1.335,35,1.335,36,1.121,37,0.941,38,0.808,39,0.941,40,0.625,41,0.941,42,1.121,43,1.641,44,0.941,45,0.694,46,0.941,47,0.625,48,1.403,49,0.941,50,0.56,51,0.941,52,0.625,53,0.941,54,0.625,55,0.941,56,0.625,57,0.694,58,0.941,59,0.625,60,0.851,61,0.941,62,0.028,63,0.024,74,1.552,114,3.808,134,3.042,144,1.903,148,0.71,149,1.717,157,0.444,160,0.874,166,0.886,167,0.886,170,0.694,178,2.303,197,2.291,216,2.108,217,2.364,289,1.335,290,1.552,306,1.689,308,1.434,309,1.903,311,1.154,329,1.841,330,0.941,331,1.841,354,2.303,360,2.034,366,3.727,398,2.662,400,1.841,415,1.614,418,2.662,419,2.303,423,2.303,433,1.283,521,3.624,641,2.034,654,2.144,668,4.436,669,2.144,670,4.295,671,3.695,672,4.674,673,4.674,674,3.695,675,2.291,676,1.903,677,3.695,678,2.604,679,2.604,680,2.604,681,2.604,682,3.695,683,2.604,684,2.604,685,3.695,686,2.604,687,3.695,688,1.841,689,1.614,690,2.604,691,2.604,692,2.604,693,2.144,694,1.614,695,2.604,696,2.144,697,2.144,698,2.604,699,2.604,700,2.604,701,2.604,702,2.604,703,2.604,704,2.604,705,3.695,706,2.604,707,2.604,708,2.604,709,3.042,710,3.695,711,2.034,712,2.604,713,2.144,714,1.614,715,2.604,716,2.604,717,3.695,718,3.042,719,2.604,720,2.144,721,2.604]],["title/components/HomeEnvComponent.html",[0,0.142,47,0.709]],["body/components/HomeEnvComponent.html",[0,0.252,1,0.738,2,0.347,3,0.293,4,1.113,5,1.113,6,1.113,7,1.113,8,0.243,10,1.113,11,1.908,12,1.894,14,1.356,16,1.356,18,0.293,22,0.347,23,0.039,26,0.622,28,0.467,29,0.293,30,0.293,31,0.194,32,0.909,33,1.356,34,1.499,35,1.499,36,1.204,37,1.113,38,0.704,39,1.113,40,0.738,41,1.113,42,0.738,43,0.909,44,1.113,45,0.82,46,1.113,47,1.204,48,1.878,49,1.113,50,0.662,51,1.113,52,0.738,53,1.113,54,0.738,55,1.113,56,0.738,57,0.82,58,1.113,59,0.738,60,1.006,61,1.113,62,0.027,63,0.027,85,2.044,124,3.317,132,3.416,148,0.797,157,0.525,160,0.525,166,0.738,167,0.738,170,0.82,289,1.499,290,1.696,306,1.815,330,1.113,353,3.416,360,2.284,364,2.572,385,2.572,459,3.416,641,2.284,662,2.933,675,1.909,676,2.08,689,1.909,694,1.909,696,2.535,711,2.284,722,3.863,723,2.535,724,4.693,725,4.149,726,3.079,727,3.079,728,3.079,729,3.416,730,3.416,731,3.416,732,2.933,733,3.416,734,4.149,735,4.149,736,4.149,737,4.149,738,4.149,739,4.149,740,5.022,741,4.149,742,4.149,743,4.149,744,4.149,745,4.149,746,4.149,747,4.149,748,4.149,749,4.149,750,4.149,751,5.4,752,5.4,753,4.149,754,4.149,755,4.149,756,4.149,757,4.149,758,4.149,759,4.134,760,4.149]],["title/components/MapComponent.html",[0,0.142,50,0.636]],["body/components/MapComponent.html",[0,0.245,1,0.681,2,0.32,3,0.27,4,1.026,5,1.026,6,1.026,7,1.026,8,0.224,10,1.026,11,1.883,12,1.867,14,1.282,16,1.282,18,0.27,19,0.941,20,2.672,21,0.968,22,0.574,23,0.04,24,1.293,25,1.293,26,0.81,28,0.507,29,0.27,30,0.27,31,0.179,32,0.838,33,1.282,34,1.418,35,1.418,36,1.164,37,1.026,38,0.675,39,1.026,40,0.681,41,1.026,42,0.681,43,1.328,44,1.026,45,0.756,46,1.026,47,0.681,48,1.47,49,1.026,50,1.044,51,1.026,52,0.681,53,1.026,54,0.681,55,1.026,56,0.681,57,0.756,58,1.026,59,0.681,60,1.282,61,1.026,62,0.025,63,0.025,67,1.76,148,0.754,157,0.484,160,0.669,166,0.681,167,0.681,170,1.046,187,3.031,204,2.161,289,1.418,290,1.626,306,1.754,308,1.562,311,1.258,318,2.901,330,1.026,334,2.006,361,2.774,546,2.433,714,1.76,761,1.76,762,3.704,763,3.231,764,3.996,765,3.996,766,3.349,767,3.996,768,2.477,769,3.925,770,2.838,771,2.838,772,3.231,773,2.838,774,3.231,775,2.838,776,3.704,777,2.774,778,2.838,779,2.337,780,1.76,781,2.337,782,1.76,783,2.337,784,2.337,785,2.337,786,2.337,787,3.925,788,3.925,789,3.925,790,3.925,791,3.925,792,3.925,793,3.925,794,3.231,795,3.925,796,3.925,797,3.925,798,1.76,799,2.337,800,3.818,801,4.601,802,3.704,803,1.76,804,1.76,805,1.76,806,3.704,807,2.337,808,2.838,809,2.006,810,3.925,811,2.838,812,2.838]],["title/components/MyAsideComponent.html",[0,0.142,52,0.709]],["body/components/MyAsideComponent.html",[0,0.259,1,0.804,2,0.378,3,0.32,4,1.212,5,1.212,6,1.212,7,1.212,8,0.264,10,1.212,11,1.933,12,1.921,14,1.435,16,1.435,18,0.32,23,0.04,26,0.659,28,0.494,29,0.32,30,0.467,31,0.212,32,0.99,33,1.435,34,1.587,35,1.587,36,1.246,37,1.212,38,0.659,39,1.212,40,0.804,41,1.212,42,0.804,43,0.99,44,1.212,45,0.894,46,1.212,47,0.804,48,1.096,49,1.212,50,0.721,51,1.212,52,1.246,53,1.212,54,0.804,55,1.212,56,0.804,57,0.894,58,1.212,59,0.804,60,1.6,61,1.212,62,0.028,63,0.028,85,2.164,126,3.461,148,0.843,157,0.834,160,0.572,170,0.894,204,2.418,289,1.587,290,1.77,306,1.878,360,2.418,364,2.723,590,3.616,641,2.418,711,2.418,798,2.079,803,2.079,804,2.079,805,2.079,813,3.461,814,2.761,815,4.392,816,4.897,817,4.392,818,3.354,819,3.354,820,3.616,821,4.392,822,3.354,823,2.761,824,2.761,825,2.761,826,2.761,827,4.277,828,3.616,829,2.761,830,3.616,831,2.761,832,2.761,833,2.761,834,2.761,835,2.761,836,3.461,837,4.031,838,3.104,839,2.761,840,2.761]],["title/components/MyNavComponent.html",[0,0.142,54,0.709]],["body/components/MyNavComponent.html",[0,0.246,1,0.693,2,0.326,3,0.275,4,1.045,5,1.045,6,1.045,7,1.045,8,0.228,10,1.045,11,1.889,12,1.833,14,1.299,16,1.299,18,0.275,19,0.953,21,0.855,22,0.577,23,0.04,24,1.059,25,1.059,26,0.795,28,0.611,29,0.275,30,0.275,31,0.182,32,0.854,33,1.299,34,1.437,35,1.437,36,1.173,37,1.045,38,0.682,39,1.045,40,0.693,41,1.045,42,0.693,43,0.854,44,1.045,45,0.77,46,1.045,47,0.693,48,1.484,49,1.045,50,0.622,51,1.045,52,0.693,53,1.045,54,1.173,55,1.045,56,0.693,57,0.77,58,1.045,59,0.693,60,0.945,61,1.045,62,0.026,63,0.026,74,1.853,97,3.837,100,2.38,144,1.281,148,0.763,149,2.119,157,0.677,160,0.493,166,0.693,167,0.693,170,0.77,174,2.693,175,3.458,185,1.792,187,2.693,197,3.179,216,1.156,279,1.591,289,1.437,290,1.642,306,1.768,546,1.792,603,3.272,675,3.365,676,2.273,688,2.044,689,1.792,693,2.38,694,1.792,697,2.38,713,3.272,714,1.792,732,2.81,798,1.792,800,2.044,803,1.792,804,1.792,805,1.792,809,2.81,813,3.837,836,2.044,841,2.38,842,4.543,843,3.975,844,4.892,845,2.891,846,5.299,847,3.975,848,2.891,849,2.891,850,3.975,851,2.891,852,2.891,853,2.891,854,2.891,855,2.891,856,3.975,857,2.891,858,4.892,859,3.975,860,3.975,861,2.891,862,2.38,863,2.891,864,2.38]],["title/injectables/NavbarService.html",[142,0.444,676,1.31]],["body/injectables/NavbarService.html",[2,0.455,3,0.385,8,0.318,13,1.46,18,0.385,19,1.185,22,0.455,23,0.04,26,0.856,28,0.455,29,0.385,30,0.385,31,0.255,62,0.032,63,0.032,142,0.801,148,0.949,157,0.909,160,0.909,161,3.308,170,1.422,194,1.615,251,3.93,676,2.189,865,3.325,866,5.56,867,5.56,868,5.56,869,4.94,870,4.039,871,4.039,872,4.039,873,5.703,874,3.492,875,3.325]],["title/injectables/ParseService.html",[142,0.444,876,1.627]],["body/injectables/ParseService.html",[2,0.346,3,0.293,8,0.242,13,1.111,18,0.293,19,0.994,21,1.264,22,0.565,23,0.04,24,1.249,25,1.249,26,0.828,28,0.528,29,0.293,30,0.293,31,0.194,38,0.704,62,0.027,63,0.027,142,0.704,144,2.519,145,3.111,146,3.111,147,3.111,148,0.796,149,1.875,150,2.93,153,3.816,157,0.799,160,0.979,166,0.737,167,0.737,170,0.819,180,2.93,182,2.93,183,2.93,189,2.297,191,2.884,192,2.173,194,1.23,195,2.173,196,2.173,220,3.561,250,2.042,281,2.173,282,2.173,285,2.31,286,2.173,287,2.173,341,3.413,417,1.693,418,2.57,419,2.659,433,2.473,876,2.282,877,2.531,878,5.398,879,5.019,880,4.145,881,3.075,882,3.075,883,4.145,884,3.075,885,4.689,886,3.075,887,4.145,888,4.618,889,3.413,890,3.413,891,3.075,892,3.075,893,3.075,894,3.075,895,3.075]],["title/injectables/ProcessorsService.html",[142,0.444,896,2.09]],["body/injectables/ProcessorsService.html",[2,0.331,3,0.28,8,0.232,13,1.063,18,0.28,19,0.965,21,0.986,22,0.331,23,0.04,24,1.072,25,1.479,26,0.739,28,0.453,29,0.28,30,0.28,31,0.186,36,0.706,38,0.604,62,0.026,63,0.026,69,2.494,142,0.688,148,0.772,149,2.252,157,0.781,160,1.018,166,0.965,167,0.965,170,0.784,194,1.176,198,1.609,220,3.199,229,2.843,354,2.625,417,1.619,419,2.625,422,3.312,423,2.943,433,2.258,638,4.948,896,2.843,897,2.422,898,4.023,899,4.023,900,5.454,901,2.942,902,2.942,903,4.584,904,2.942,905,3.24,906,4.023,907,4.057,908,4.928,909,2.942,910,4.928,911,2.942,912,4.023,913,4.023,914,4.023,915,4.023,916,3.312,917,2.942,918,4.023,919,4.023,920,3.312,921,4.023,922,4.023,923,4.023,924,3.774,925,4.023,926,2.942,927,4.023,928,4.023,929,4.023,930,2.942,931,2.942,932,4.023,933,2.942,934,2.942,935,2.942,936,2.942,937,2.942,938,2.942,939,2.942,940,2.942,941,2.942,942,2.942,943,2.942]],["title/injectables/QueryCustomService.html",[142,0.444,768,1.627]],["body/injectables/QueryCustomService.html",[2,0.258,3,0.218,8,0.181,13,0.828,18,0.218,21,1.238,22,0.496,23,0.04,26,0.661,28,0.379,29,0.218,30,0.218,31,0.328,38,0.736,62,0.036,63,0.022,128,2.477,142,0.599,148,0.647,149,1.962,157,0.39,160,0.999,163,1.952,166,1.056,167,1.248,174,2.701,178,2.729,189,2.189,194,0.916,198,1.962,208,2.701,216,1.598,250,1.129,285,2.499,311,2.354,318,2.199,330,0.828,339,2.477,354,2.418,415,1.421,417,2.199,419,2.418,420,3.569,423,2.698,433,2.312,453,2.774,521,3.469,768,1.855,780,2.909,876,2.199,905,3.679,907,3.626,944,3.864,945,1.887,946,3.369,947,3.369,948,3.369,949,1.887,950,2.292,951,2.292,952,3.995,953,3.995,954,2.292,955,3.369,956,3.369,957,2.774,958,2.292,959,4.04,960,3.369,961,2.292,962,2.292,963,4.405,964,3.369,965,2.292,966,2.292,967,1.887,968,1.887,969,1.887,970,2.292,971,3.289,972,3.289,973,3.289,974,4.04,975,3.289,976,3.289,977,3.369,978,3.995,979,3.626,980,3.369,981,4.446,982,2.824,983,3.289,984,3.289,985,3.289,986,2.292,987,3.289,988,3.289,989,3.289,990,3.289,991,2.774,992,3.289,993,3.289,994,2.774,995,2.292,996,2.292,997,1.887,998,2.292,999,2.292,1000,1.62,1001,1.887,1002,2.292,1003,2.292,1004,1.887,1005,1.887,1006,2.292,1007,1.887,1008,1.887,1009,1.887,1010,1.887,1011,1.887]],["title/injectables/QueryService.html",[142,0.444,309,1.31]],["body/injectables/QueryService.html",[2,0.208,3,0.176,8,0.145,13,0.666,18,0.176,21,1.258,22,0.481,23,0.04,24,0.491,25,0.491,26,0.73,28,0.322,29,0.176,30,0.176,31,0.353,38,0.827,62,0.035,63,0.018,128,2.445,142,0.525,148,0.549,149,1.999,157,0.314,160,1.016,166,1.225,167,1.083,178,2.463,189,2.222,194,0.737,198,1.947,208,2.68,216,1.4,230,1.303,250,1.943,279,1.015,285,2.602,309,1.267,311,2.371,318,2.593,330,0.666,339,2.445,354,2.399,415,1.143,417,1.927,419,2.517,420,3.317,423,2.863,433,2.225,876,1.927,888,3.717,905,3.898,949,1.518,959,4.008,967,1.518,968,1.518,969,1.518,971,3.247,972,3.247,973,3.247,974,4.008,975,3.247,976,3.247,979,4.008,981,4.405,982,2.474,983,2.353,984,2.353,985,2.353,987,3.247,988,3.247,989,3.247,990,3.247,991,2.353,992,3.247,993,3.247,994,3.247,997,1.518,1000,2.788,1001,1.518,1004,1.518,1005,1.518,1007,1.518,1008,2.353,1009,2.353,1010,1.518,1011,1.518,1012,1.518,1013,2.858,1014,2.858,1015,2.858,1016,2.858,1017,5.108,1018,4.516,1019,2.858,1020,1.844,1021,2.858,1022,5.201,1023,5.281,1024,3.944,1025,1.844,1026,2.858,1027,2.858,1028,2.858,1029,2.858,1030,2.858,1031,2.858,1032,4.516,1033,1.844,1034,2.858,1035,1.844,1036,2.858,1037,1.844,1038,2.858,1039,1.844,1040,3.944,1041,1.844,1042,2.858,1043,2.858,1044,1.844,1045,2.858,1046,1.844,1047,1.844,1048,2.858,1049,1.844,1050,3.501,1051,1.844,1052,2.858,1053,1.844,1054,1.844,1055,2.858,1056,1.844,1057,1.844,1058,1.844,1059,1.844,1060,1.844,1061,1.844,1062,1.844]],["title/components/SignInComponent.html",[0,0.142,56,0.709]],["body/components/SignInComponent.html",[0,0.246,1,0.692,2,0.325,3,0.275,4,1.043,5,1.043,6,1.043,7,1.043,8,0.228,10,1.043,11,1.889,12,1.873,14,1.298,16,1.298,18,0.275,19,0.952,21,1.139,22,0.511,23,0.04,24,1.058,25,1.058,26,0.769,28,0.577,29,0.275,30,0.275,31,0.182,32,0.853,33,1.298,34,1.435,35,1.435,36,1.172,37,1.043,38,0.681,39,1.043,40,0.692,41,1.043,42,0.692,43,0.853,44,1.043,45,0.769,46,1.043,47,0.692,48,0.943,49,1.043,50,0.621,51,1.043,52,0.692,53,1.043,54,0.692,55,1.043,56,1.172,57,1.512,58,1.043,59,0.692,60,0.943,61,1.043,62,0.026,63,0.026,74,1.767,89,2.814,90,2.041,119,3.744,144,2.167,148,0.763,157,0.677,160,0.677,166,0.692,167,0.692,170,0.769,172,3.744,174,2.691,189,1.588,207,3.744,208,1.589,216,1.815,217,1.589,219,2.041,289,1.435,290,1.641,306,1.767,675,2.462,676,2.012,688,2.041,689,1.79,694,1.79,874,2.041,1063,4.361,1064,2.377,1065,4.539,1066,3.971,1067,4.889,1068,2.887,1069,4.889,1070,5.427,1071,3.971,1072,3.971,1073,2.887,1074,2.887,1075,2.887,1076,2.887,1077,2.887,1078,3.971,1079,2.887,1080,2.887,1081,2.887,1082,2.887,1083,2.887,1084,3.971,1085,3.971,1086,3.971,1087,3.971,1088,3.971,1089,3.971,1090,3.269,1091,3.269]],["title/components/SubmissionsComponent.html",[0,0.142,59,0.709]],["body/components/SubmissionsComponent.html",[0,0.227,1,0.557,2,0.261,3,0.221,4,0.839,5,0.839,6,0.839,7,0.839,8,0.183,10,0.839,11,1.815,12,1.794,14,1.111,16,1.111,18,0.221,19,0.816,21,1.015,22,0.555,23,0.04,24,0.906,25,0.906,26,0.799,28,0.499,29,0.221,30,0.221,31,0.146,32,0.685,33,1.111,34,1.455,35,1.229,36,1.131,37,0.839,38,0.784,39,0.839,40,0.557,41,0.839,42,0.557,43,1.188,44,0.839,45,0.618,46,0.839,47,0.557,48,1.315,49,0.839,50,0.499,51,0.839,52,0.557,53,0.839,54,0.557,55,0.839,56,0.557,57,0.618,58,0.839,59,1.063,60,1.707,61,0.839,62,0.022,63,0.022,112,1.641,148,0.653,157,0.395,160,0.755,163,1.507,166,0.816,167,0.816,170,0.906,198,0.928,204,1.872,228,2.404,289,1.229,290,1.455,306,1.601,307,3.132,308,1.278,309,1.784,311,1.029,315,2.804,329,1.641,330,0.839,331,1.641,333,1.911,360,1.872,366,2.845,546,1.439,662,2.404,709,2.8,711,1.278,714,2.108,718,3.314,720,2.8,729,2.8,730,2.8,731,2.8,732,2.404,733,2.8,794,2.8,798,1.439,799,3.314,800,3.6,801,4.058,802,2.8,803,2.924,804,2.924,805,2.924,806,1.911,807,1.911,809,2.404,823,1.911,824,1.911,825,1.911,826,1.911,827,3.648,828,2.8,829,3.314,830,2.8,831,1.911,832,1.911,833,1.911,834,1.911,835,1.911,836,2.845,837,3.314,838,2.404,839,1.911,840,1.911,862,1.911,864,2.8,920,3.884,957,1.911,1092,1.911,1093,4.025,1094,3.401,1095,4.431,1096,4.431,1097,4.431,1098,4.717,1099,3.401,1100,3.401,1101,2.321,1102,2.321,1103,2.321,1104,2.321,1105,2.321,1106,2.321,1107,2.321,1108,3.401,1109,3.401,1110,3.401,1111,3.401,1112,2.321,1113,4.431,1114,3.401,1115,3.401,1116,2.321,1117,4.431,1118,3.401,1119,2.321,1120,2.321,1121,2.321,1122,2.321,1123,2.321,1124,2.321,1125,2.321,1126,2.321,1127,2.321,1128,3.401,1129,3.401,1130,3.401,1131,3.401,1132,3.401,1133,2.321,1134,4.025,1135,2.321,1136,3.401,1137,2.321,1138,3.401,1139,3.401,1140,3.401,1141,2.321,1142,2.321,1143,2.321,1144,2.321,1145,3.401,1146,4.025,1147,3.401,1148,2.321,1149,3.401,1150,3.401,1151,2.321,1152,2.321,1153,2.321,1154,2.321,1155,2.321,1156,2.321,1157,3.401,1158,3.401,1159,2.321,1160,2.321,1161,2.321,1162,2.321,1163,2.321]],["title/classes/User.html",[31,0.186,163,1.31]],["body/classes/User.html",[2,0.265,3,0.224,8,0.185,13,0.85,18,0.224,19,0.823,20,1.294,21,1.265,22,0.502,23,0.041,26,0.669,28,0.558,29,0.224,30,0.327,31,0.256,36,1.069,38,0.711,57,0.915,62,0.022,63,0.022,74,0.85,76,1.457,142,0.515,143,1.662,144,1.797,145,1.457,146,1.457,147,1.457,149,2.333,150,1.662,151,1.936,153,1.662,155,1.936,157,0.401,160,0.871,161,1.457,163,2.547,168,4.533,171,1.936,172,3.5,174,2.886,175,3.152,177,1.936,178,2.44,180,1.662,182,1.662,183,1.662,185,1.457,186,1.936,187,1.294,188,1.936,189,1.621,190,1.936,191,1.294,192,1.662,193,3.152,194,0.94,195,1.662,196,1.662,197,1.457,198,1.98,199,3.338,200,1.936,201,1.936,202,1.936,203,1.936,204,1.294,205,1.936,206,1.936,207,3.152,208,3.031,209,1.936,210,1.936,211,1.936,212,1.936,213,2.866,214,2.826,215,1.936,216,0.94,217,1.294,218,2.826,219,3.84,220,3.07,221,2.826,222,2.826,223,3.338,224,2.826,225,2.826,226,3.671,227,4.077,228,1.662,229,2.427,230,2.866,231,1.936,232,1.662,233,1.936,234,1.936,235,1.936,236,1.936,237,1.936,238,1.936,239,2.826,240,3.338,241,3.338,242,3.338,243,3.338,244,1.936,245,1.936,246,1.936,247,1.936,248,1.936,249,1.936,250,1.158,251,1.662,252,1.936,253,1.936,254,1.936,255,1.936,256,1.936,257,2.826,258,2.826,259,1.936,260,1.936,261,1.936,262,1.936,263,1.662,264,1.936,265,1.936,266,1.936,267,1.936,268,1.936,269,2.826,270,1.936,271,1.662,272,1.936,273,1.936,274,1.936,275,1.936,276,1.936,277,1.936,278,1.936,279,1.89,280,1.936,281,1.662,282,1.662,283,1.936,284,1.936,285,1.158,286,1.662,287,1.662,1164,2.351,1165,2.351,1166,2.351,1167,2.351]],["title/coverage.html",[1168,3.323]],["body/coverage.html",[0,0.282,1,0.837,8,0.275,9,2.872,22,0.393,23,0.04,31,0.22,40,0.837,42,0.837,45,0.93,47,0.837,50,0.75,52,0.837,54,0.837,56,0.837,59,0.837,62,0.029,63,0.029,74,1.261,85,1.719,97,2.466,114,2.466,119,2.466,124,2.466,126,2.466,142,0.854,143,3.185,163,1.546,191,2.48,198,1.395,288,2.872,309,1.546,315,3.389,398,2.163,399,2.872,400,2.466,401,2.872,668,2.872,669,2.872,676,1.546,711,1.92,722,2.872,723,2.872,761,3.094,766,2.163,768,1.92,780,2.163,782,2.163,813,3.185,814,2.872,841,2.872,865,2.872,876,1.92,877,2.872,896,2.466,897,2.872,944,2.872,945,2.872,1012,2.872,1063,2.872,1064,2.872,1092,2.872,1168,2.872,1169,2.872,1170,3.489,1171,3.489,1172,3.489,1173,4.505,1174,3.489,1175,3.489,1176,5.274,1177,3.709,1178,3.489,1179,3.467,1180,5.592,1181,2.163,1182,5.274,1183,4.505,1184,3.489,1185,3.489,1186,3.489,1187,2.872,1188,2.872,1189,3.709,1190,2.872,1191,2.872,1192,3.489]],["title/dependencies.html",[66,2.204,1193,2.468]],["body/dependencies.html",[23,0.04,29,0.383,62,0.032,63,0.032,66,2.494,80,4.058,81,3.484,84,3.313,85,1.982,87,3.313,90,2.844,92,3.313,112,2.844,130,3.313,185,2.494,189,1.609,924,3.313,1194,4.024,1195,4.024,1196,4.024,1197,6.01,1198,4.024,1199,4.024,1200,4.024,1201,4.024,1202,4.929,1203,4.024,1204,3.313,1205,4.024,1206,4.024,1207,4.024,1208,4.024,1209,4.024,1210,4.024,1211,4.024,1212,4.024,1213,4.024,1214,3.313,1215,4.024,1216,4.024,1217,4.024,1218,4.024,1219,4.024,1220,4.024,1221,4.024,1222,4.024,1223,3.313,1224,4.024,1225,4.024,1226,4.024,1227,4.024,1228,4.024,1229,4.024,1230,4.024]],["title/index.html",[18,0.235,1231,2.468,1232,2.468]],["body/index.html",[0,0.268,3,0.428,8,0.273,23,0.029,33,1.133,38,0.52,62,0.029,63,0.029,69,2.781,77,3.172,189,1.989,198,1.386,232,3.719,250,1.708,263,2.45,285,2.211,342,2.854,361,2.45,362,2.854,364,2.149,380,2.854,385,2.781,418,2.149,420,2.149,641,2.739,777,3.172,820,4.486,838,2.45,889,2.854,890,2.854,916,2.854,982,3.172,1000,2.45,1090,3.694,1091,4.096,1169,2.854,1179,2.149,1204,3.694,1214,2.854,1223,2.854,1233,4.487,1234,5.758,1235,3.466,1236,4.975,1237,4.975,1238,3.466,1239,4.487,1240,3.466,1241,3.466,1242,4.487,1243,3.466,1244,3.466,1245,4.975,1246,3.466,1247,3.466,1248,3.466,1249,3.466,1250,3.466,1251,3.466,1252,3.466,1253,3.466,1254,3.466,1255,3.466,1256,3.466,1257,3.466,1258,3.466,1259,3.466,1260,3.466,1261,5.582,1262,3.466,1263,3.466,1264,3.466,1265,5.261,1266,3.466,1267,3.466,1268,3.466,1269,3.466,1270,3.466,1271,5.261,1272,3.466,1273,3.466,1274,3.466,1275,3.466,1276,3.466,1277,3.466,1278,3.466,1279,4.487,1280,2.854,1281,3.466,1282,3.466,1283,5.261,1284,3.466,1285,3.466,1286,3.466,1287,4.487,1288,3.466,1289,3.466,1290,3.466,1291,4.487,1292,3.466,1293,3.466,1294,4.487,1295,3.466,1296,3.466,1297,3.466,1298,3.466,1299,3.466,1300,3.466,1301,3.466,1302,3.466,1303,3.466,1304,3.466,1305,3.466,1306,3.466,1307,3.466,1308,3.466,1309,3.466,1310,3.466,1311,3.466]],["title/interfaces/marker.html",[766,1.833,1181,1.833]],["body/interfaces/marker.html",[0,0.235,2,0.447,3,0.379,8,0.313,11,1.298,12,1.298,14,1.298,16,1.298,18,0.379,19,1.173,20,2.187,21,1.14,22,0.622,23,0.04,28,0.551,29,0.379,30,0.379,31,0.251,43,1.173,50,0.854,62,0.032,63,0.032,67,2.462,161,3.031,187,2.187,289,1.436,290,1.767,306,1.436,318,3.182,330,1.436,334,2.808,761,2.462,762,3.27,763,3.27,764,4.551,765,4.551,766,3.284,767,3.27,768,2.187,772,3.27,774,3.27,776,3.27,777,2.808,779,3.27,780,2.462,781,3.27,782,2.462,783,3.27,784,3.27,785,3.27,786,3.27,1181,2.462,1312,5.298,1313,5.298]],["title/modules.html",[64,2.222]],["body/modules.html",[23,0.035,62,0.035,63,0.035,64,2.622,65,2.953,81,3.367,1314,4.763,1315,4.763,1316,4.763]],["title/overview.html",[1317,3.323]],["body/overview.html",[0,0.189,1,1.402,23,0.039,30,0.376,31,0.249,32,1.164,40,1.266,42,1.266,45,1.407,47,1.266,50,1.136,52,1.266,54,1.266,56,1.266,59,1.266,62,0.031,63,0.031,64,2.68,65,3.848,66,2.445,67,2.445,68,3.247,69,2.445,70,3.247,71,3.247,72,3.247,73,3.247,74,1.908,75,4.008,76,2.445,77,2.788,142,0.592,315,2.171,348,4.347,759,3.247,1181,2.445,1317,3.247,1318,3.944]],["title/routes.html",[89,2.502]],["body/routes.html",[23,0.035,62,0.035,63,0.035,89,2.985]],["title/miscellaneous/variables.html",[1179,2.204,1319,2.032]],["body/miscellaneous/variables.html",[18,0.395,22,0.608,23,0.04,24,1.438,25,1.438,62,0.032,63,0.032,85,2.66,145,3.112,146,3.112,147,3.112,191,3.215,423,2.764,761,2.57,782,3.347,874,2.931,875,4.132,1177,3.413,1179,2.57,1187,3.413,1188,3.413,1189,3.413,1190,4.444,1191,4.444,1280,4.132,1319,3.413,1320,4.146,1321,5.02,1322,4.146,1323,4.146,1324,4.146,1325,4.146,1326,4.146,1327,4.146,1328,4.146,1329,4.146]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"interfaces/marker.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":315,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.12.7",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":1152,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["0.7.2",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1180,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1178,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1182,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1183,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":810,"title":{},"body":{"components/MapComponent.html":{}}}],["1",{"_index":348,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["1.6.0",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["1.9.1",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":759,"title":{},"body":{"components/HomeEnvComponent.html":{},"overview.html":{}}}],["100",{"_index":809,"title":{},"body":{"components/MapComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["1000",{"_index":997,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["1000px",{"_index":808,"title":{},"body":{"components/MapComponent.html":{}}}],["10px",{"_index":864,"title":{},"body":{"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["11",{"_index":316,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["14px",{"_index":1155,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["16px",{"_index":1140,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["18",{"_index":744,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["18.9130926",{"_index":772,"title":{},"body":{"components/MapComponent.html":{},"interfaces/marker.html":{}}}],["1em",{"_index":801,"title":{},"body":{"components/MapComponent.html":{},"components/SubmissionsComponent.html":{}}}],["2",{"_index":350,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["2.1.0",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["2.23.0",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["2.7.2",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["2.7.3",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":757,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["2017",{"_index":730,"title":{},"body":{"components/HomeEnvComponent.html":{},"components/SubmissionsComponent.html":{}}}],["2019",{"_index":733,"title":{},"body":{"components/HomeEnvComponent.html":{},"components/SubmissionsComponent.html":{}}}],["20px",{"_index":1146,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["2em",{"_index":802,"title":{},"body":{"components/MapComponent.html":{},"components/SubmissionsComponent.html":{}}}],["3.2.2",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":752,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["4.16.4",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":746,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["400px",{"_index":715,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["450px",{"_index":1160,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["4px",{"_index":1148,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["5",{"_index":742,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["500",{"_index":994,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["5px",{"_index":807,"title":{},"body":{"components/MapComponent.html":{},"components/SubmissionsComponent.html":{}}}],["6",{"_index":732,"title":{},"body":{"components/HomeEnvComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["6.0.0",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["6.0.2",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["6.1.10",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["6.2.5",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":755,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["7",{"_index":1318,"title":{},"body":{"overview.html":{}}}],["70.7095201",{"_index":774,"title":{},"body":{"components/MapComponent.html":{},"interfaces/marker.html":{}}}],["768px",{"_index":812,"title":{},"body":{"components/MapComponent.html":{}}}],["8",{"_index":662,"title":{},"body":{"injectables/DataExportService.html":{},"components/HomeEnvComponent.html":{},"components/SubmissionsComponent.html":{}}}],["8px",{"_index":1149,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["_",{"_index":930,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["_.countby(object",{"_index":941,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["_.map(key",{"_index":936,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["_.mixin",{"_index":931,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["_.object(key",{"_index":935,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["_.sortbi",{"_index":918,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["_.sortby(_.keys(obj",{"_index":933,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["_.sortkeysby(object",{"_index":927,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["___:\"___",{"_index":482,"title":{},"body":{"injectables/DataExportService.html":{}}}],["____:\"___",{"_index":481,"title":{},"body":{"injectables/DataExportService.html":{}}}],["access",{"_index":341,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/ParseService.html":{}}}],["activatedrout",{"_index":1069,"title":{},"body":{"components/SignInComponent.html":{}}}],["actual_compon",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["add",{"_index":922,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["ag",{"_index":740,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["again",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["agm",{"_index":776,"title":{},"body":{"components/MapComponent.html":{},"interfaces/marker.html":{}}}],["agm/cor",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["agmcoremodul",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["agmcoremodule.forroot",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["aizasybl0jjrobjh2orfjqfc02nz9uo0ayb06sg",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["alert",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["alerter.dismiss",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["alerter.pres",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["align",{"_index":835,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["alphanumer",{"_index":919,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["alreadi",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["altern",{"_index":1161,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["and/or",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["angular",{"_index":1234,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"components/MyNavComponent.html":{}}}],["angular/cli",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"dependencies.html":{},"interfaces/marker.html":{}}}],["angular/core/test",{"_index":855,"title":{},"body":{"components/MyNavComponent.html":{}}}],["angular/form",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"components/SubmissionsComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"components/SignInComponent.html":{},"dependencies.html":{}}}],["apikey",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"interfaces/marker.html":{}}}],["app.compon",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["app/providers/auth/auth.servic",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":1237,"title":{},"body":{"index.html":{}}}],["applyfilt",{"_index":1099,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["applyfilter(filtervalu",{"_index":1101,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["appmodul",{"_index":65,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["area",{"_index":824,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["arg",{"_index":410,"title":{},"body":{"injectables/DataExportService.html":{}}}],["args.columndelimit",{"_index":644,"title":{},"body":{"injectables/DataExportService.html":{}}}],["args.data",{"_index":642,"title":{},"body":{"injectables/DataExportService.html":{}}}],["args.filenam",{"_index":658,"title":{},"body":{"injectables/DataExportService.html":{}}}],["args.linedelimit",{"_index":646,"title":{},"body":{"injectables/DataExportService.html":{}}}],["array",{"_index":354,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["array.length",{"_index":357,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["array.reduc",{"_index":355,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["array_to_export",{"_index":412,"title":{},"body":{"injectables/DataExportService.html":{}}}],["arrayofmatchenvfil",{"_index":293,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["artifact",{"_index":1276,"title":{},"body":{"index.html":{}}}],["asid",{"_index":815,"title":{},"body":{"components/MyAsideComponent.html":{}}}],["aside'},{'nam",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["aside.compon",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["aside.component.html",{"_index":817,"title":{},"body":{"components/MyAsideComponent.html":{}}}],["aside.component.scss",{"_index":816,"title":{},"body":{"components/MyAsideComponent.html":{}}}],["aside.component.t",{"_index":814,"title":{},"body":{"components/MyAsideComponent.html":{},"coverage.html":{}}}],["aside.component.ts:12",{"_index":819,"title":{},"body":{"components/MyAsideComponent.html":{}}}],["aside.component.ts:8",{"_index":818,"title":{},"body":{"components/MyAsideComponent.html":{}}}],["aside/mi",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"components/MyAsideComponent.html":{},"coverage.html":{}}}],["assess",{"_index":603,"title":{},"body":{"injectables/DataExportService.html":{},"components/MyNavComponent.html":{}}}],["assessmentandevalu",{"_index":572,"title":{},"body":{"injectables/DataExportService.html":{}}}],["assessmentandevaluation_surg",{"_index":608,"title":{},"body":{"injectables/DataExportService.html":{}}}],["assessmentandevaluation_surgical_guess",{"_index":610,"title":{},"body":{"injectables/DataExportService.html":{}}}],["assessmentandevaluation_surgical_guess:\"not",{"_index":633,"title":{},"body":{"injectables/DataExportService.html":{}}}],["asset",{"_index":788,"title":{},"body":{"components/MapComponent.html":{}}}],["async",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"classes/User.html":{}}}],["auth",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"classes/User.html":{}}}],["auth:authservic",{"_index":693,"title":{},"body":{"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{}}}],["authent",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["author",{"_index":883,"title":{},"body":{"injectables/ParseService.html":{}}}],["authpvdr",{"_index":1072,"title":{},"body":{"components/SignInComponent.html":{}}}],["authservic",{"_index":74,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"classes/User.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":863,"title":{},"body":{"components/MyNavComponent.html":{}}}],["averag",{"_index":353,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/HomeEnvComponent.html":{}}}],["await",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/SignInComponent.html":{},"classes/User.html":{}}}],["b",{"_index":795,"title":{},"body":{"components/MapComponent.html":{}}}],["back4app",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["backend",{"_index":418,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"injectables/ParseService.html":{},"index.html":{}}}],["background",{"_index":718,"title":{},"body":{"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["bad",{"_index":372,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["base",{"_index":420,"title":{},"body":{"injectables/DataExportService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"index.html":{}}}],["below",{"_index":987,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["beta.5",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["biggestproblemofcommun",{"_index":495,"title":{},"body":{"injectables/DataExportService.html":{}}}],["biggestproblemofcommunity:'not",{"_index":541,"title":{},"body":{"injectables/DataExportService.html":{}}}],["bloodoxygen",{"_index":564,"title":{},"body":{"injectables/DataExportService.html":{}}}],["bloodpressur",{"_index":560,"title":{},"body":{"injectables/DataExportService.html":{}}}],["bloodsugar",{"_index":562,"title":{},"body":{"injectables/DataExportService.html":{}}}],["bmi",{"_index":550,"title":{},"body":{"injectables/DataExportService.html":{}}}],["boolean",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NavbarService.html":{},"classes/User.html":{},"interfaces/marker.html":{}}}],["bootstrap",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":1141,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["bottom",{"_index":1138,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["box",{"_index":829,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["brand",{"_index":804,"title":{},"body":{"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["break",{"_index":840,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["breakpoint",{"_index":853,"title":{},"body":{"components/MyNavComponent.html":{}}}],["breakpointobserv",{"_index":846,"title":{},"body":{"components/MyNavComponent.html":{}}}],["breakpointst",{"_index":854,"title":{},"body":{"components/MyNavComponent.html":{}}}],["brought",{"_index":1254,"title":{},"body":{"index.html":{}}}],["brows",{"_index":1316,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1265,"title":{},"body":{"index.html":{}}}],["build:productioncod",{"_index":1281,"title":{},"body":{"index.html":{}}}],["buildth",{"_index":1275,"title":{},"body":{"index.html":{}}}],["bulma",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["button",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["c",{"_index":796,"title":{},"body":{"components/MapComponent.html":{}}}],["capabl",{"_index":1253,"title":{},"body":{"index.html":{}}}],["card",{"_index":712,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["cd",{"_index":1269,"title":{},"body":{"index.html":{}}}],["cedulanumb",{"_index":473,"title":{},"body":{"injectables/DataExportService.html":{}}}],["center",{"_index":836,"title":{},"body":{"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["chart",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"components/HomeEnvComponent.html":{},"components/MyAsideComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["chart.j",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["chart1",{"_index":1156,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["chart2",{"_index":1159,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["chartsmodul",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["check",{"_index":362,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"index.html":{}}}],["chronic_condition_diabet",{"_index":578,"title":{},"body":{"injectables/DataExportService.html":{}}}],["chronic_condition_diabetes:\"not",{"_index":620,"title":{},"body":{"injectables/DataExportService.html":{}}}],["chronic_condition_hypertens",{"_index":576,"title":{},"body":{"injectables/DataExportService.html":{}}}],["chronic_condition_hypertension:\"not",{"_index":619,"title":{},"body":{"injectables/DataExportService.html":{}}}],["chronic_condition_oth",{"_index":580,"title":{},"body":{"injectables/DataExportService.html":{}}}],["chronic_condition_other:\"not",{"_index":621,"title":{},"body":{"injectables/DataExportService.html":{}}}],["citi",{"_index":463,"title":{},"body":{"injectables/DataExportService.html":{}}}],["class",{"_index":31,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"coverage.html":{},"interfaces/marker.html":{},"overview.html":{}}}],["cli",{"_index":1204,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["clinic",{"_index":382,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["clinicaccess",{"_index":505,"title":{},"body":{"injectables/DataExportService.html":{}}}],["clinicprovid",{"_index":471,"title":{},"body":{"injectables/DataExportService.html":{}}}],["clone",{"_index":1268,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":888,"title":{},"body":{"injectables/ParseService.html":{},"injectables/QueryService.html":{}}}],["cluster_appmodul",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["collect",{"_index":385,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/HomeEnvComponent.html":{},"index.html":{}}}],["collected\",//what",{"_index":624,"title":{},"body":{"injectables/DataExportService.html":{}}}],["color",{"_index":803,"title":{},"body":{"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["color:$brand",{"_index":1154,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["colum",{"_index":1028,"title":{},"body":{"injectables/QueryService.html":{}}}],["column",{"_index":1026,"title":{},"body":{"injectables/QueryService.html":{}}}],["columndelimit",{"_index":639,"title":{},"body":{"injectables/DataExportService.html":{}}}],["commun",{"_index":361,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/MapComponent.html":{},"index.html":{}}}],["communityanalysi",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{}}}],["communityanalysis'},{'nam",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["communityanalysis.component.html",{"_index":292,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["communityanalysis.component.scss",{"_index":291,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["communityanalysiscompon",{"_index":40,"title":{"components/CommunityAnalysisComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["communitynam",{"_index":461,"title":{},"body":{"injectables/DataExportService.html":{}}}],["compar",{"_index":932,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["comparator(obj[key",{"_index":934,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"index.html":{},"interfaces/marker.html":{},"overview.html":{}}}],["component:submissionscompon",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["component_templ",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["condit",{"_index":371,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["condition_progress",{"_index":599,"title":{},"body":{"injectables/DataExportService.html":{}}}],["condition_progression:\"not",{"_index":630,"title":{},"body":{"injectables/DataExportService.html":{}}}],["conditionoffloor",{"_index":511,"title":{},"body":{"injectables/DataExportService.html":{}}}],["conditionofroof",{"_index":513,"title":{},"body":{"injectables/DataExportService.html":{}}}],["console.log",{"_index":1040,"title":{},"body":{"injectables/QueryService.html":{}}}],["console.log(\"error",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["console.log(\"password",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["console.log(\"th",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["console.log(\"tri",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["console.log('initi",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["console.log('us",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["console.log(array",{"_index":440,"title":{},"body":{"injectables/DataExportService.html":{}}}],["console.log(error",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/QueryService.html":{},"classes/User.html":{}}}],["console.log(this.dictstoexport",{"_index":706,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["const",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["constant",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["constructor",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{}}}],["constructor(authpvdr",{"_index":1068,"title":{},"body":{"components/SignInComponent.html":{}}}],["constructor(breakpointobserv",{"_index":845,"title":{},"body":{"components/MyNavComponent.html":{}}}],["constructor(nav",{"_index":726,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["constructor(pars",{"_index":949,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["constructor(priv",{"_index":330,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{},"interfaces/marker.html":{}}}],["constructor(queri",{"_index":308,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/MapComponent.html":{},"components/SubmissionsComponent.html":{}}}],["containedqueri",{"_index":1013,"title":{},"body":{"injectables/QueryService.html":{}}}],["containedquery(2000,surveydata,organization,puent",{"_index":1029,"title":{},"body":{"injectables/QueryService.html":{}}}],["containedquery(limit",{"_index":1021,"title":{},"body":{"injectables/QueryService.html":{}}}],["content",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{}}}],["context",{"_index":1190,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contribut",{"_index":1298,"title":{},"body":{"index.html":{}}}],["convertarrayofobjectstocsv",{"_index":402,"title":{},"body":{"injectables/DataExportService.html":{}}}],["convertarrayofobjectstocsv(arg",{"_index":408,"title":{},"body":{"injectables/DataExportService.html":{}}}],["core",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["corner",{"_index":1144,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["corpor",{"_index":1250,"title":{},"body":{"index.html":{}}}],["correct",{"_index":1287,"title":{},"body":{"index.html":{}}}],["count",{"_index":907,"title":{},"body":{"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{}}}],["count_based_on_object_key",{"_index":898,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["count_based_on_object_keys(object",{"_index":902,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["count_based_on_object_keys(objects,keys_of_objects:str",{"_index":940,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["count_based_on_object_keys(results,&#39;occupation&#39",{"_index":909,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["count_based_on_object_keys(results,'occup",{"_index":939,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["count_sex_education_by_organ",{"_index":946,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["count_sex_education_by_organization(&#39;puente&#39;,&#39;lessthanprimary&#39;,&#39;male&#39",{"_index":958,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["count_sex_education_by_organization('puente','lessthanprimary','mal",{"_index":998,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["count_sex_education_by_organization(organ",{"_index":951,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["count_sex_education_by_organization(organization:string,educationlevelparam:string,sexparam:str",{"_index":999,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["countqueri",{"_index":1014,"title":{},"body":{"injectables/QueryService.html":{}}}],["countquery(organ",{"_index":1030,"title":{},"body":{"injectables/QueryService.html":{}}}],["cover",{"_index":721,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["coverag",{"_index":1168,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"classes/User.html":{},"index.html":{}}}],["create_all_mark",{"_index":767,"title":{},"body":{"components/MapComponent.html":{},"interfaces/marker.html":{}}}],["createdat",{"_index":1111,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["css",{"_index":1256,"title":{},"body":{"index.html":{}}}],["csv",{"_index":656,"title":{},"body":{"injectables/DataExportService.html":{}}}],["csv.match(/^data:text\\/csv/i",{"_index":660,"title":{},"body":{"injectables/DataExportService.html":{}}}],["ctr",{"_index":637,"title":{},"body":{"injectables/DataExportService.html":{}}}],["currentus",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["custom.servic",{"_index":781,"title":{},"body":{"components/MapComponent.html":{},"interfaces/marker.html":{}}}],["custom.service.t",{"_index":945,"title":{},"body":{"injectables/QueryCustomService.html":{},"coverage.html":{}}}],["custom.service.ts:101",{"_index":954,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["custom.service.ts:21",{"_index":965,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["custom.service.ts:60",{"_index":961,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["custom.service.ts:7",{"_index":950,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["custom/queri",{"_index":780,"title":{},"body":{"components/MapComponent.html":{},"injectables/QueryCustomService.html":{},"coverage.html":{},"interfaces/marker.html":{}}}],["d",{"_index":797,"title":{},"body":{"components/MapComponent.html":{}}}],["dash",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboard",{"_index":360,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["dashboarddata.age_average}}yr",{"_index":741,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["dashboarddata.age_under18",{"_index":745,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["dashboarddata.age_under40",{"_index":747,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["dashboarddata.age_under5",{"_index":743,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["dashboarddata.number_of_resid",{"_index":735,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["dashboarddata.number_of_residents_femal",{"_index":739,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["dashboarddata.number_of_residents_mal",{"_index":737,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["dashboarddata.occupation_highest",{"_index":749,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["dashboarddata.occupation_highest_nam",{"_index":748,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["data",{"_index":641,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MyAsideComponent.html":{},"index.html":{}}}],["data.foreach(function(item",{"_index":650,"title":{},"body":{"injectables/DataExportService.html":{}}}],["data.length",{"_index":643,"title":{},"body":{"injectables/DataExportService.html":{}}}],["data:dataexportservic",{"_index":695,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["data:text/csv;charset=utf",{"_index":661,"title":{},"body":{"injectables/DataExportService.html":{}}}],["datacollector",{"_index":475,"title":{},"body":{"injectables/DataExportService.html":{}}}],["dataexportservic",{"_index":398,"title":{"injectables/DataExportService.html":{}},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"coverage.html":{}}}],["datalist",{"_index":1095,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["datasourc",{"_index":1096,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["datecreatedenvhlth",{"_index":517,"title":{},"body":{"injectables/DataExportService.html":{}}}],["datecreatedevalmed",{"_index":615,"title":{},"body":{"injectables/DataExportService.html":{}}}],["datecreatedvit",{"_index":568,"title":{},"body":{"injectables/DataExportService.html":{}}}],["dateupdatedenvhlth",{"_index":519,"title":{},"body":{"injectables/DataExportService.html":{}}}],["dateupdatedevalmed",{"_index":617,"title":{},"body":{"injectables/DataExportService.html":{}}}],["dateupdatedvit",{"_index":570,"title":{},"body":{"injectables/DataExportService.html":{}}}],["debug",{"_index":1274,"title":{},"body":{"index.html":{}}}],["declar",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"components/MapComponent.html":{},"interfaces/marker.html":{},"overview.html":{}}}],["decor",{"_index":1114,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["default",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MapComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{}}}],["demo",{"_index":1297,"title":{},"body":{"index.html":{}}}],["demographicobject",{"_index":426,"title":{},"body":{"injectables/DataExportService.html":{}}}],["demographicobject.get('c",{"_index":530,"title":{},"body":{"injectables/DataExportService.html":{}}}],["demographicobject.get('cedulanumb",{"_index":535,"title":{},"body":{"injectables/DataExportService.html":{}}}],["demographicobject.get('clinicprovid",{"_index":534,"title":{},"body":{"injectables/DataExportService.html":{}}}],["demographicobject.get('communitynam",{"_index":529,"title":{},"body":{"injectables/DataExportService.html":{}}}],["demographicobject.get('dob",{"_index":524,"title":{},"body":{"injectables/DataExportService.html":{}}}],["demographicobject.get('educationlevel",{"_index":527,"title":{},"body":{"injectables/DataExportService.html":{}}}],["demographicobject.get('fnam",{"_index":522,"title":{},"body":{"injectables/DataExportService.html":{}}}],["demographicobject.get('insurancenumb",{"_index":532,"title":{},"body":{"injectables/DataExportService.html":{}}}],["demographicobject.get('insuranceprovid",{"_index":533,"title":{},"body":{"injectables/DataExportService.html":{}}}],["demographicobject.get('latitud",{"_index":537,"title":{},"body":{"injectables/DataExportService.html":{}}}],["demographicobject.get('lnam",{"_index":523,"title":{},"body":{"injectables/DataExportService.html":{}}}],["demographicobject.get('longitud",{"_index":538,"title":{},"body":{"injectables/DataExportService.html":{}}}],["demographicobject.get('marriagestatu",{"_index":526,"title":{},"body":{"injectables/DataExportService.html":{}}}],["demographicobject.get('occup",{"_index":528,"title":{},"body":{"injectables/DataExportService.html":{}}}],["demographicobject.get('provinc",{"_index":531,"title":{},"body":{"injectables/DataExportService.html":{}}}],["demographicobject.get('sex",{"_index":525,"title":{},"body":{"injectables/DataExportService.html":{}}}],["demographicobject.get('surveyingus",{"_index":536,"title":{},"body":{"injectables/DataExportService.html":{}}}],["dentalproblemswheredoyougo",{"_index":489,"title":{},"body":{"injectables/DataExportService.html":{}}}],["depend",{"_index":66,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1259,"title":{},"body":{"index.html":{}}}],["descript",{"_index":417,"title":{},"body":{"injectables/DataExportService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["design",{"_index":1311,"title":{},"body":{"index.html":{}}}],["desir",{"_index":682,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["develop",{"_index":1257,"title":{},"body":{"index.html":{}}}],["development/product",{"_index":1295,"title":{},"body":{"index.html":{}}}],["dictstoexport",{"_index":672,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["direct",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1284,"title":{},"body":{"index.html":{}}}],["directive|service|etc",{"_index":1289,"title":{},"body":{"index.html":{}}}],["directli",{"_index":1304,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1279,"title":{},"body":{"index.html":{}}}],["dirt",{"_index":373,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["display",{"_index":827,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["displayedcolumn",{"_index":1097,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["dist",{"_index":1278,"title":{},"body":{"index.html":{}}}],["dob",{"_index":451,"title":{},"body":{"injectables/DataExportService.html":{}}}],["doctor",{"_index":586,"title":{},"body":{"injectables/DataExportService.html":{}}}],["document",{"_index":1169,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["document.createelement('a",{"_index":664,"title":{},"body":{"injectables/DataExportService.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["dosignin",{"_index":1067,"title":{},"body":{"components/SignInComponent.html":{}}}],["downloadcsv",{"_index":403,"title":{},"body":{"injectables/DataExportService.html":{}}}],["downloadcsv(arg",{"_index":411,"title":{},"body":{"injectables/DataExportService.html":{}}}],["downloadcsv(args,array_to_export",{"_index":653,"title":{},"body":{"injectables/DataExportService.html":{}}}],["draggabl",{"_index":1312,"title":{},"body":{"interfaces/marker.html":{}}}],["durat",{"_index":595,"title":{},"body":{"injectables/DataExportService.html":{}}}],["duration:\"not",{"_index":628,"title":{},"body":{"injectables/DataExportService.html":{}}}],["dynam",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["educ",{"_index":956,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["educationlevel",{"_index":457,"title":{},"body":{"injectables/DataExportService.html":{}}}],["educationlevelparam",{"_index":952,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["element",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["email",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["encodeuri(csv",{"_index":663,"title":{},"body":{"injectables/DataExportService.html":{}}}],["end",{"_index":890,"title":{},"body":{"injectables/ParseService.html":{},"index.html":{}}}],["enumer",{"_index":914,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["env",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"components/HomeEnvComponent.html":{}}}],["env'},{'nam",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["env.compon",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["env.component.html",{"_index":725,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["env.component.scss",{"_index":724,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["env.component.t",{"_index":723,"title":{},"body":{"components/HomeEnvComponent.html":{},"coverage.html":{}}}],["env.component.ts:10",{"_index":727,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["env.component.ts:14",{"_index":728,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["env/hom",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"components/HomeEnvComponent.html":{},"coverage.html":{}}}],["envform",{"_index":438,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environ",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment",{"_index":364,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/HomeEnvComponent.html":{},"components/MyAsideComponent.html":{},"index.html":{}}}],["environment.parseappid",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["environment.parsejavascriptkey",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["environment.parseserverurl",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["environmentalhealthresult",{"_index":446,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.createdat",{"_index":518,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('biggestproblemofcommunity').replace(/,/g",{"_index":496,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('client').get('c",{"_index":464,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('client').get('cedulanumb",{"_index":474,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('client').get('clinicprovid",{"_index":472,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('client').get('communitynam",{"_index":462,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('client').get('dob",{"_index":452,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('client').get('educationlevel",{"_index":458,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('client').get('fnam",{"_index":448,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('client').get('insurancenumb",{"_index":468,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('client').get('insuranceprovid",{"_index":470,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('client').get('latitud",{"_index":478,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('client').get('lnam",{"_index":450,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('client').get('longitud",{"_index":480,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('client').get('marriagestatu",{"_index":456,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('client').get('occup",{"_index":460,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('client').get('provinc",{"_index":466,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('client').get('sex",{"_index":454,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('client').get('surveyingorgan",{"_index":516,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('client').get('surveyingus",{"_index":476,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('clinicaccess",{"_index":506,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('conditionofloorinyourhous",{"_index":512,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('conditionoroofinyourhous",{"_index":514,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('dentalproblemswheredoyougo",{"_index":490,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('houseownership",{"_index":498,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('latrineaccess",{"_index":500,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('medicalproblemswheredoyougo",{"_index":488,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('numberofchildrenlivinginhouseundertheageof5",{"_index":494,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('numberofindividualslivinginthehous",{"_index":492,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('timesperweektrashcollect",{"_index":508,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('typeofwaterdoyoudrink",{"_index":504,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('wateraccess",{"_index":502,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('wheretrashleftbetweenpickup",{"_index":510,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('yearslivedinthecommun",{"_index":484,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.get('yearslivedinthishous",{"_index":486,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environmentalhealthresults.updatedat",{"_index":520,"title":{},"body":{"injectables/DataExportService.html":{}}}],["environments/environment.prod",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["error",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"classes/User.html":{}}}],["error.cod",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["error.messag",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["es",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["evalmed",{"_index":442,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical','envform','vit",{"_index":685,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["evalmedical.createdat",{"_index":616,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('assessmentandevalu",{"_index":606,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('assessmentandevaluation_surg",{"_index":609,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('assessmentandevaluation_surgical_guess",{"_index":611,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('chronic_condition_diabet",{"_index":579,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('chronic_condition_hypertens",{"_index":577,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('chronic_condition_oth",{"_index":581,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('condition_progress",{"_index":600,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('dur",{"_index":596,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('not",{"_index":605,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('pain",{"_index":602,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('part_of_bodi",{"_index":592,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('part_of_body_descript",{"_index":594,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('planofact",{"_index":612,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('received_treatment_descript",{"_index":588,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('received_treatment_notes'),//what",{"_index":585,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('seen_doctor",{"_index":583,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.get('trauma_induc",{"_index":598,"title":{},"body":{"injectables/DataExportService.html":{}}}],["evalmedical.updatedat",{"_index":618,"title":{},"body":{"injectables/DataExportService.html":{}}}],["exactlyonequeri",{"_index":1015,"title":{},"body":{"injectables/QueryService.html":{}}}],["exactlyonequery(parseobject",{"_index":1034,"title":{},"body":{"injectables/QueryService.html":{}}}],["exampl",{"_index":419,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["explor",{"_index":858,"title":{},"body":{"components/MyNavComponent.html":{}}}],["export",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"interfaces/marker.html":{},"overview.html":{}}}],["export',component:firstpagecompon",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["export.csv",{"_index":659,"title":{},"body":{"injectables/DataExportService.html":{}}}],["export.servic",{"_index":691,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["export.service.t",{"_index":401,"title":{},"body":{"injectables/DataExportService.html":{},"coverage.html":{}}}],["export.service.ts:154",{"_index":430,"title":{},"body":{"injectables/DataExportService.html":{}}}],["export.service.ts:21",{"_index":416,"title":{},"body":{"injectables/DataExportService.html":{}}}],["export.service.ts:239",{"_index":425,"title":{},"body":{"injectables/DataExportService.html":{}}}],["export.service.ts:355",{"_index":409,"title":{},"body":{"injectables/DataExportService.html":{}}}],["export.service.ts:387",{"_index":413,"title":{},"body":{"injectables/DataExportService.html":{}}}],["export.service.ts:56",{"_index":428,"title":{},"body":{"injectables/DataExportService.html":{}}}],["export.service.ts:8",{"_index":407,"title":{},"body":{"injectables/DataExportService.html":{}}}],["export/data",{"_index":400,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"coverage.html":{}}}],["express",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["f.name",{"_index":791,"title":{},"body":{"components/MapComponent.html":{}}}],["fail",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["fals",{"_index":874,"title":{},"body":{"injectables/NavbarService.html":{},"components/SignInComponent.html":{},"miscellaneous/variables.html":{}}}],["femal",{"_index":738,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["field",{"_index":1136,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["field.mat",{"_index":1135,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{},"interfaces/marker.html":{}}}],["filenam",{"_index":654,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{}}}],["filtervalu",{"_index":1103,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["final_array",{"_index":435,"title":{},"body":{"injectables/DataExportService.html":{}}}],["final_array.push(array",{"_index":441,"title":{},"body":{"injectables/DataExportService.html":{}}}],["final_array.push(result",{"_index":437,"title":{},"body":{"injectables/DataExportService.html":{}}}],["first",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"interfaces/marker.html":{}}}],["firstnam",{"_index":447,"title":{},"body":{"injectables/DataExportService.html":{}}}],["firstpagecompon",{"_index":42,"title":{"components/FirstPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["flex",{"_index":830,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["flexbox",{"_index":832,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["floor",{"_index":370,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["fname",{"_index":1108,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["focus",{"_index":1133,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["folder",{"_index":1291,"title":{},"body":{"index.html":{}}}],["font",{"_index":1139,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["for(let",{"_index":334,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/MapComponent.html":{},"interfaces/marker.html":{}}}],["forgot",{"_index":1089,"title":{},"body":{"components/SignInComponent.html":{}}}],["forgotpassword",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword(email",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword(email:str",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["form",{"_index":366,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["formsmodul",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["framework",{"_index":1244,"title":{},"body":{"index.html":{}}}],["friendli",{"_index":1255,"title":{},"body":{"index.html":{}}}],["front",{"_index":889,"title":{},"body":{"injectables/ParseService.html":{},"index.html":{}}}],["function",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"classes/User.html":{}}}],["function(error",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["function(person",{"_index":942,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["functionnam",{"_index":887,"title":{},"body":{"injectables/ParseService.html":{}}}],["functionrequest",{"_index":885,"title":{},"body":{"injectables/ParseService.html":{}}}],["functionrequest:ani",{"_index":894,"title":{},"body":{"injectables/ParseService.html":{}}}],["further",{"_index":1307,"title":{},"body":{"index.html":{}}}],["gener",{"_index":820,"title":{},"body":{"components/MyAsideComponent.html":{},"index.html":{}}}],["general_health_recommend",{"_index":607,"title":{},"body":{"injectables/DataExportService.html":{}}}],["genericqueri",{"_index":1016,"title":{},"body":{"injectables/QueryService.html":{}}}],["genericquery(parseobject",{"_index":1036,"title":{},"body":{"injectables/QueryService.html":{}}}],["genericquery(surveydata",{"_index":1038,"title":{},"body":{"injectables/QueryService.html":{}}}],["get",{"_index":1231,"title":{"index.html":{}},"body":{}}],["git",{"_index":1267,"title":{},"body":{"index.html":{}}}],["github",{"_index":1264,"title":{},"body":{"index.html":{}}}],["given",{"_index":913,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["go",{"_index":1308,"title":{},"body":{"index.html":{}}}],["googl",{"_index":1248,"title":{},"body":{"index.html":{}}}],["gt",{"_index":926,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["hack",{"_index":1009,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["header",{"_index":716,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["heading,.titl",{"_index":833,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["health",{"_index":590,"title":{},"body":{"injectables/DataExportService.html":{},"components/MyAsideComponent.html":{}}}],["height",{"_index":546,"title":{},"body":{"injectables/DataExportService.html":{},"components/MapComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["hello",{"_index":1017,"title":{},"body":{"injectables/QueryService.html":{}}}],["help",{"_index":1091,"title":{},"body":{"components/SignInComponent.html":{},"index.html":{}}}],["hemoglobinlevel",{"_index":558,"title":{},"body":{"injectables/DataExportService.html":{}}}],["heroku",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["hide",{"_index":867,"title":{},"body":{"injectables/NavbarService.html":{}}}],["histori",{"_index":365,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["home",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["home'},{'nam",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["homecompon",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homeenvcompon",{"_index":47,"title":{"components/HomeEnvComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["houseownership",{"_index":497,"title":{},"body":{"injectables/DataExportService.html":{}}}],["houseownership:'not",{"_index":542,"title":{},"body":{"injectables/DataExportService.html":{}}}],["html",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"index.html":{}}}],["https://hopetambala.github.io/puent",{"_index":1305,"title":{},"body":{"index.html":{}}}],["https://parseapi.back4app.com",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i'm",{"_index":1008,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["i0",{"_index":343,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["i=0",{"_index":335,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["i=0;i",{"_index":786,"title":{},"body":{"components/MapComponent.html":{},"interfaces/marker.html":{}}}],["id",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"classes/User.html":{}}}],["identifi",{"_index":1170,"title":{},"body":{"coverage.html":{}}}],["imag",{"_index":717,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["immediate_follow_up:\"not",{"_index":635,"title":{},"body":{"injectables/DataExportService.html":{}}}],["immediate_follow_up:evalmedical.get('immediate_follow_up",{"_index":613,"title":{},"body":{"injectables/DataExportService.html":{}}}],["implement",{"_index":289,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"interfaces/marker.html":{}}}],["import",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"interfaces/marker.html":{}}}],["improv",{"_index":1301,"title":{},"body":{"index.html":{}}}],["in'},{'nam",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["in.compon",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["in.component.html",{"_index":1066,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.scss",{"_index":1065,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.t",{"_index":1064,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{}}}],["in.component.ts:16",{"_index":1075,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:17",{"_index":1071,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:25",{"_index":1074,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:28",{"_index":1073,"title":{},"body":{"components/SignInComponent.html":{}}}],["in/sign",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"components/SignInComponent.html":{},"coverage.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"interfaces/marker.html":{},"miscellaneous/variables.html":{}}}],["individu",{"_index":1249,"title":{},"body":{"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"interfaces/marker.html":{}}}],["infowindow",{"_index":790,"title":{},"body":{"components/MapComponent.html":{}}}],["infrastructur",{"_index":1260,"title":{},"body":{"index.html":{}}}],["inject",{"_index":142,"title":{"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"classes/User.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{}}}],["insid",{"_index":1292,"title":{},"body":{"index.html":{}}}],["instal",{"_index":1266,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":1272,"title":{},"body":{"index.html":{}}}],["instead",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProcessorsService.html":{},"classes/User.html":{}}}],["insurancenumb",{"_index":467,"title":{},"body":{"injectables/DataExportService.html":{}}}],["insuranceprovid",{"_index":469,"title":{},"body":{"injectables/DataExportService.html":{}}}],["interfac",{"_index":1181,"title":{"interfaces/marker.html":{}},"body":{"coverage.html":{},"interfaces/marker.html":{},"overview.html":{}}}],["invalid",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["ionic",{"_index":1241,"title":{},"body":{"index.html":{}}}],["ishandset",{"_index":844,"title":{},"body":{"components/MyNavComponent.html":{}}}],["issu",{"_index":1294,"title":{},"body":{"index.html":{}}}],["item",{"_index":1162,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["item[key",{"_index":652,"title":{},"body":{"injectables/DataExportService.html":{}}}],["januari",{"_index":731,"title":{},"body":{"components/HomeEnvComponent.html":{},"components/SubmissionsComponent.html":{}}}],["jfwiqlinrhxih72j9kiotl8m0eusdry1yfiiylad",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["job",{"_index":751,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["josh",{"_index":760,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["js",{"_index":1214,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["justifi",{"_index":837,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["key",{"_index":638,"title":{},"body":{"injectables/DataExportService.html":{},"injectables/ProcessorsService.html":{}}}],["keys.foreach(function(key",{"_index":651,"title":{},"body":{"injectables/DataExportService.html":{}}}],["keys.join(columndelimit",{"_index":649,"title":{},"body":{"injectables/DataExportService.html":{}}}],["keys_of_object",{"_index":903,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["known",{"_index":1293,"title":{},"body":{"index.html":{}}}],["l",{"_index":782,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{},"interfaces/marker.html":{},"miscellaneous/variables.html":{}}}],["l.name",{"_index":792,"title":{},"body":{"components/MapComponent.html":{}}}],["label",{"_index":1313,"title":{},"body":{"interfaces/marker.html":{}}}],["last",{"_index":709,"title":{},"body":{"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["lastnam",{"_index":449,"title":{},"body":{"injectables/DataExportService.html":{}}}],["lat",{"_index":764,"title":{},"body":{"components/MapComponent.html":{},"interfaces/marker.html":{}}}],["later",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["latitud",{"_index":477,"title":{},"body":{"injectables/DataExportService.html":{}}}],["latrin",{"_index":340,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["latrineaccess",{"_index":499,"title":{},"body":{"injectables/DataExportService.html":{}}}],["latrineaccessno",{"_index":294,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["latrineaccessy",{"_index":295,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["layoutmodul",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["led",{"_index":1246,"title":{},"body":{"index.html":{}}}],["left",{"_index":823,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["left:0px",{"_index":811,"title":{},"body":{"components/MapComponent.html":{}}}],["legend",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"overview.html":{}}}],["level",{"_index":957,"title":{},"body":{"injectables/QueryCustomService.html":{},"components/SubmissionsComponent.html":{}}}],["librari",{"_index":925,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["lighten($brand",{"_index":1157,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["limit",{"_index":981,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["linedelimit",{"_index":640,"title":{},"body":{"injectables/DataExportService.html":{}}}],["link",{"_index":655,"title":{},"body":{"injectables/DataExportService.html":{}}}],["link.click",{"_index":667,"title":{},"body":{"injectables/DataExportService.html":{}}}],["link.setattribute('download",{"_index":666,"title":{},"body":{"injectables/DataExportService.html":{}}}],["link.setattribute('href",{"_index":665,"title":{},"body":{"injectables/DataExportService.html":{}}}],["list",{"_index":905,"title":{},"body":{"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["listallpati",{"_index":1018,"title":{},"body":{"injectables/QueryService.html":{}}}],["listofallid",{"_index":296,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["listpatientsbyorgan",{"_index":1019,"title":{},"body":{"injectables/QueryService.html":{}}}],["listpatientsbyorganization(organ",{"_index":1043,"title":{},"body":{"injectables/QueryService.html":{}}}],["listpatientsbyorganization(puent",{"_index":1045,"title":{},"body":{"injectables/QueryService.html":{}}}],["lname",{"_index":1109,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["lng",{"_index":765,"title":{},"body":{"components/MapComponent.html":{},"interfaces/marker.html":{}}}],["loader",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["loader.dismiss",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["loader.dismiss().then",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["loader.pres",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["local",{"_index":1000,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"index.html":{}}}],["locat",{"_index":1288,"title":{},"body":{"index.html":{}}}],["log",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["login",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"components/SignInComponent.html":{},"classes/User.html":{}}}],["logout",{"_index":860,"title":{},"body":{"components/MyNavComponent.html":{}}}],["longitud",{"_index":479,"title":{},"body":{"injectables/DataExportService.html":{}}}],["look",{"_index":1285,"title":{},"body":{"index.html":{}}}],["main",{"_index":799,"title":{},"body":{"components/MapComponent.html":{},"components/SubmissionsComponent.html":{}}}],["male",{"_index":736,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["manag",{"_index":1240,"title":{},"body":{"index.html":{}}}],["map",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"components/MapComponent.html":{},"components/MyNavComponent.html":{},"classes/User.html":{},"interfaces/marker.html":{}}}],["map',compon",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["map'},{'nam",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["map.component.html",{"_index":763,"title":{},"body":{"components/MapComponent.html":{},"interfaces/marker.html":{}}}],["map.component.scss",{"_index":762,"title":{},"body":{"components/MapComponent.html":{},"interfaces/marker.html":{}}}],["mapcompon",{"_index":50,"title":{"components/MapComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"interfaces/marker.html":{},"overview.html":{}}}],["march",{"_index":729,"title":{},"body":{"components/HomeEnvComponent.html":{},"components/SubmissionsComponent.html":{}}}],["margin",{"_index":862,"title":{},"body":{"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["margin:1",{"_index":1163,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["marker",{"_index":766,"title":{"interfaces/marker.html":{}},"body":{"components/MapComponent.html":{},"coverage.html":{},"interfaces/marker.html":{}}}],["marriagestatu",{"_index":455,"title":{},"body":{"injectables/DataExportService.html":{}}}],["mat",{"_index":1134,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["matbuttonmodul",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodul",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"interfaces/marker.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":1310,"title":{},"body":{"index.html":{}}}],["matformfieldmodul",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodul",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodul",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodul",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["matpagin",{"_index":1113,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["matpaginatormodul",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodul",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["matsort",{"_index":1117,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["matsortmodul",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabledatasourc",{"_index":1120,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["mattabledatasource(this.datalist",{"_index":1123,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["mattablemodul",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodul",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":713,"title":{},"body":{"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{}}}],["meant",{"_index":1238,"title":{},"body":{"index.html":{}}}],["medic",{"_index":821,"title":{},"body":{"components/MyAsideComponent.html":{}}}],["medicalproblemswheredoyougo",{"_index":487,"title":{},"body":{"injectables/DataExportService.html":{}}}],["member",{"_index":789,"title":{},"body":{"components/MapComponent.html":{}}}],["messag",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["method",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["migrat",{"_index":342,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"index.html":{}}}],["miscellan",{"_index":1319,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mixin",{"_index":923,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["mobil",{"_index":1242,"title":{},"body":{"index.html":{}}}],["model",{"_index":415,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["modul",{"_index":64,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":1296,"title":{},"body":{"index.html":{}}}],["more",{"_index":380,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"index.html":{}}}],["ms",{"_index":831,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["myasidecompon",{"_index":52,"title":{"components/MyAsideComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mynavcompon",{"_index":54,"title":{"components/MyNavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["n",{"_index":647,"title":{},"body":{"injectables/DataExportService.html":{}}}],["name",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"index.html":{}}}],["nav",{"_index":675,"title":{},"body":{"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{}}}],["nav'},{'nam",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["nav.compon",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["nav.component.html",{"_index":843,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.scss",{"_index":842,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.t",{"_index":841,"title":{},"body":{"components/MyNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:16",{"_index":851,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.ts:18",{"_index":847,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.ts:21",{"_index":852,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.ts:22",{"_index":849,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.ts:28",{"_index":848,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav/mi",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"components/MyNavComponent.html":{},"coverage.html":{}}}],["nav:navbarservic",{"_index":694,"title":{},"body":{"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{}}}],["navbarservic",{"_index":676,"title":{"injectables/NavbarService.html":{}},"body":{"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"components/SignInComponent.html":{},"coverage.html":{}}}],["navig",{"_index":822,"title":{},"body":{"components/MyAsideComponent.html":{}}}],["nbsp;·&nbsp",{"_index":1088,"title":{},"body":{"components/SignInComponent.html":{}}}],["need",{"_index":1090,"title":{},"body":{"components/SignInComponent.html":{},"index.html":{}}}],["needsassessmentandevaluation:\"not",{"_index":636,"title":{},"body":{"injectables/DataExportService.html":{}}}],["needsassessmentandevaluation:evalmedical.get('needsassessmentandevalu",{"_index":614,"title":{},"body":{"injectables/DataExportService.html":{}}}],["new",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":1283,"title":{},"body":{"index.html":{}}}],["ng2",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngmodul",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":306,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"interfaces/marker.html":{}}}],["node.j",{"_index":1262,"title":{},"body":{"index.html":{}}}],["note",{"_index":574,"title":{},"body":{"injectables/DataExportService.html":{}}}],["notes:nul",{"_index":632,"title":{},"body":{"injectables/DataExportService.html":{}}}],["now",{"_index":928,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["npm",{"_index":1271,"title":{},"body":{"index.html":{}}}],["null",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"components/MyNavComponent.html":{},"injectables/QueryService.html":{},"classes/User.html":{}}}],["number",{"_index":318,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/MapComponent.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"interfaces/marker.html":{}}}],["number=1000",{"_index":1054,"title":{},"body":{"injectables/QueryService.html":{}}}],["numberofchildrenlivinginhouseundertheageof5",{"_index":493,"title":{},"body":{"injectables/DataExportService.html":{}}}],["numberofchildrenlivinginhouseundertheageof5:'not",{"_index":540,"title":{},"body":{"injectables/DataExportService.html":{}}}],["numberofid",{"_index":297,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["numberofindividualslivinginthehous",{"_index":491,"title":{},"body":{"injectables/DataExportService.html":{}}}],["numberofindividualslivinginthehouse:'not",{"_index":539,"title":{},"body":{"injectables/DataExportService.html":{}}}],["numberofmatchingid",{"_index":298,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["obj",{"_index":912,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["obj[key",{"_index":937,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["object",{"_index":423,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"miscellaneous/variables.html":{}}}],["object.entries(obj",{"_index":938,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["object.keys(data[0",{"_index":648,"title":{},"body":{"injectables/DataExportService.html":{}}}],["object_to_array_of_object",{"_index":899,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["object_to_array_of_objects(obj",{"_index":910,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["object_to_export",{"_index":444,"title":{},"body":{"injectables/DataExportService.html":{}}}],["objekt",{"_index":1049,"title":{},"body":{"injectables/QueryService.html":{}}}],["observ",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"components/MyNavComponent.html":{},"classes/User.html":{}}}],["observable((observ",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["observer.complet",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["observer.error(error",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["observer.next(tru",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["occup",{"_index":459,"title":{},"body":{"injectables/DataExportService.html":{},"components/HomeEnvComponent.html":{}}}],["on",{"_index":422,"title":{},"body":{"injectables/DataExportService.html":{},"injectables/ProcessorsService.html":{}}}],["onc",{"_index":377,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["oninit",{"_index":290,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"interfaces/marker.html":{}}}],["open",{"_index":1245,"title":{},"body":{"index.html":{}}}],["option",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["order",{"_index":916,"title":{},"body":{"injectables/ProcessorsService.html":{},"index.html":{}}}],["organ",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"classes/User.html":{}}}],["organizationwhoownsdata",{"_index":515,"title":{},"body":{"injectables/DataExportService.html":{}}}],["out",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1317,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":825,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["packag",{"_index":1193,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":800,"title":{},"body":{"components/MapComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["page",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"components/FirstPageComponent.html":{}}}],["page'},{'nam",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["page.compon",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["page.component.html",{"_index":671,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.scss",{"_index":670,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.t",{"_index":669,"title":{},"body":{"components/FirstPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:15",{"_index":684,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.ts:17",{"_index":686,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.ts:18",{"_index":677,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.ts:27",{"_index":678,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.ts:40",{"_index":681,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page.component.ts:51",{"_index":679,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["page/first",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"components/FirstPageComponent.html":{},"coverage.html":{}}}],["pages/communityanalysis/communityanalysis.compon",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/first",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/hom",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/home/home.compon",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/map/map.compon",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/sign",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/submissions/submissions.compon",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["pagin",{"_index":1098,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["pain",{"_index":601,"title":{},"body":{"injectables/DataExportService.html":{}}}],["pain:\"not",{"_index":631,"title":{},"body":{"injectables/DataExportService.html":{}}}],["painlevel",{"_index":566,"title":{},"body":{"injectables/DataExportService.html":{}}}],["pair",{"_index":908,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["param",{"_index":433,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["paramet",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["pars",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"classes/User.html":{},"dependencies.html":{},"index.html":{}}}],["parse.cloud.run(functionname,functionrequest",{"_index":895,"title":{},"body":{"injectables/ParseService.html":{}}}],["parse.initialize(this.parseappid",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["parse.initialize(this.parseappid,this.parsejavascriptkey",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["parse.object.extend('surveydata",{"_index":978,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["parse.object.extend(parsemodel",{"_index":1047,"title":{},"body":{"injectables/QueryService.html":{}}}],["parse.object.extend(parseobject",{"_index":1050,"title":{},"body":{"injectables/QueryService.html":{}}}],["parse.query(model",{"_index":1001,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["parse.query(objekt",{"_index":1051,"title":{},"body":{"injectables/QueryService.html":{}}}],["parse.query(parse.us",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["parse.query(patientidmodel",{"_index":980,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["parse.query(surveydata",{"_index":1055,"title":{},"body":{"injectables/QueryService.html":{}}}],["parse.serverurl",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["parse.us",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["parse.user.curr",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["parse.user.login(this.usernam",{"_index":1080,"title":{},"body":{"components/SignInComponent.html":{}}}],["parse.user.login(usernam",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["parse.user.logout().then",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["parse.user.requestpasswordreset(email",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["parse/parse.servic",{"_index":967,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["parse:parseservic",{"_index":968,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["parseappid",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["parsecolumn",{"_index":1023,"title":{},"body":{"injectables/QueryService.html":{}}}],["parseenviron",{"_index":878,"title":{},"body":{"injectables/ParseService.html":{}}}],["parseiniti",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["parsejavascriptkey",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["parsemodel",{"_index":1031,"title":{},"body":{"injectables/QueryService.html":{}}}],["parsemodel:string,parsecolumn",{"_index":1046,"title":{},"body":{"injectables/QueryService.html":{}}}],["parseobject",{"_index":1022,"title":{},"body":{"injectables/QueryService.html":{}}}],["parseparamvalu",{"_index":1032,"title":{},"body":{"injectables/QueryService.html":{}}}],["parseparamvaluesarray",{"_index":1024,"title":{},"body":{"injectables/QueryService.html":{}}}],["parseserverurl",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["parseservic",{"_index":876,"title":{"injectables/ParseService.html":{}},"body":{"injectables/ParseService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["part_of_bodi",{"_index":591,"title":{},"body":{"injectables/DataExportService.html":{}}}],["part_of_body:\"not",{"_index":626,"title":{},"body":{"injectables/DataExportService.html":{}}}],["part_of_body_descript",{"_index":593,"title":{},"body":{"injectables/DataExportService.html":{}}}],["part_of_body_description:\"not",{"_index":627,"title":{},"body":{"injectables/DataExportService.html":{}}}],["password",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"components/SignInComponent.html":{},"classes/User.html":{}}}],["path",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["patient",{"_index":521,"title":{},"body":{"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"injectables/QueryCustomService.html":{}}}],["patientdemographicsclass",{"_index":1042,"title":{},"body":{"injectables/QueryService.html":{}}}],["patientidmodel",{"_index":977,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["patientmodelclass",{"_index":963,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["per",{"_index":375,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["person.get(keys_of_object",{"_index":943,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["planofact",{"_index":573,"title":{},"body":{"injectables/DataExportService.html":{}}}],["planofaction:\"not",{"_index":634,"title":{},"body":{"injectables/DataExportService.html":{}}}],["platform",{"_index":1239,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":1084,"title":{},"body":{"components/SignInComponent.html":{}}}],["poor",{"_index":368,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["poorfloorcondit",{"_index":299,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["poorroofcondit",{"_index":300,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["power",{"_index":1252,"title":{},"body":{"index.html":{}}}],["primari",{"_index":805,"title":{},"body":{"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["privat",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"components/SignInComponent.html":{},"classes/User.html":{}}}],["proce",{"_index":1085,"title":{},"body":{"components/SignInComponent.html":{}}}],["processorsservic",{"_index":896,"title":{"injectables/ProcessorsService.html":{}},"body":{"injectables/ProcessorsService.html":{},"coverage.html":{}}}],["product",{"_index":1280,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":859,"title":{},"body":{"components/MyNavComponent.html":{}}}],["project",{"_index":777,"title":{},"body":{"components/MapComponent.html":{},"index.html":{},"interfaces/marker.html":{}}}],["promis",{"_index":959,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["promise((resolv",{"_index":975,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["properti",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MapComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"interfaces/marker.html":{}}}],["provid",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProcessorsService.html":{},"index.html":{},"overview.html":{}}}],["providedin",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"classes/User.html":{}}}],["providers/auth/auth.servic",{"_index":688,"title":{},"body":{"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{}}}],["providers/componentname/componentnamethi",{"_index":1290,"title":{},"body":{"index.html":{}}}],["providers/data",{"_index":690,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["providers/navbar/navbar.servic",{"_index":689,"title":{},"body":{"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{}}}],["providers/queri",{"_index":779,"title":{},"body":{"components/MapComponent.html":{},"interfaces/marker.html":{}}}],["providers/query/query.servic",{"_index":329,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["provinc",{"_index":465,"title":{},"body":{"injectables/DataExportService.html":{}}}],["public",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"classes/User.html":{}}}],["puent",{"_index":1233,"title":{},"body":{"index.html":{}}}],["puente_export.csv",{"_index":708,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["pull",{"_index":1300,"title":{},"body":{"index.html":{}}}],["puls",{"_index":554,"title":{},"body":{"injectables/DataExportService.html":{}}}],["q",{"_index":692,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["queri",{"_index":311,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/MapComponent.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{}}}],["query.containedin(parsecolumn,parseparamvaluesarray",{"_index":1052,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.count().then((surveypoint",{"_index":1011,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["query.descend",{"_index":1006,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["query.equalto(\"surveyingorganization\",organ",{"_index":996,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["query.equalto(\"surveyinguser\",usernam",{"_index":986,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["query.equalto('educationlevel',educationlevelparam",{"_index":1002,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["query.equalto('sex',sexparam",{"_index":1003,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["query.equalto('surveyingorganization',organ",{"_index":1005,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["query.equalto('surveyingorganization',parsecolumn",{"_index":1058,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.equalto('surveyinguser','candiani",{"_index":1010,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["query.equalto('surveyinguser',usernam",{"_index":1004,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["query.equalto('surveyinguser',usersnam",{"_index":1059,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.equalto(parsecolumn",{"_index":1007,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["query.equalto(parsecolumn,parseparam",{"_index":1056,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.equalto(parsecolumn,parseparamvalu",{"_index":1048,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.find().then((surveypoint",{"_index":991,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["query.first().then((surveypoint",{"_index":1053,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.limit(2000",{"_index":983,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["query.limit(limit",{"_index":1057,"title":{},"body":{"injectables/QueryService.html":{}}}],["query.notequalto(\"surveyingorgan",{"_index":984,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["query/query.servic",{"_index":431,"title":{},"body":{"injectables/DataExportService.html":{}}}],["query:querycustomservic",{"_index":783,"title":{},"body":{"components/MapComponent.html":{},"interfaces/marker.html":{}}}],["query:queryservic",{"_index":331,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["querycustomservic",{"_index":768,"title":{"injectables/QueryCustomService.html":{}},"body":{"components/MapComponent.html":{},"injectables/QueryCustomService.html":{},"coverage.html":{},"interfaces/marker.html":{}}}],["queryservic",{"_index":309,"title":{"injectables/QueryService.html":{}},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"injectables/QueryService.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{}}}],["radiu",{"_index":1142,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["reach",{"_index":1303,"title":{},"body":{"index.html":{}}}],["readm",{"_index":1309,"title":{},"body":{"index.html":{}}}],["received_treatment_descript",{"_index":587,"title":{},"body":{"injectables/DataExportService.html":{}}}],["received_treatment_description:\"not",{"_index":625,"title":{},"body":{"injectables/DataExportService.html":{}}}],["received_treatment_not",{"_index":584,"title":{},"body":{"injectables/DataExportService.html":{}}}],["received_treatment_notes:\"not",{"_index":623,"title":{},"body":{"injectables/DataExportService.html":{}}}],["record",{"_index":363,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["redirect",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["refactor",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["reject",{"_index":974,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["reject(error",{"_index":993,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["rememb",{"_index":1086,"title":{},"body":{"components/SignInComponent.html":{}}}],["rene",{"_index":754,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["report",{"_index":1299,"title":{},"body":{"index.html":{}}}],["repositori",{"_index":1263,"title":{},"body":{"index.html":{}}}],["request",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"index.html":{}}}],["requir",{"_index":1191,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"overview.html":{}}}],["resid",{"_index":734,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["resiz",{"_index":861,"title":{},"body":{"components/MyNavComponent.html":{}}}],["resolv",{"_index":972,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["resolve(surveypoint",{"_index":992,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["resprat",{"_index":556,"title":{},"body":{"injectables/DataExportService.html":{}}}],["result",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"interfaces/marker.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.length",{"_index":338,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["retriev",{"_index":339,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["retrieveall_patientid_info_by_organ",{"_index":947,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["retrieveall_patientid_info_by_organization(&#39;puente&#39",{"_index":962,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["retrieveall_patientid_info_by_organization('puent",{"_index":995,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["retrieveall_patientid_info_by_organization(organ",{"_index":960,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["retrieveall_patientid_info_by_us",{"_index":948,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["retrieveall_patientid_info_by_user(&#39;puente&#39",{"_index":966,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["retrieveall_patientid_info_by_user('puent",{"_index":970,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["retrieveall_patientid_info_by_user(usernam",{"_index":964,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["return",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{}}}],["rgba(0,0,0,0.2",{"_index":1150,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["right",{"_index":806,"title":{},"body":{"components/MapComponent.html":{},"components/SubmissionsComponent.html":{}}}],["rodrigo",{"_index":756,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["roof",{"_index":369,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"classes/User.html":{}}}],["root'},{'nam",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["rose",{"_index":758,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["round",{"_index":1143,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["rout",{"_index":89,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"components/SignInComponent.html":{},"routes.html":{}}}],["router",{"_index":1070,"title":{},"body":{"components/SignInComponent.html":{}}}],["routermodul",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["row",{"_index":826,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["run",{"_index":1261,"title":{},"body":{"index.html":{}}}],["runcloudfunct",{"_index":879,"title":{},"body":{"injectables/ParseService.html":{}}}],["runcloudfunction(functionnam",{"_index":884,"title":{},"body":{"injectables/ParseService.html":{}}}],["runcloudfunction(functionname:str",{"_index":893,"title":{},"body":{"injectables/ParseService.html":{}}}],["rxj",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"components/MyNavComponent.html":{},"classes/User.html":{},"dependencies.html":{}}}],["rxjs/add/operator/map",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["rxjs/oper",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["s.user",{"_index":793,"title":{},"body":{"components/MapComponent.html":{}}}],["same",{"_index":915,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["scaffold",{"_index":1282,"title":{},"body":{"index.html":{}}}],["screenshot",{"_index":1243,"title":{},"body":{"index.html":{}}}],["search",{"_index":988,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["secondari",{"_index":1137,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["secondary,0",{"_index":1158,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["section",{"_index":604,"title":{},"body":{"injectables/DataExportService.html":{}}}],["seen_doctor",{"_index":582,"title":{},"body":{"injectables/DataExportService.html":{}}}],["seen_doctor:\"not",{"_index":622,"title":{},"body":{"injectables/DataExportService.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"interfaces/marker.html":{}}}],["sent",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["server",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"classes/User.html":{},"index.html":{}}}],["set",{"_index":982,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"index.html":{}}}],["settimeout",{"_index":976,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["setup",{"_index":307,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/SubmissionsComponent.html":{}}}],["setup(\"puente\",'evalmed",{"_index":432,"title":{},"body":{"injectables/DataExportService.html":{}}}],["setup(&quot;puente&quot;,&#39;evalmedical&#39",{"_index":421,"title":{},"body":{"injectables/DataExportService.html":{}}}],["setup(organ",{"_index":414,"title":{},"body":{"injectables/DataExportService.html":{}}}],["setup(organization:string,model:str",{"_index":434,"title":{},"body":{"injectables/DataExportService.html":{}}}],["setupevalmedicalqueri",{"_index":404,"title":{},"body":{"injectables/DataExportService.html":{}}}],["setupevalmedicalquery(demographicobject",{"_index":424,"title":{},"body":{"injectables/DataExportService.html":{}}}],["setupqueri",{"_index":405,"title":{},"body":{"injectables/DataExportService.html":{}}}],["setupquery(demographicobject",{"_index":427,"title":{},"body":{"injectables/DataExportService.html":{}}}],["setupvitalsqueri",{"_index":406,"title":{},"body":{"injectables/DataExportService.html":{}}}],["setupvitalsquery(demographicobject",{"_index":429,"title":{},"body":{"injectables/DataExportService.html":{}}}],["sex",{"_index":453,"title":{},"body":{"injectables/DataExportService.html":{},"injectables/QueryCustomService.html":{}}}],["sexparam",{"_index":953,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["shadow",{"_index":1147,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["show",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NavbarService.html":{},"classes/User.html":{}}}],["sign",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{}}}],["signin",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin(usernam",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["signincompon",{"_index":56,"title":{"components/SignInComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signout",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["signup",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup(usernam",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["simpli",{"_index":921,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["size",{"_index":720,"title":{},"body":{"components/FirstPageComponent.html":{},"components/SubmissionsComponent.html":{}}}],["somewher",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["sort",{"_index":920,"title":{},"body":{"injectables/ProcessorsService.html":{},"components/SubmissionsComponent.html":{}}}],["sortkeysbi",{"_index":900,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"index.html":{},"interfaces/marker.html":{}}}],["spec\\.t",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spread",{"_index":1302,"title":{},"body":{"index.html":{}}}],["src/.../environment.prod.t",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../home.component.t",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../map.component.t",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/mi",{"_index":813,"title":{},"body":{"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"coverage.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.t",{"_index":288,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"coverage.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:12",{"_index":320,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:13",{"_index":314,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:14",{"_index":321,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:15",{"_index":322,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:17",{"_index":319,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:18",{"_index":317,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:20",{"_index":323,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:21",{"_index":324,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:23",{"_index":328,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:24",{"_index":327,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:25",{"_index":325,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:26",{"_index":326,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:27",{"_index":310,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:33",{"_index":312,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/communityanalysis/communityanalysis.component.ts:36",{"_index":313,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["src/app/pages/first",{"_index":668,"title":{},"body":{"components/FirstPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/hom",{"_index":722,"title":{},"body":{"components/HomeEnvComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.component.t",{"_index":1177,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/map/map.component.t",{"_index":761,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{},"interfaces/marker.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/map/map.component.ts:15",{"_index":778,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/pages/map/map.component.ts:16",{"_index":773,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/pages/map/map.component.ts:17",{"_index":775,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/pages/map/map.component.ts:19",{"_index":769,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/pages/map/map.component.ts:23",{"_index":771,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/pages/map/map.component.ts:28",{"_index":770,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/pages/sign",{"_index":1063,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{}}}],["src/app/pages/submissions/submissions.component.t",{"_index":1092,"title":{},"body":{"components/SubmissionsComponent.html":{},"coverage.html":{}}}],["src/app/pages/submissions/submissions.component.ts:13",{"_index":1107,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:14",{"_index":1106,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:15",{"_index":1112,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:21",{"_index":1116,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:26",{"_index":1100,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:36",{"_index":1104,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:39",{"_index":1105,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/pages/submissions/submissions.component.ts:54",{"_index":1102,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["src/app/providers/auth/auth.service.t",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"coverage.html":{}}}],["src/app/providers/auth/auth.service.ts:104",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/providers/auth/auth.service.ts:130",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/providers/auth/auth.service.ts:136",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/providers/auth/auth.service.ts:14",{"_index":1165,"title":{},"body":{"classes/User.html":{}}}],["src/app/providers/auth/auth.service.ts:147",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/providers/auth/auth.service.ts:15",{"_index":1166,"title":{},"body":{"classes/User.html":{}}}],["src/app/providers/auth/auth.service.ts:16",{"_index":1164,"title":{},"body":{"classes/User.html":{}}}],["src/app/providers/auth/auth.service.ts:160",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/providers/auth/auth.service.ts:164",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/providers/auth/auth.service.ts:17",{"_index":1167,"title":{},"body":{"classes/User.html":{}}}],["src/app/providers/auth/auth.service.ts:24",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/providers/auth/auth.service.ts:25",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/providers/auth/auth.service.ts:26",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/providers/auth/auth.service.ts:33",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/providers/data",{"_index":399,"title":{},"body":{"injectables/DataExportService.html":{},"coverage.html":{}}}],["src/app/providers/navbar/navbar.service.t",{"_index":865,"title":{},"body":{"injectables/NavbarService.html":{},"coverage.html":{}}}],["src/app/providers/navbar/navbar.service.ts:12",{"_index":870,"title":{},"body":{"injectables/NavbarService.html":{}}}],["src/app/providers/navbar/navbar.service.ts:14",{"_index":871,"title":{},"body":{"injectables/NavbarService.html":{}}}],["src/app/providers/navbar/navbar.service.ts:16",{"_index":872,"title":{},"body":{"injectables/NavbarService.html":{}}}],["src/app/providers/navbar/navbar.service.ts:8",{"_index":869,"title":{},"body":{"injectables/NavbarService.html":{}}}],["src/app/providers/parse/parse.service.t",{"_index":877,"title":{},"body":{"injectables/ParseService.html":{},"coverage.html":{}}}],["src/app/providers/parse/parse.service.ts:10",{"_index":891,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/providers/parse/parse.service.ts:11",{"_index":892,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/providers/parse/parse.service.ts:12",{"_index":880,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/providers/parse/parse.service.ts:26",{"_index":881,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/providers/parse/parse.service.ts:37",{"_index":882,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/providers/parse/parse.service.ts:54",{"_index":886,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/providers/processors/processors.service.t",{"_index":897,"title":{},"body":{"injectables/ProcessorsService.html":{},"coverage.html":{}}}],["src/app/providers/processors/processors.service.ts:21",{"_index":917,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["src/app/providers/processors/processors.service.ts:43",{"_index":911,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["src/app/providers/processors/processors.service.ts:56",{"_index":904,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["src/app/providers/processors/processors.service.ts:7",{"_index":901,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["src/app/providers/queri",{"_index":944,"title":{},"body":{"injectables/QueryCustomService.html":{},"coverage.html":{}}}],["src/app/providers/query/query.service.t",{"_index":1012,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["src/app/providers/query/query.service.ts:136",{"_index":1037,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/providers/query/query.service.ts:16",{"_index":1033,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/providers/query/query.service.ts:178",{"_index":1039,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/providers/query/query.service.ts:189",{"_index":1041,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/providers/query/query.service.ts:201",{"_index":1044,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/providers/query/query.service.ts:56",{"_index":1035,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/providers/query/query.service.ts:7",{"_index":1020,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/providers/query/query.service.ts:97",{"_index":1025,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/environments/environment.prod.t",{"_index":1187,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1188,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1189,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":1235,"title":{},"body":{"index.html":{}}}],["start",{"_index":1232,"title":{"index.html":{}},"body":{}}],["start:localbuild",{"_index":1273,"title":{},"body":{"index.html":{}}}],["statement",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":589,"title":{},"body":{"injectables/DataExportService.html":{}}}],["store",{"_index":1277,"title":{},"body":{"index.html":{}}}],["string",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/MapComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"interfaces/marker.html":{}}}],["structur",{"_index":1286,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["style",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"interfaces/marker.html":{}}}],["submiss",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["submissions.component.html",{"_index":1094,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["submissions.component.scss",{"_index":1093,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["submissions:hov",{"_index":1153,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["submissionscompon",{"_index":59,"title":{"components/SubmissionsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["subscrib",{"_index":1079,"title":{},"body":{"components/SignInComponent.html":{}}}],["subtitl",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["success",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"components/SignInComponent.html":{},"classes/User.html":{}}}],["success.tojson().usernam",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["successfulli",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["sum",{"_index":356,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["support",{"_index":1314,"title":{},"body":{"modules.html":{}}}],["survey",{"_index":1130,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["surveydata",{"_index":979,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["surveyingus",{"_index":1110,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["surveyor",{"_index":753,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["surveypoint",{"_index":990,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["svg",{"_index":1315,"title":{},"body":{"modules.html":{}}}],["t",{"_index":645,"title":{},"body":{"injectables/DataExportService.html":{}}}],["tabl",{"_index":711,"title":{},"body":{"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1192,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["team",{"_index":1247,"title":{},"body":{"index.html":{}}}],["temp",{"_index":552,"title":{},"body":{"injectables/DataExportService.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"interfaces/marker.html":{}}}],["test",{"_index":985,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["testdownload",{"_index":673,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["testsetup",{"_index":674,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["testsetup(&#39;evalmedical&#39",{"_index":683,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["testsetup('evalmed",{"_index":699,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["testsetup(form",{"_index":680,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["testsetup(form:str",{"_index":700,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["text",{"_index":834,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["theme.scss",{"_index":798,"title":{},"body":{"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["there'",{"_index":973,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["this.alertctrl.cr",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["this.alertservice.error(error",{"_index":1082,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.arrayofmatchenvfil",{"_index":336,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.arrayofmatchenvfiles[i].get('timesperweektrashcollect",{"_index":345,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.auth.authent",{"_index":697,"title":{},"body":{"components/FirstPageComponent.html":{},"components/MyNavComponent.html":{}}}],["this.auth.currentuser().nam",{"_index":856,"title":{},"body":{"components/MyNavComponent.html":{}}}],["this.auth.currentuser().organ",{"_index":687,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.authpvdr.signin(this.usernam",{"_index":1077,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset",{"_index":850,"title":{},"body":{"components/MyNavComponent.html":{}}}],["this.convertarrayofobjectstocsv",{"_index":657,"title":{},"body":{"injectables/DataExportService.html":{}}}],["this.create_all_mark",{"_index":784,"title":{},"body":{"components/MapComponent.html":{},"interfaces/marker.html":{}}}],["this.currentus",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["this.data.downloadcsv",{"_index":707,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.data.setup(this.organization,'envform').then((result",{"_index":703,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.data.setup(this.organization,'evalmedical').then((result",{"_index":702,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.data.setup(this.organization,'vitals').then((result",{"_index":704,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.data.setup(this.organization,form).then((result",{"_index":701,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.datasourc",{"_index":1122,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["this.datasource.pagin",{"_index":1124,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["this.datasource.sort",{"_index":1126,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["this.dictstoexport",{"_index":705,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.load",{"_index":1083,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.loadctrl.cr",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["this.nav.hid",{"_index":1076,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.nav.show",{"_index":696,"title":{},"body":{"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{}}}],["this.numberofmatchingid",{"_index":337,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.pagin",{"_index":1125,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["this.parse.parseenviron",{"_index":971,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["this.parse.parseiniti",{"_index":969,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["this.parse.runcloudfunction(\"hello\",nul",{"_index":1060,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.parse.runcloudfunction(\"retrievepatientrecordbyorgn",{"_index":1062,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.parse.runcloudfunction(\"retrievepatientrecordsal",{"_index":1061,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.parseiniti",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["this.parseserverurl",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParseService.html":{},"classes/User.html":{}}}],["this.password",{"_index":1078,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.query.exactlyonequery('evaluationmedical','client',demographicobject).then((evalmed",{"_index":575,"title":{},"body":{"injectables/DataExportService.html":{}}}],["this.query.exactlyonequery('historyenvironmentalhealth','client',demographicobject).then((environmentalhealthresult",{"_index":445,"title":{},"body":{"injectables/DataExportService.html":{}}}],["this.query.exactlyonequery('vitals','client',demographicobject).then((vit",{"_index":544,"title":{},"body":{"injectables/DataExportService.html":{}}}],["this.query.genericquery('surveydata',organization).then((patientresult",{"_index":436,"title":{},"body":{"injectables/DataExportService.html":{}}}],["this.query.listallpatients().then((result",{"_index":333,"title":{},"body":{"components/CommunityAnalysisComponent.html":{},"components/SubmissionsComponent.html":{}}}],["this.query.retrieveall_patientid_info_by_organization('puente').then((result",{"_index":785,"title":{},"body":{"components/MapComponent.html":{},"interfaces/marker.html":{}}}],["this.router.navigate(['/hom",{"_index":1081,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.setup",{"_index":332,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.setup().then",{"_index":1121,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["this.setupevalmedicalquery(demographicobject).then(result",{"_index":443,"title":{},"body":{"injectables/DataExportService.html":{}}}],["this.setupquery(demographicobject).then(result",{"_index":439,"title":{},"body":{"injectables/DataExportService.html":{}}}],["this.sort",{"_index":1127,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["this.testsetup('evalmed",{"_index":698,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["this.trash1aweek",{"_index":349,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.trash2aweek",{"_index":351,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.trash3omor",{"_index":352,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.trashaverag",{"_index":358,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.trashperweek",{"_index":359,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.trashperweek.push(trashnumb",{"_index":346,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["this.usernam",{"_index":857,"title":{},"body":{"components/MyNavComponent.html":{}}}],["this.vis",{"_index":873,"title":{},"body":{"injectables/NavbarService.html":{}}}],["this_proj",{"_index":1270,"title":{},"body":{"index.html":{}}}],["those",{"_index":1251,"title":{},"body":{"index.html":{}}}],["thrice",{"_index":379,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["time",{"_index":794,"title":{},"body":{"components/MapComponent.html":{},"components/SubmissionsComponent.html":{}}}],["times/week",{"_index":384,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["titl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/MapComponent.html":{},"classes/User.html":{},"interfaces/marker.html":{}}}],["toggl",{"_index":868,"title":{},"body":{"injectables/NavbarService.html":{}}}],["tool",{"_index":787,"title":{},"body":{"components/MapComponent.html":{}}}],["top",{"_index":1145,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["total",{"_index":347,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["transit",{"_index":1151,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["trash",{"_index":374,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trash1aweek",{"_index":301,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trash2aweek",{"_index":302,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trash3omor",{"_index":303,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trashaverag",{"_index":304,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trashloc",{"_index":509,"title":{},"body":{"injectables/DataExportService.html":{}}}],["trashnumb",{"_index":344,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trashperweek",{"_index":305,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["trashpickupfrequ",{"_index":507,"title":{},"body":{"injectables/DataExportService.html":{}}}],["trauma_induc",{"_index":597,"title":{},"body":{"injectables/DataExportService.html":{}}}],["trauma_induced:\"not",{"_index":629,"title":{},"body":{"injectables/DataExportService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["tri",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"classes/User.html":{}}}],["true",{"_index":875,"title":{},"body":{"injectables/NavbarService.html":{},"miscellaneous/variables.html":{}}}],["twice",{"_index":378,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"coverage.html":{},"interfaces/marker.html":{},"miscellaneous/variables.html":{}}}],["typeofwaterdrank",{"_index":503,"title":{},"body":{"injectables/DataExportService.html":{}}}],["typeofwaterdrank:'not",{"_index":543,"title":{},"body":{"injectables/DataExportService.html":{}}}],["typescript",{"_index":1223,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["u",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["u.get('email",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["u.get('organ",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["u.get('usernam",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["u.id",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["uarr",{"_index":750,"title":{},"body":{"components/HomeEnvComponent.html":{}}}],["uglifi",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["underscor",{"_index":924,"title":{},"body":{"injectables/ProcessorsService.html":{},"dependencies.html":{}}}],["up",{"_index":1087,"title":{},"body":{"components/SignInComponent.html":{}}}],["url('https://material.angular.io/assets/img/examples/shiba1.jpg",{"_index":719,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["us",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"index.html":{}}}],["usabl",{"_index":929,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["user",{"_index":163,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/DataExportService.html":{},"injectables/QueryCustomService.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["user'",{"_index":955,"title":{},"body":{"injectables/QueryCustomService.html":{}}}],["user.createdat",{"_index":1132,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["user.email",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["user.fnam",{"_index":1128,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["user.get(\"email",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["user.get(\"usernam",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["user.get('clinicaccess",{"_index":389,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get('conditionofloorinyourhous",{"_index":387,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get('conditionoroofinyourhous",{"_index":388,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get('latrineaccess",{"_index":386,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get('timesperweektrashcollect",{"_index":391,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get('wateraccess",{"_index":390,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get(\\'clinicaccess",{"_index":395,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get(\\'conditionofloorinyourhous",{"_index":393,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get(\\'conditionoroofinyourhous",{"_index":394,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get(\\'latrineaccess",{"_index":392,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get(\\'timesperweektrashcollect",{"_index":397,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.get(\\'wateraccess",{"_index":396,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["user.id",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"classes/User.html":{}}}],["user.lnam",{"_index":1129,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["user.nam",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["user.organ",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["user.set('email",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["user.set('organ",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["user.set('password",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["user.set('usernam",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["user.signup(nul",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["user.surveyingus",{"_index":1131,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["userid",{"_index":381,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["usernam",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"components/MyNavComponent.html":{},"injectables/QueryCustomService.html":{},"components/SignInComponent.html":{},"classes/User.html":{}}}],["userqueri",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["userquery.equalto('email",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["userquery.first().then(funct",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["valu",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/MapComponent.html":{},"components/MyNavComponent.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"injectables/QueryService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"injectables/DataExportService.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/ProcessorsService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{},"classes/User.html":{}}}],["variabl",{"_index":1179,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["vbdthqqu31iylw5uyrdiwb8ew8zczgbzmqchugjr",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1258,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":1119,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["viewchild(matpagin",{"_index":1115,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["viewchild(matsort",{"_index":1118,"title":{},"body":{"components/SubmissionsComponent.html":{}}}],["visibl",{"_index":866,"title":{},"body":{"injectables/NavbarService.html":{}}}],["vital",{"_index":545,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.createdat",{"_index":569,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('bloodoxygen",{"_index":565,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('bloodpressur",{"_index":561,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('bloodsugar",{"_index":563,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('bmi",{"_index":551,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('height",{"_index":547,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('hemoglobinlevel",{"_index":559,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('painlevel",{"_index":567,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('puls",{"_index":555,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('respr",{"_index":557,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('temp",{"_index":553,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.get('weight",{"_index":549,"title":{},"body":{"injectables/DataExportService.html":{}}}],["vitals.updatedat",{"_index":571,"title":{},"body":{"injectables/DataExportService.html":{}}}],["void",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"components/CommunityAnalysisComponent.html":{},"components/FirstPageComponent.html":{},"components/HomeEnvComponent.html":{},"components/MapComponent.html":{},"components/MyAsideComponent.html":{},"components/MyNavComponent.html":{},"injectables/NavbarService.html":{},"injectables/ParseService.html":{},"injectables/ProcessorsService.html":{},"components/SignInComponent.html":{},"components/SubmissionsComponent.html":{}}}],["want",{"_index":906,"title":{},"body":{"injectables/ProcessorsService.html":{}}}],["water",{"_index":383,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["wateraccess",{"_index":501,"title":{},"body":{"injectables/DataExportService.html":{}}}],["web",{"_index":1236,"title":{},"body":{"index.html":{}}}],["webkit",{"_index":828,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["week",{"_index":376,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["weight",{"_index":548,"title":{},"body":{"injectables/DataExportService.html":{}}}],["what'",{"_index":989,"title":{},"body":{"injectables/QueryCustomService.html":{},"injectables/QueryService.html":{}}}],["width",{"_index":714,"title":{},"body":{"components/FirstPageComponent.html":{},"components/MapComponent.html":{},"components/MyNavComponent.html":{},"components/SubmissionsComponent.html":{}}}],["within",{"_index":1027,"title":{},"body":{"injectables/QueryService.html":{}}}],["word",{"_index":838,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{},"index.html":{}}}],["workbench",{"_index":1306,"title":{},"body":{"index.html":{}}}],["wrap",{"_index":839,"title":{},"body":{"components/MyAsideComponent.html":{},"components/SubmissionsComponent.html":{}}}],["ye",{"_index":367,"title":{},"body":{"components/CommunityAnalysisComponent.html":{}}}],["yearslivedinthecommun",{"_index":483,"title":{},"body":{"injectables/DataExportService.html":{}}}],["yearslivedinthishous",{"_index":485,"title":{},"body":{"injectables/DataExportService.html":{}}}],["ze",{"_index":710,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["zone.j",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n    \n\n    \n        \n-->\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '-->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeEnvComponent', 'selector': 'app-home-env'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MyAsideComponent', 'selector': 'app-my-aside'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommunityAnalysisComponent\n\nCommunityAnalysisComponent\n\nAppModule -->\n\nCommunityAnalysisComponent->AppModule\n\n\n\n\n\nFirstPageComponent\n\nFirstPageComponent\n\nAppModule -->\n\nFirstPageComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHomeEnvComponent\n\nHomeEnvComponent\n\nAppModule -->\n\nHomeEnvComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nMyAsideComponent\n\nMyAsideComponent\n\nAppModule -->\n\nMyAsideComponent->AppModule\n\n\n\n\n\nMyNavComponent\n\nMyNavComponent\n\nAppModule -->\n\nMyNavComponent->AppModule\n\n\n\n\n\nSignInComponent\n\nSignInComponent\n\nAppModule -->\n\nSignInComponent->AppModule\n\n\n\n\n\nSubmissionsComponent\n\nSubmissionsComponent\n\nAppModule -->\n\nSubmissionsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CommunityAnalysisComponent\n                        \n                        \n                            FirstPageComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            HomeEnvComponent\n                        \n                        \n                            MapComponent\n                        \n                        \n                            MyAsideComponent\n                        \n                        \n                            MyNavComponent\n                        \n                        \n                            SignInComponent\n                        \n                        \n                            SubmissionsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ChartsModule } from 'ng2-charts';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AgmCoreModule } from '@agm/core';\n\n\n//Providers\nimport { AuthService } from '../app/providers/auth/auth.service';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MyNavComponent } from './my-nav/my-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, MatCardModule, MatTableModule, MatPaginatorModule, MatSortModule, MatFormFieldModule, MatInputModule} from '@angular/material';\nimport { FirstPageComponent } from './pages/first-page/first-page.component';\nimport { CommunityAnalysisComponent } from './pages/communityAnalysis/communityAnalysis.component';\nimport { SubmissionsComponent } from './pages/submissions/submissions.component';\nimport { SignInComponent } from './pages/sign-in/sign-in.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { MapComponent } from './pages/map/map.component';\nimport { HomeEnvComponent } from './pages/home-env/home-env.component';\nimport { MyAsideComponent } from './my-aside/my-aside.component';\n\n\nconst appRoutes: Routes = [\n  { path: '', component: SignInComponent},\n  { path: 'dash-env', component: HomeEnvComponent},\n  { path: 'env-export',component:FirstPageComponent},\n  { path: 'submissions', component: SubmissionsComponent},\n  { path: 'first-page', component: FirstPageComponent},\n  { path: 'communityAnalysis', component: CommunityAnalysisComponent},\n  { path: 'sign-in', component: SignInComponent},\n  { path: 'home', component: HomeComponent},\n  { path: 'map',component: MapComponent},\n  { path: 'submissions', component:SubmissionsComponent},\n  \n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MyNavComponent,\n    FirstPageComponent,\n    CommunityAnalysisComponent,\n    SubmissionsComponent,\n    SignInComponent,\n    HomeComponent,\n    MapComponent,\n    HomeEnvComponent,\n    MyAsideComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    ChartsModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyBl0jjRObjh2orfjqFc02nZ9uO0AyB06Sg'\n    }),\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule\n  ],\n  providers: [\n    AuthService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/auth/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                parseAppId\n                            \n                            \n                                    Private\n                                parseJavascriptKey\n                            \n                            \n                                    Private\n                                parseServerUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authenticated\n                            \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Public\n                                forgotPassword\n                            \n                            \n                                    Public\n                                parseInitialize\n                            \n                            \n                                    Public\n                                signin\n                            \n                            \n                                    Public\n                                signout\n                            \n                            \n                                    Public\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/providers/auth/auth.service.ts:26\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authenticated()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:160\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        currentUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:147\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     User\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forgotPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forgotPassword(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:136\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parseInitialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parseInitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:164\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            signin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signin(username: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            signout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:130\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signup(username: string, password: string, email: string, organization: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        organization\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parseAppId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parseAppId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.parseAppId\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parseJavascriptKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parseJavascriptKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.parseJavascriptKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parseServerUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parseServerUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.parseServerUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n//import 'rxjs/add/operator/map';\nimport { map } from 'rxjs/operators';\n\n\n// Parse\nimport { Parse } from 'parse';\n\n// Constants\nimport { environment } from '../../../environments/environment.prod';\n\nexport class User {\n  public id: string;\n  public name: string;\n  public email: string;\n  public organization: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private parseAppId: string = environment.parseAppId;\n  private parseServerUrl: string = environment.parseServerUrl;\n  private parseJavascriptKey: string = environment.parseJavascriptKey;\n\n  constructor() { \n    this.parseInitialize();\n    console.log('Initiated Auth');\n  }\n\n  public signin(username: string, password: string): Observable {\n    \n    return new Observable((observer) => {\n      //REFACTOR LATER\n      /*\n      let loader = this.loadCtrl.create({\n\n        content: 'Signing in...'\n      });\n\n      let alerter = this.alertCtrl.create({\n        title: 'Login Error',\n        subTitle: 'Invalid username and/or password',\n        buttons: ['Try Again']\n      });\n\n      loader.present(); */\n      async () => {\n        await Parse.User.logIn(username, password, {\n          success: function (user) {\n            // Do stuff after successful login, like a redirect.\n            console.log('User logged in successful with username: ' + user.get(\"username\"));\n            observer.next(true);\n            observer.complete();\n          },\n          error: function (user, error) {\n            // If the user inputs the email instead of the username\n            //console.log(error);\n            console.log(\"Trying to use email instead of Username\");\n            var userQuery = new Parse.Query(Parse.User);\n\n            userQuery.equalTo('email', username);\n            userQuery.first().then(function (success) {\n              var username = success.toJSON().username; \n              Parse.User.logIn(username, password, {\n                success: function (user) {\n                  // Do stuff after successful login, like a redirect.\n                  //loader.dismiss();\n                  console.log('User logged in successful with email: ' + user.get(\"email\"));\n                  observer.next(true);\n                  observer.complete();\n                },\n                error: function (user, error) {\n                  //loader.dismiss().then(()=>{\n                  //  alerter.present();\n                  //})\n                  //alerter.dismiss();\n                  console.log(error);\n                  observer.error(error);\n                  observer.complete();\n                }\n              });\n            }, function (error) {\n              //loader.dismiss().then(()=>{\n              //  alerter.present();\n              //})\n              //alerter.dismiss();\n              console.log(error);\n              observer.error(error);\n              observer.complete();\n            });\n            //loader.dismiss().then(()=>{\n            //  alerter.present();\n            //})\n            //alerter.dismiss();\n          }\n        });\n      }\n    });\n  }\n\n  public signup(username: string, password: string, email: string, organization: string): Observable {\n    return new Observable((observer) => {\n      var user = new Parse.User();\n      user.set('username', username);\n      user.set('password', password);\n      user.set('email', email);\n      user.set('organization', organization)\n\n      user.signUp(null, {\n        success: (user) => {\n          console.log('User created successful with name: ' + user.get(\"username\") + ' and email: ' + user.get(\"email\"));\n          observer.next(true);\n          observer.complete();\n        },\n        error: (user, error) => {\n          // Show the error message somewhere and let the user try again.\n          // It is likely that the user is trying to sign with a username or email already taken.\n          console.log(\"Error: \" + error.code + \" \" + error.message);\n          observer.error(error);\n          observer.complete();\n        }\n      });\n\n    });\n  }\n\n  public signout(): Observable {\n    return new Observable((observer) => {\n      Parse.User.logOut().then(() => observer.next(true));\n    });\n  }\n\n  public forgotPassword(email:string) {\n    return Parse.User.requestPasswordReset(email, {\n      success: function() {\n          console.log(\"Password reset request was sent successfully\");\n      },\n      error: function(error) {\n          console.log(\"The login failed with error: \" + error.code + \" \" + error.message);\n      }\n  });\n  }\n\n  public currentUser(): User {\n    let u = Parse.User.current();\n    if (u) {\n      var user = new User();\n      user.id = u.id;\n      user.name = u.get('username');\n      user.email = u.get('email');\n      user.organization = u.get('organization');\n      return user;\n    }\n    return null\n  }\n\n  public authenticated(): boolean {\n    return this.currentUser() !== null;\n  }\n\n  public parseInitialize() {\n    //Back4app\n    Parse.initialize(this.parseAppId,this.parseJavascriptKey);\n    \n    //Heroku\n    //Parse.initialize(this.parseAppId);\n    \n    //Server\n    Parse.serverURL = this.parseServerUrl;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommunityAnalysisComponent.html":{"url":"components/CommunityAnalysisComponent.html","title":"component - CommunityAnalysisComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CommunityAnalysisComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/communityAnalysis/communityAnalysis.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-communityAnalysis\n            \n\n            \n                styleUrls\n                ./communityAnalysis.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./communityAnalysis.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arrayOfMatchEnvFiles\n                            \n                            \n                                latrineAccessNo\n                            \n                            \n                                latrineAccessYes\n                            \n                            \n                                listOfAllIDs\n                            \n                            \n                                numberOfIds\n                            \n                            \n                                numberofMatchingIds\n                            \n                            \n                                poorFloorCondition\n                            \n                            \n                                poorRoofCondition\n                            \n                            \n                                trash1aweek\n                            \n                            \n                                trash2aweek\n                            \n                            \n                                trash3omore\n                            \n                            \n                                trashAverage\n                            \n                            \n                                trashPerWeek\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(query: QueryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                    QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrayOfMatchEnvFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        arrayOfMatchEnvFiles:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latrineAccessNo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        latrineAccessNo:     \n\n                    \n                \n                    \n                        \n                            Default value : 0 + 11\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latrineAccessYes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        latrineAccessYes:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listOfAllIDs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        listOfAllIDs:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberOfIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numberOfIds:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberofMatchingIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numberofMatchingIds:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            poorFloorCondition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        poorFloorCondition:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            poorRoofCondition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        poorRoofCondition:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trash1aweek\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trash1aweek:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trash2aweek\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trash2aweek:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trash3omore\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trash3omore:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trashAverage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trashAverage:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trashPerWeek\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trashPerWeek:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/communityAnalysis/communityAnalysis.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { QueryService } from '../../providers/query/query.service';\n\n@Component({\n  selector: 'app-communityAnalysis',\n  templateUrl: './communityAnalysis.component.html',\n  styleUrls: ['./communityAnalysis.component.scss']\n})\nexport class CommunityAnalysisComponent implements OnInit {\n\n  listOfAllIDs = [];\n  arrayOfMatchEnvFiles = [];\n  numberOfIds = 0;\n  numberofMatchingIds;\n\n  latrineAccessYes = 0;\n  latrineAccessNo = 0 + 11;\n\n  poorFloorCondition = 0;\n  poorRoofCondition = 0;\n\n  trashPerWeek = [];\n  trashAverage;\n  trash1aweek = 0;\n  trash2aweek = 0;\n  trash3omore = 0;\n\n  constructor(private query:QueryService) { \n    this.setup();\n  }\n\n  ngOnInit() {\n  }\n\n  setup() {\n    this.query.listAllPatients().then((results)=>{\n      for(let i=0; i{\n        this.arrayOfMatchEnvFiles = results;\n        this.numberofMatchingIds = results.length;\n\n        //Retrieve Latrine Access info from migration\n        for (let i=0; i0) {\n            let trashNumber = this.arrayOfMatchEnvFiles[i].get('timesperweektrashcollected');\n            this.trashPerWeek.push(trashNumber);\n            //total += trashNumber;\n            \n            if (trashNumber == 1){\n              this.trash1aweek +=1;\n            }\n\n            else if (trashNumber == 2){\n              this.trash2aweek +=1;\n            }\n\n            else if (trashNumber > 2){\n              this.trash3omore +=1;\n            }\n\n          }\n\n          \n        }\n        \n        const average = array => array.reduce( ( sum, element ) => sum + element) / array.length;\n    \n        this.trashAverage = average( this.trashPerWeek );\n    \n      })\n\n\n    })\n      \n    \n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Home\n    Dashboard\n  \n\n\n\n  Number of Community IDs Checked: {{ numberOfIds }}\n\n\n\n    Number of Matching Records in Environmental History Form: {{ numberofMatchingIds }}\n\n\n\n\n  \n  \n    Latrine Access\n    \n      Yes\n      No\n    \n  \n  \n    \n      {{latrineAccessYes}}\n      {{latrineAccessNo}}\n    \n  \n\n  \n  \n    Poor Roof and Floor Conditions\n    \n      Bad Roof\n      Dirt Floor\n    \n  \n  \n    \n      {{poorRoofCondition}}\n      {{poorFloorCondition}}\n    \n  \n\n\n\n  \n    \n      Average Trash Per week\n      Trash Once a Week\n      Trash Twice a week\n      Trash Thrice or More a week\n    \n\n  \n  \n    \n      {{trashAverage}}\n      {{trash1aweek}}\n      {{trash2aweek}}\n      {{trash3omore}}\n    \n  \n\n\n\n  \n    UserID\n    Latrine Access\n    Floor Condition\n    Roof Condition\n    Clinic Access\n    Water Access\n    Times/Week Trash Collected\n    \n  \n  \n    {{ user.id }} \n    {{ user.get('latrineAccess') }} \n    {{ user.get('conditionoFloorinyourhouse') }} \n    {{ user.get('conditionoRoofinyourhouse') }} \n    {{ user.get('clinicAccess') }} \n    {{ user.get('waterAccess') }} \n    {{ user.get('timesperweektrashcollected') }} \n  \n\n    \n\n    \n                \n                    ./communityAnalysis.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Home    Dashboard    Number of Community IDs Checked: {{ numberOfIds }}    Number of Matching Records in Environmental History Form: {{ numberofMatchingIds }}        Latrine Access          Yes      No                  {{latrineAccessYes}}      {{latrineAccessNo}}              Poor Roof and Floor Conditions          Bad Roof      Dirt Floor                  {{poorRoofCondition}}      {{poorFloorCondition}}                  Average Trash Per week      Trash Once a Week      Trash Twice a week      Trash Thrice or More a week                  {{trashAverage}}      {{trash1aweek}}      {{trash2aweek}}      {{trash3omore}}            UserID    Latrine Access    Floor Condition    Roof Condition    Clinic Access    Water Access    Times/Week Trash Collected            {{ user.id }}     {{ user.get(\\'latrineAccess\\') }}     {{ user.get(\\'conditionoFloorinyourhouse\\') }}     {{ user.get(\\'conditionoRoofinyourhouse\\') }}     {{ user.get(\\'clinicAccess\\') }}     {{ user.get(\\'waterAccess\\') }}     {{ user.get(\\'timesperweektrashcollected\\') }}   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeEnvComponent', 'selector': 'app-home-env'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MyAsideComponent', 'selector': 'app-my-aside'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CommunityAnalysisComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataExportService.html":{"url":"injectables/DataExportService.html","title":"injectable - DataExportService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/data-export/data-export.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertArrayOfObjectsToCSV\n                            \n                            \n                                    Async\n                                downloadCSV\n                            \n                            \n                                    Async\n                                setup\n                            \n                            \n                                    Private\n                                    Async\n                                setupEvalMedicalQuery\n                            \n                            \n                                    Private\n                                    Async\n                                setupQuery\n                            \n                            \n                                    Private\n                                    Async\n                                setupVitalsQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: QueryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/providers/data-export/data-export.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                    QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            convertArrayOfObjectsToCSV\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        convertArrayOfObjectsToCSV(args)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/data-export/data-export.service.ts:355\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            downloadCSV\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        downloadCSV(args, array_to_export)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/data-export/data-export.service.ts:387\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        array_to_export\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            setup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setup(organization: string, model: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/data-export/data-export.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        organization\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Organization of the User\n\n                                                        \n                                                \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Backend model Trying to be retrieved\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns an array of results based on organization and backend model\nsetup(&quot;Puente&quot;,&#39;EvalMedical&#39;)\n                                        \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    ONE array object results of query\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            setupEvalMedicalQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setupEvalMedicalQuery(demographicObject)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/data-export/data-export.service.ts:239\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        demographicObject\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            setupQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setupQuery(demographicObject)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/data-export/data-export.service.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        demographicObject\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            setupVitalsQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setupVitalsQuery(demographicObject)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/data-export/data-export.service.ts:154\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        demographicObject\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { QueryService } from '../query/query.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataExportService {\n\n  constructor(private query: QueryService) { }\n\n  /**\n    * @example\n    * Returns an array of results based on organization and backend model\n    * setup(\"Puente\",'EvalMedical')\n    *\n    * @param {string} organization  Organization of the User\n    * @param {string} model  Backend model Trying to be retrieved\n    * @returns ONE array object results of query\n  */\n  async setup(organization:string,model:string) {\n    var final_array = []\n    this.query.genericQuery('SurveyData',organization).then((patientResults) => {\n      for (var i = 0; i [\n            final_array.push(results)\n          ])\n        }\n\n        else if (model == 'EnvForm'){\n          this.setupQuery(demographicObject).then(results=>[\n            final_array.push(results)\n          ])\n          //console.log(array)\n          //final_array.push(array)\n          \n        }\n\n        else if (model == 'EvalMedical'){\n          this.setupEvalMedicalQuery(demographicObject).then(results=>[\n            final_array.push(results)\n          ])\n          //console.log(array)\n          //final_array.push(array)\n          \n        }\n      }\n    });\n    return final_array\n  }\n\n  private async setupQuery(demographicObject){\n    var object_to_export = {}\n\n    return await this.query.exactlyOneQuery('HistoryEnvironmentalHealth','client',demographicObject).then((environmentalHealthResults) =>{\n      if (environmentalHealthResults){\n        object_to_export = {\n              firstName: environmentalHealthResults.get('client').get('fname'),\n              lastName: environmentalHealthResults.get('client').get('lname'),\n              dob: environmentalHealthResults.get('client').get('dob'),\n              sex: environmentalHealthResults.get('client').get('sex'),\n              marriageStatus: environmentalHealthResults.get('client').get('marriageStatus'),\n              educationLevel: environmentalHealthResults.get('client').get('educationLevel'),\n              occupation: environmentalHealthResults.get('client').get('occupation'),\n              communityName: environmentalHealthResults.get('client').get('communityname'),\n              city: environmentalHealthResults.get('client').get('city'),\n              province: environmentalHealthResults.get('client').get('province'),\n              insuranceNumber: environmentalHealthResults.get('client').get('insuranceNumber'),\n              insuranceProvider: environmentalHealthResults.get('client').get('insuranceProvider'),\n              clinicProvider: environmentalHealthResults.get('client').get('clinicProvider'),\n              cedulaNumber: environmentalHealthResults.get('client').get('cedulaNumber'),\n              dataCollector: environmentalHealthResults.get('client').get('surveyingUser'),\n              latitude: environmentalHealthResults.get('client').get('latitude'),\n              longitude: environmentalHealthResults.get('client').get('longitude'),\n              ____:\"___\",\n              ___:\"___\",\n              yearsLivedinthecommunity: environmentalHealthResults.get('yearsLivedinthecommunity'),\n              yearsLivedinThisHouse: environmentalHealthResults.get('yearsLivedinThisHouse'),\n              medicalproblemswheredoyougo: environmentalHealthResults.get('medicalproblemswheredoyougo'),\n              dentalproblemswheredoyougo: environmentalHealthResults.get('dentalproblemswheredoyougo'),\n              numberofIndividualsLivingintheHouse: environmentalHealthResults.get('numberofIndividualsLivingintheHouse'),\n              numberofChildrenLivinginHouseUndertheAgeof5: environmentalHealthResults.get('numberofChildrenLivinginHouseUndertheAgeof5'),\n              biggestproblemofcommunity: environmentalHealthResults.get('biggestproblemofcommunity').replace(/,/g, '-'),\n              houseownership: environmentalHealthResults.get('houseownership'),\n              latrineAccess: environmentalHealthResults.get('latrineAccess'),\n              waterAccess: environmentalHealthResults.get('waterAccess'),\n              typeOfWaterDrank: environmentalHealthResults.get('typeofWaterdoyoudrink'),\n              clinicAccess: environmentalHealthResults.get('clinicAccess'),\n              trashPickUpFrequency: environmentalHealthResults.get('timesperweektrashcollected'),\n              trashLocation: environmentalHealthResults.get('wheretrashleftbetweenpickups'),\n              conditionOfFloor: environmentalHealthResults.get('conditionoFloorinyourhouse'),\n              conditionOfRoof: environmentalHealthResults.get('conditionoRoofinyourhouse'),\n              organizationWhoOwnsData: environmentalHealthResults.get('client').get('surveyingOrganization'),\n\n              dateCreatedEnvHlth: environmentalHealthResults.createdAt,\n              dateUpdatedEnvHlth: environmentalHealthResults.updatedAt\n            \n        }\n      }\n      else {\n        object_to_export = {\n          //patient:{\n            firstName: demographicObject.get('fname'),\n            lastName: demographicObject.get('lname'),\n            dob: demographicObject.get('dob'),\n            sex: demographicObject.get('sex'),\n            marriageStatus: demographicObject.get('marriageStatus'),\n            educationLevel: demographicObject.get('educationLevel'),\n            occupation: demographicObject.get('occupation'),\n            communityName: demographicObject.get('communityname'),\n            city: demographicObject.get('city'),\n            province: demographicObject.get('province'),\n            insuranceNumber: demographicObject.get('insuranceNumber'),\n            insuranceProvider: demographicObject.get('insuranceProvider'),\n            clinicProvider: demographicObject.get('clinicProvider'),\n            cedulaNumber: demographicObject.get('cedulaNumber'),\n            dataCollector: demographicObject.get('surveyingUser'),\n            latitude: demographicObject.get('latitude'),\n            longitude: demographicObject.get('longitude'),\n            ____:\"___\",\n            ___:\"___\",\n            yearsLivedinthecommunity: 'Not Collected',\n            yearsLivedinThisHouse: 'Not Collected',\n            medicalproblemswheredoyougo: 'Not Collected',\n            dentalproblemswheredoyougo: 'Not Collected',\n            numberofIndividualsLivingintheHouse:'Not Collected',\n            numberofChildrenLivinginHouseUndertheAgeof5:'Not Collected',\n            biggestproblemofcommunity:'Not Collected',\n            houseownership:'Not Collected',\n            latrineAccess: 'Not Collected',\n            waterAccess: 'Not Collected',\n            typeOfWaterDrank:'Not Collected',\n            clinicAccess: 'Not Collected',\n            trashPickUpFrequency: 'Not Collected',\n            trashLocation: 'Not Collected',\n            conditionOfFloor: 'Not Collected',\n            conditionOfRoof: 'Not Collected',\n            organizationWhoOwnsData: 'Not Collected',\n            \n            dateCreatedEnvHlth: 'Not Collected',\n            dateUpdatedEnvHlth: 'Not Collected'\n              \n        };\n      }\n      return object_to_export\n    })\n    \n  }\n\n  private async setupVitalsQuery(demographicObject){\n    var object_to_export = {}\n\n    return await this.query.exactlyOneQuery('Vitals','client',demographicObject).then((Vitals) =>{\n      if (Vitals){\n        object_to_export = {\n              firstName: demographicObject.get('fname'),\n              lastName: demographicObject.get('lname'),\n              dob: demographicObject.get('dob'),\n              sex: demographicObject.get('sex'),\n              marriageStatus: demographicObject.get('marriageStatus'),\n              educationLevel: demographicObject.get('educationLevel'),\n              occupation: demographicObject.get('occupation'),\n              communityName: demographicObject.get('communityname'),\n              city: demographicObject.get('city'),\n              province: demographicObject.get('province'),\n              insuranceNumber: demographicObject.get('insuranceNumber'),\n              insuranceProvider: demographicObject.get('insuranceProvider'),\n              clinicProvider: demographicObject.get('clinicProvider'),\n              cedulaNumber: demographicObject.get('cedulaNumber'),\n              dataCollector: demographicObject.get('surveyingUser'),\n              latitude: demographicObject.get('latitude'),\n              longitude: demographicObject.get('longitude'),\n              ____:\"___\",\n              ___:\"___\",\n              height: Vitals.get('height'),\n              weight: Vitals.get('weight'),\n              bmi: Vitals.get('bmi'),\n              temp: Vitals.get('temp'),\n              pulse: Vitals.get('pulse'),\n              respRate: Vitals.get('respRate'),\n              hemoglobinLevels: Vitals.get('hemoglobinLevels'),\n              bloodPressure: Vitals.get('bloodPressure'),\n              bloodSugar: Vitals.get('bloodSugar'),\n              bloodOxygen: Vitals.get('bloodOxygen'),\n              painLevels: Vitals.get('painLevels'),\n\n              dateCreatedVitals: Vitals.createdAt,\n              dateUpdatedVitals: Vitals.updatedAt\n        }\n      }\n      else {\n        object_to_export = {\n          //patient:{\n            firstName: demographicObject.get('fname'),\n            lastName: demographicObject.get('lname'),\n            dob: demographicObject.get('dob'),\n            sex: demographicObject.get('sex'),\n            marriageStatus: demographicObject.get('marriageStatus'),\n            educationLevel: demographicObject.get('educationLevel'),\n            occupation: demographicObject.get('occupation'),\n            communityName: demographicObject.get('communityname'),\n            city: demographicObject.get('city'),\n            province: demographicObject.get('province'),\n            insuranceNumber: demographicObject.get('insuranceNumber'),\n            insuranceProvider: demographicObject.get('insuranceProvider'),\n            clinicProvider: demographicObject.get('clinicProvider'),\n            cedulaNumber: demographicObject.get('cedulaNumber'),\n            dataCollector: demographicObject.get('surveyingUser'),\n            latitude: demographicObject.get('latitude'),\n            longitude: demographicObject.get('longitude'),\n            ____:\"___\",\n            ___:\"___\",\n            height: 'Not Collected',\n            weight: 'Not Collected',\n            bmi: 'Not Collected',\n            temp: 'Not Collected',\n            pulse: 'Not Collected',\n            respRate: 'Not Collected',\n            hemoglobinLevels: 'Not Collected',\n            bloodPressure: 'Not Collected',\n            bloodSugar: 'Not Collected',\n            bloodOxygen: 'Not Collected',\n            painLevels: 'Not Collected',\n\n            dateCreatedVitals: 'Not Collected',\n            dateUpdatedVitals: 'Not Collected'\n              \n        };\n      }\n      return object_to_export\n    })\n    \n  }\n\n  private async setupEvalMedicalQuery(demographicObject){\n    var object_to_export = {}\n\n    /*\n    AssessmentandEvaluation: null,\n    planOfAction: null,\n    notes: null, */\n\n    return await this.query.exactlyOneQuery('EvaluationMedical','client',demographicObject).then((EvalMedical) =>{\n      if (EvalMedical){\n        object_to_export = {\n          firstName: demographicObject.get('fname'),\n          lastName: demographicObject.get('lname'),\n          dob: demographicObject.get('dob'),\n          sex: demographicObject.get('sex'),\n          marriageStatus: demographicObject.get('marriageStatus'),\n          educationLevel: demographicObject.get('educationLevel'),\n          occupation: demographicObject.get('occupation'),\n          communityName: demographicObject.get('communityname'),\n          city: demographicObject.get('city'),\n          province: demographicObject.get('province'),\n          insuranceNumber: demographicObject.get('insuranceNumber'),\n          insuranceProvider: demographicObject.get('insuranceProvider'),\n          clinicProvider: demographicObject.get('clinicProvider'),\n          cedulaNumber: demographicObject.get('cedulaNumber'),\n          dataCollector: demographicObject.get('surveyingUser'),\n          latitude: demographicObject.get('latitude'),\n          longitude: demographicObject.get('longitude'),\n          ____:\"___\",\n          ___:\"___\",\n          chronic_condition_hypertension: EvalMedical.get('chronic_condition_hypertension'),\n          chronic_condition_diabetes: EvalMedical.get('chronic_condition_diabetes'),\n          chronic_condition_other: EvalMedical.get('chronic_condition_other'),\n\n          seen_doctor: EvalMedical.get('seen_doctor'),\n\n          received_treatment_notes: EvalMedical.get('received_treatment_notes'),//what did the doctor say\n          received_treatment_description: EvalMedical.get('received_treatment_description'), //status of health\n\n          part_of_body: EvalMedical.get('part_of_body'),\n          part_of_body_description: EvalMedical.get('part_of_body_description'),\n          duration: EvalMedical.get('duration'),\n          trauma_induced: EvalMedical.get('trauma_induced'),\n          condition_progression: EvalMedical.get('condition_progression'),\n          pain: EvalMedical.get('pain'),\n\n          //Assessment Section\n          notes: EvalMedical.get('notes'),\n          AssessmentandEvaluation: EvalMedical.get('AssessmentandEvaluation'), //general_health_recommendation\n          AssessmentandEvaluation_Surgical: EvalMedical.get('AssessmentandEvaluation_Surgical'),\n          AssessmentandEvaluation_Surgical_Guess: EvalMedical.get('AssessmentandEvaluation_Surgical_Guess'),\n          planOfAction: EvalMedical.get('planOfAction'),\n          immediate_follow_up:EvalMedical.get('immediate_follow_up'),\n\n          needsAssessmentandEvaluation:EvalMedical.get('needsAssessmentandEvaluation'),\n\n          dateCreatedEvalMedical: EvalMedical.createdAt,\n          dateUpdatedEvalMedical: EvalMedical.updatedAt\n          \n        }\n      }\n      else {\n        object_to_export = {\n          firstName: demographicObject.get('fname'),\n          lastName: demographicObject.get('lname'),\n          dob: demographicObject.get('dob'),\n          sex: demographicObject.get('sex'),\n          marriageStatus: demographicObject.get('marriageStatus'),\n          educationLevel: demographicObject.get('educationLevel'),\n          occupation: demographicObject.get('occupation'),\n          communityName: demographicObject.get('communityname'),\n          city: demographicObject.get('city'),\n          province: demographicObject.get('province'),\n          insuranceNumber: demographicObject.get('insuranceNumber'),\n          insuranceProvider: demographicObject.get('insuranceProvider'),\n          clinicProvider: demographicObject.get('clinicProvider'),\n          cedulaNumber: demographicObject.get('cedulaNumber'),\n          dataCollector: demographicObject.get('surveyingUser'),\n          latitude: demographicObject.get('latitude'),\n          longitude: demographicObject.get('longitude'),\n          ____:\"___\",\n          ___:\"___\",\n          chronic_condition_hypertension:\"Not Collected\",\n          chronic_condition_diabetes:\"Not Collected\",\n          chronic_condition_other:\"Not Collected\",\n\n          seen_doctor:\"Not Collected\",\n\n          received_treatment_notes:\"Not Collected\",//what did the doctor say\n          received_treatment_description:\"Not Collected\", //status of health\n\n          part_of_body:\"Not Collected\",\n          part_of_body_description:\"Not Collected\",\n          duration:\"Not Collected\",\n          trauma_induced:\"Not Collected\",\n          condition_progression:\"Not Collected\",\n          pain:\"Not Collected\",\n\n          //Assessment Section\n          notes:null,\n          AssessmentandEvaluation: \"Not Collected\", //general_health_recommendation\n          AssessmentandEvaluation_Surgical: \"Not Collected\",\n          AssessmentandEvaluation_Surgical_Guess:\"Not Collected\",\n          planOfAction:\"Not Collected\", \n          immediate_follow_up:\"Not Collected\",\n          needsAssessmentandEvaluation:\"Not Collected\",\n\n          dateCreatedEvalMedical: \"Not Collected\",\n          dateUpdatedEvalMedical: \"Not Collected\"\n        };\n      }\n      return object_to_export\n    })\n    \n  }\n  \n  private convertArrayOfObjectsToCSV(args) {  \n    var result, ctr, keys, columnDelimiter, lineDelimiter, data;\n\n    data = args.data || null;\n    if (data == null || !data.length) {\n        return null;\n    }\n\n    columnDelimiter = args.columnDelimiter || ',';\n    //columnDelimiter = args.columnDelimiter || '\\t';\n    lineDelimiter = args.lineDelimiter || '\\n';\n\n    keys = Object.keys(data[0]);\n\n    result = '';\n    result += keys.join(columnDelimiter);\n    result += lineDelimiter;\n\n    data.forEach(function(item) {\n        ctr = 0;\n        keys.forEach(function(key) {\n            if (ctr > 0) result += columnDelimiter;\n\n            result += item[key];\n            ctr++;\n        });\n        result += lineDelimiter;\n    });\n\n    return result;\n  }\n\n  async downloadCSV(args,array_to_export) {  \n    var data, filename, link;\n    var csv = await this.convertArrayOfObjectsToCSV({\n        data: await array_to_export\n    });\n    if (csv == null) return;\n\n    filename = args.filename || 'export.csv';\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n        csv = 'data:text/csv;charset=utf-8,' + csv;\n    }\n    data = encodeURI(csv);\n\n    link = document.createElement('a');\n    link.setAttribute('href', data);\n    link.setAttribute('download', filename);\n    link.click();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FirstPageComponent.html":{"url":"components/FirstPageComponent.html","title":"component - FirstPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FirstPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/first-page/first-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-first-page\n            \n\n            \n                styleUrls\n                ./first-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./first-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dictsToExport\n                            \n                            \n                                    Public\n                                forms\n                            \n                            \n                                organization\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                testDownload\n                            \n                            \n                                    Async\n                                testSetup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(query: QueryService, auth: AuthService, nav: NavbarService, data: DataExportService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/first-page/first-page.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                    QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    NavbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    DataExportService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/first-page/first-page.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            testDownload\n                            \n                            \n                        \n                    \n                \n                \n                    \ntestDownload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/first-page/first-page.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            testSetup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        testSetup(form: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/first-page/first-page.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns an array of objects of the desired backend\ntestSetup(&#39;EvalMedical&#39;)\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    array of objects\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dictsToExport\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dictsToExport:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/first-page/first-page.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        forms:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['EvalMedical','EnvForm','Vitals']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/first-page/first-page.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organization\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organization:     \n\n                    \n                \n                    \n                        \n                            Default value : this.auth.currentUser().organization\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/first-page/first-page.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from '../../providers/auth/auth.service';\nimport { QueryService} from '../../providers/query/query.service';\nimport { NavbarService } from '../../providers/navbar/navbar.service';\nimport { DataExportService } from '../../providers/data-export/data-export.service';\nimport { async } from 'q';\n\n@Component({\n  selector: 'app-first-page',\n  templateUrl: './first-page.component.html',\n  styleUrls: ['./first-page.component.scss']\n})\nexport class FirstPageComponent implements OnInit {\n  dictsToExport = []\n\n  public forms = ['EvalMedical','EnvForm','Vitals'];\n  organization = this.auth.currentUser().organization\n\n  constructor(private query:QueryService, \n    private auth:AuthService,\n    private nav:NavbarService,\n    private data:DataExportService) { \n    this.nav.show();\n  }\n\n  async ngOnInit() {\n    await this.auth.authenticated()\n    await this.testSetup('EvalMedical');\n  }\n\n  /**\n    * @example\n    * Returns an array of objects of the desired backend\n    * testSetup('EvalMedical')\n    *\n    * @param {string} Backend Model  \n    * @returns array of objects\n  */\n  async testSetup(form:string){\n    await this.data.setup(this.organization,form).then((results)=>{\n    //this.data.setup(this.organization,'EvalMedical').then((results)=>{\n    //this.data.setup(this.organization,'EnvForm').then((results)=>{\n    //this.data.setup(this.organization,'Vitals').then((results)=>{\n      this.dictsToExport = results\n  })\n   \n    \n  }\n\n  testDownload(){\n    console.log(this.dictsToExport)\n    this.data.downloadCSV({ filename: \"puente_export.csv\" },this.dictsToExport)\n  }\n}\n\n    \n\n    \n        \n  \n    \n    Patient First Name\n    Patient Last Name\n  \n  \n  \n    \n      All ze patient Info\n    \n  \n  \n\n   \n    \n\n    \n        \n          \n            Home\n            Dashboard\n          \n        \n        \n\n        Tables: \n        \n            \n                {{form}}\n            \n        \n\n        \n          Export!\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./first-page.component.scss\n                \n                .example-card {\n    max-width: 400px;\n  }\n  \n  .example-header-image {\n    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n    background-size: cover;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Patient First Name    Patient Last Name                All ze patient Info                                                 Home            Dashboard                                  Tables:                                     {{form}}                                      Export!                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeEnvComponent', 'selector': 'app-home-env'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MyAsideComponent', 'selector': 'app-my-aside'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FirstPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeEnvComponent.html":{"url":"components/HomeEnvComponent.html","title":"component - HomeEnvComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeEnvComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home-env/home-env.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-env\n            \n\n            \n                styleUrls\n                ./home-env.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home-env.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(nav: NavbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home-env/home-env.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    NavbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/home-env/home-env.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { NavbarService} from '../../providers/navbar/navbar.service';\n\n@Component({\n  selector: 'app-home-env',\n  templateUrl: './home-env.component.html',\n  styleUrls: ['./home-env.component.scss']\n})\nexport class HomeEnvComponent implements OnInit {\n\n  constructor(private nav:NavbarService) { }\n\n  ngOnInit() {\n    this.nav.show();\n  }\n\n}\n\n    \n\n    \n        \n     \n      \n       \n      \n  \n      \n        \n          \n            Home\n            Environmental Data\n            Tables and Charts\n          \n        \n  \n        \n          \n            \n              Dashboard\n            \n          \n          \n            \n              \n                March 8, 2017 - January 6, 2019\n              \n            \n          \n        \n  \n        \n        \n          \n              \n                Residents\n                {{dashboardData.number_of_residents}} collected\n                \n                  \n                    \n                      Male\n                      {{dashboardData.number_of_residents_male}}\n                    \n                  \n                  \n                    \n                      Female\n                      {{dashboardData.number_of_residents_female}}\n                    \n                  \n                \n              \n          \n          \n            \n              Ages\n              {{dashboardData.age_average}}yrs (Average)\n              \n                \n                  \n                    Age ~5\n                    {{dashboardData.age_under5}}\n                  \n                \n                \n                  \n                    ~18\n                    {{dashboardData.age_under18}}\n                  \n                \n                \n                  \n                    ~40\n                    {{dashboardData.age_under40}}\n                  \n                \n              \n            \n          \n          \n            \n              Occupation\n              {{dashboardData.occupation_highest_name}}: {{dashboardData.occupation_highest}} &uarr;\n              \n                \n                  \n                    Job\n                    30%\n                  \n                \n                \n                  \n                    Job\n                    30%\n                  \n                \n                \n                  \n                    Job\n                    30%\n                  \n                \n              \n            \n          \n          \n              \n                Surveyor\n                Renely: 60% &uarr;\n                \n                  \n                    \n                      Rodrigo\n                      20%\n                    \n                  \n                  \n                    \n                      Rose\n                      10%\n                    \n                  \n                  \n                    \n                      Josh\n                      10%\n                    \n                  \n                \n              \n          \n        \n        \n        \n        \n        \n          \n            \n            \n          \n          \n            \n          \n        \n      \n  \n    \n\n    \n\n    \n                \n                    ./home-env.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              Home            Environmental Data            Tables and Charts                                                                Dashboard                                                                          March 8, 2017 - January 6, 2019                                                                                                      Residents                {{dashboardData.number_of_residents}} collected                                                                            Male                      {{dashboardData.number_of_residents_male}}                                                                                                  Female                      {{dashboardData.number_of_residents_female}}                                                                                                                  Ages              {{dashboardData.age_average}}yrs (Average)                                                                    Age ~5                    {{dashboardData.age_under5}}                                                                                        ~18                    {{dashboardData.age_under18}}                                                                                        ~40                    {{dashboardData.age_under40}}                                                                                                          Occupation              {{dashboardData.occupation_highest_name}}: {{dashboardData.occupation_highest}} ↑                                                                    Job                    30%                                                                                        Job                    30%                                                                                        Job                    30%                                                                                                              Surveyor                Renely: 60% ↑                                                                            Rodrigo                      20%                                                                                                  Rose                      10%                                                                                                  Josh                      10%                                                                                                                                                                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeEnvComponent', 'selector': 'app-home-env'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MyAsideComponent', 'selector': 'app-my-aside'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeEnvComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/map/map.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map\n            \n\n            \n                styleUrls\n                ./map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lat\n                            \n                            \n                                lng\n                            \n                            \n                                markers\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create_all_markers\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(query: QueryCustomService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/map/map.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                    QueryCustomService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_all_markers\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate_all_markers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/map/map.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/map/map.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lat:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 18.9130926\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/map/map.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lng:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : -70.7095201\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/map/map.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markers:     marker[]\n\n                    \n                \n                    \n                        \n                            Type :     marker[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/map/map.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'My first AGM project'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/map/map.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { QueryCustomService } from '../../providers/query-custom/query-custom.service'\n\ndeclare let L;\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\n\n\nexport class MapComponent implements OnInit {\n\n  title: string = 'My first AGM project';\n  lat: number = 18.9130926;\n  lng: number = -70.7095201;\n\n  markers: marker[] = []\n\n  constructor(private query:QueryCustomService) { }\n\n  ngOnInit() {\n    this.create_all_markers()\n    \n  }\n\n  create_all_markers(){\n    this.query.retrieveAll_patientid_info_by_organization('Puente').then((results)=>{\n      for(let i=0;i\n    \n\n    \n        \n  \n    \n        \n          \n            Map Tools\n          \n          \n            Assets\n            Community Member\n          \n        \n    \n    \n      \n        \n          Home\n          Map\n        \n      \n\n      \n      \n      \n        \n\n        \n            \n          \n            InfoWindow content\n          \n          \n        \n\n      \n    \n    \n      \n        \n          \n            F.Name\n            L.Name\n            S.User\n            Time\n          \n        \n        \n          \n            A\n            B\n            C\n            D\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./map.component.scss\n                \n                @import '../../../theme.scss';\n\nmain{\n    // padding: 1em 2em 1em 1em;\n    padding: 1em 2em 1em 1em;\n    a{\n        color: $brand-primary;\n    }\n    padding-right: 5px;\n}\n\n#map{\n    height: 1000px;\n    width: 100%;\n    padding-right: 0px;\n}\n\n.submissions{\n    //padding: 1em 2em 1em 1em;\n    padding-left:0px;\n    padding-right: 0px;\n}\n\nagm-map {\n    height: 768px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Map Tools                                Assets            Community Member                                                  Home          Map                                                                                  InfoWindow content                                                                              F.Name            L.Name            S.User            Time                                                A            B            C            D                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeEnvComponent', 'selector': 'app-home-env'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MyAsideComponent', 'selector': 'app-my-aside'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyAsideComponent.html":{"url":"components/MyAsideComponent.html","title":"component - MyAsideComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MyAsideComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/my-aside/my-aside.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-my-aside\n            \n\n            \n                styleUrls\n                ./my-aside.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./my-aside.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/my-aside/my-aside.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/my-aside/my-aside.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-aside',\n  templateUrl: './my-aside.component.html',\n  styleUrls: ['./my-aside.component.scss']\n})\nexport class MyAsideComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        General\n      \n      \n        Dashboard\n        Submissions\n      \n      \n        Environmental\n      \n      \n        Tables and Charts\n        Data Export\n      \n      \n        Health\n      \n      \n        Medical\n      \n    \n  \n    \n\n    \n                \n                    ./my-aside.component.scss\n                \n                // navigation left area\n@import \"../../theme.scss\";\n\np{\n  color: $brand-primary;\n}\n\n.row{\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display:         flex;\n}\n.heading,.title{\n  text-align: center;\n  justify-content: center;\n  word-wrap: break-word;\n}\n\n.justify{\n  justify-content: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  General                    Dashboard        Submissions                    Environmental                    Tables and Charts        Data Export                    Health                    Medical            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeEnvComponent', 'selector': 'app-home-env'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MyAsideComponent', 'selector': 'app-my-aside'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyAsideComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyNavComponent.html":{"url":"components/MyNavComponent.html","title":"component - MyNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MyNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/my-nav/my-nav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                my-nav\n            \n\n            \n                styleUrls\n                ./my-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./my-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                isHandset\n                            \n                            \n                                    Public\n                                nav\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, nav: NavbarService, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/my-nav/my-nav.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    NavbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/my-nav/my-nav.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/my-nav/my-nav.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isHandset:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.breakpointObserver.observe(Breakpoints.Handset)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/my-nav/my-nav.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nav:     NavbarService\n\n                    \n                \n                    \n                        \n                            Type :     NavbarService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/my-nav/my-nav.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/my-nav/my-nav.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../providers/auth/auth.service';\nimport { NavbarService } from '../providers/navbar/navbar.service';\nimport { async } from '@angular/core/testing';\n\n\n@Component({\n  selector: 'my-nav',\n  templateUrl: './my-nav.component.html',\n  styleUrls: ['./my-nav.component.scss']\n})\nexport class MyNavComponent implements OnInit {\n  isHandset: Observable = this.breakpointObserver.observe(Breakpoints.Handset);\n\n  username = ''\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    public nav:NavbarService,\n    public auth:AuthService) {\n      //if (this.auth.currentUser().name !=null) {\n      //  this.username = this.auth.currentUser().name\n      //};\n    }\n        \n    ngOnInit() {\n      //this.auth.authenticated()\n    }\n  }\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n          \n        \n        Assess\n        Explore Map\n        \n        \n          \n          \n          \n        -->\n\n      \n\n\n      \n        Home\n        Explore Map\n                      \n          \n            \n          \n          6\n          \n        \n                        \n            \n              \n            \n            \n          \n        \n                        \n              \n                \n                  \n                \n                Profile\n              \n              \n              \n                \n                  \n                \n                Logout\n              \n          \n        \n      \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./my-nav.component.scss\n                \n                @import '../../theme.scss';\n\na{\n  color: $brand-primary\n}\n/*\n.resize {\n  max-width:  100%;\n  max-height: 100%;\n}*/\n\n.center {\n  margin: auto;\n  padding: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      Assess        Explore Map                                                      -->                    Home        Explore Map                                                                6                                                                                                                                                                                                                      Profile                                                                                                            Logout                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeEnvComponent', 'selector': 'app-home-env'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MyAsideComponent', 'selector': 'app-my-aside'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavbarService.html":{"url":"injectables/NavbarService.html","title":"injectable - NavbarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NavbarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/navbar/navbar.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/providers/navbar/navbar.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \nhide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/navbar/navbar.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \nshow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/navbar/navbar.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/navbar/navbar.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/navbar/navbar.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavbarService {\n\n  visible: boolean;\n\n  constructor() { this.visible = false; }\n\n  hide() { this.visible = false; }\n\n  show() { this.visible = true; }\n\n  toggle() { this.visible = !this.visible; }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseService.html":{"url":"injectables/ParseService.html","title":"injectable - ParseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/parse/parse.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                parseAppId\n                            \n                            \n                                    Private\n                                parseJavascriptKey\n                            \n                            \n                                    Private\n                                parseServerUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                parseEnvironment\n                            \n                            \n                                    Public\n                                parseInitialize\n                            \n                            \n                                runCloudFunction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/providers/parse/parse.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parseEnvironment\n                            \n                            \n                        \n                    \n                \n                \n                    \nparseEnvironment()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/parse/parse.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Example :\n                                        \n                                            Returns a Parse Environment\nparseEnvironment()\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    a Parse Environment\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parseInitialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parseInitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/parse/parse.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Example :\n                                        \n                                            Authorize authentication into Parse-Server Backend\nparseInitialize()\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            runCloudFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \nrunCloudFunction(functionName: string, functionRequest: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/parse/parse.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        functionName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Name of Cloud Function\n\n                                                        \n                                                \n                                                \n                                                        functionRequest\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Paramers for Cloud Function\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Creates front-end function to access Cloud Function\nrunCloudFunction()\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Cloud Function\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parseAppId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parseAppId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.parseAppId\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/parse/parse.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parseJavascriptKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parseJavascriptKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.parseJavascriptKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/parse/parse.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parseServerUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parseServerUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.parseServerUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/parse/parse.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment.prod'\n\nimport { Parse } from 'parse';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParseService {\n  private parseAppId: string = environment.parseAppId;\n  private parseServerUrl: string = environment.parseServerUrl;\n  private parseJavascriptKey: string = environment.parseJavascriptKey;\n\n  constructor() { \n    this.parseInitialize();\n    console.log('Initiated Parse');\n  }\n\n  /**\n    * @example\n    * Returns a Parse Environment\n    * parseEnvironment()\n    *\n    * @returns a Parse Environment\n  */\n  parseEnvironment() {\n    return Parse;\n  }\n\n  /**\n    * @example\n    * Authorize authentication into Parse-Server Backend\n    * parseInitialize()\n    *\n    * @returns\n  */\n  public parseInitialize() {\n    //Back4app\n    Parse.initialize(this.parseAppId,this.parseJavascriptKey);\n    \n    //Server\n    Parse.serverURL = this.parseServerUrl;\n  }\n\n  /**\n    * @example\n    * Creates front-end function to access Cloud Function\n    * runCloudFunction()\n    *\n    * @param {string} functionName  Name of Cloud Function\n    * @param {string} functionRequest  Paramers for Cloud Function\n    * @returns Cloud Function\n  */\n  runCloudFunction(functionName:string, functionRequest:any){\n    return Parse.Cloud.run(functionName,functionRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessorsService.html":{"url":"injectables/ProcessorsService.html","title":"injectable - ProcessorsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProcessorsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/processors/processors.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                count_based_on_object_keys\n                            \n                            \n                                    Public\n                                object_to_array_of_objects\n                            \n                            \n                                    Public\n                                sortKeysBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/providers/processors/processors.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            count_based_on_object_keys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        count_based_on_object_keys(objects, keys_of_objects: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/processors/processors.service.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        objects\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                List of Objects with Keys\n\n                                                        \n                                                \n                                                \n                                                        keys_of_objects\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Key of object we want counted\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns an object of key-value pairs\ncount_based_on_object_keys(results,&#39;occupation&#39;)\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    ONE new object with counts as values for the keys\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            object_to_array_of_objects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        object_to_array_of_objects(obj)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/processors/processors.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns an array of a given objects own enumerable property [key, value] pairs, in the same order as that provided\nobject_to_array_of_objects(obj)\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Array of keys\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sortKeysBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sortKeysBy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/processors/processors.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Example :\n                                        \n                                            Like _.sortBy(), but on keys instead of values, returning an object, not an array. Defaults to alphanumeric sort.\n(Simply adds the mixin to the underscore library)\nsortKeysBy()\n-&gt;\n_.sortKeysBy(object) //this function is now usable\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    Object\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { _ } from 'underscore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProcessorsService {\n\n  constructor() { }\n  \n  /**\n    * @example\n    * Like _.sortBy(), but on keys instead of values, returning an object, not an array. Defaults to alphanumeric sort.\n    * (Simply adds the mixin to the underscore library)\n    * sortKeysBy()\n    * ->\n    * _.sortKeysBy(object) //this function is now usable\n    *\n    * @returns Object\n  */\n  public sortKeysBy(){\n    _.mixin({\n      'sortKeysBy': function (obj, comparator) {\n          var keys = _.sortBy(_.keys(obj), function (key) {\n              return comparator ? comparator(obj[key], key) : key;\n          });\n  \n          return _.object(keys, _.map(keys, function (key) {\n              return obj[key];\n          }));\n      }\n    });\n  }\n\n  /**\n    * @example\n    * Returns an array of a given objects own enumerable property [key, value] pairs, in the same order as that provided\n    * object_to_array_of_objects(obj)\n    *\n    * @param {any} objects  List of Objects with Keys\n    * @returns Array of keys\n  */  \n  public object_to_array_of_objects(obj){\n    return Object.entries(obj)\n  }\n\n  /**\n    * @example\n    * Returns an object of key-value pairs\n    * count_based_on_object_keys(results,'occupation')\n    *\n    * @param {any} objects  List of Objects with Keys\n    * @param {string} keys_of_objects  Key of object we want counted\n    * @returns ONE new object with counts as values for the keys\n  */\n  public count_based_on_object_keys(objects,keys_of_objects:string){\n    return _.countBy(objects, function(person) { return person.get(keys_of_objects)});\n  }\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryCustomService.html":{"url":"injectables/QueryCustomService.html","title":"injectable - QueryCustomService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueryCustomService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/query-custom/query-custom.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                count_sex_education_by_organization\n                            \n                            \n                                    Public\n                                retrieveAll_patientid_info_by_organization\n                            \n                            \n                                    Public\n                                retrieveAll_patientid_info_by_user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parse: ParseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/providers/query-custom/query-custom.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parse\n                                                  \n                                                        \n                                                                    ParseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            count_sex_education_by_organization\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        count_sex_education_by_organization(organization: string, educationLevelParam: string, sexParam: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query-custom/query-custom.service.ts:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        organization\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Name of User's organization\n\n                                                        \n                                                \n                                                \n                                                        educationLevelParam\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Options of Education level\n\n                                                        \n                                                \n                                                \n                                                        sexParam\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Options of Sex\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns a count of Patients Based on User Organization \ncount_sex_education_by_organization(&#39;puente&#39;,&#39;lessThanPrimary&#39;,&#39;Male&#39;)\n                                        \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    count of objects based\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            retrieveAll_patientid_info_by_organization\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        retrieveAll_patientid_info_by_organization(organization: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query-custom/query-custom.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        organization\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Organization\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns a list of Patients Based on Organization \nretrieveAll_patientid_info_by_organization(&#39;puente&#39;)\n                                        \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    list of objects based on patientModelClass\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            retrieveAll_patientid_info_by_user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        retrieveAll_patientid_info_by_user(username: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query-custom/query-custom.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Username of user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns a list of Patients Based on Username \nretrieveAll_patientid_info_by_user(&#39;puente&#39;)\n                                        \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    list of objects based on patientModelClass\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ParseService } from '../parse/parse.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueryCustomService {\n\n  constructor(private parse:ParseService) { \n    this.parse.parseInitialize();\n  }\n\n  /**\n    * @example\n    * Returns a list of Patients Based on Username \n    * retrieveAll_patientid_info_by_user('puente')\n    *\n    * @param {string} username  Username of user\n    * @returns list of objects based on patientModelClass\n  */\n  public retrieveAll_patientid_info_by_user(username: string): Promise {\n    //This is Retrieving Results from Parse Server\n    let Parse = this.parse.parseEnvironment();\n\n    //Returns the resolve (the query) and if there's an error, rejects\n    //Returns array of objects\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const PatientIDModel = Parse.Object.extend('SurveyData');\n\n        //Queries the SurveyData class from Parse Server\n        let query = new Parse.Query(PatientIDModel);\n\n        //You can limit the number of results by setting \"limit\"\n        query.limit(2000);\n        \n        query.notEqualTo(\"surveyingOrganization\", \"test\");\n        \n        //Limiting Results based on a class\n        query.equalTo(\"surveyingUser\",username);\n\n        //Below searches what's in the surveyPoints array\n        query.find().then((surveyPoints) => {\n          resolve(surveyPoints);\n        }, (error) => {\n          reject(error);\n        });\n      }, 500);\n    });\n  }\n\n  /**\n    * @example\n    * Returns a list of Patients Based on Organization \n    * retrieveAll_patientid_info_by_organization('puente')\n    *\n    * @param {string} organization  Organization\n    * @returns list of objects based on patientModelClass\n  */\n  public retrieveAll_patientid_info_by_organization(organization: string): Promise {\n    //This is Retrieving Results from Parse Server\n    let Parse = this.parse.parseEnvironment();\n\n    //Returns the resolve (the query) and if there's an error, rejects\n    //Returns array of objects\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const PatientIDModel = Parse.Object.extend('SurveyData');\n\n        //Queries the SurveyData class from Parse Server\n        let query = new Parse.Query(PatientIDModel);\n\n        //You can limit the number of results by setting \"limit\"\n        query.limit(2000);\n        \n        //query.notEqualTo(\"surveyingOrganization\", \"test\");\n        \n        //Limiting Results based on a class\n        query.equalTo(\"surveyingOrganization\",organization);\n\n        //Below searches what's in the surveyPoints array\n        query.find().then((surveyPoints) => {\n          resolve(surveyPoints);\n        }, (error) => {\n          reject(error);\n        });\n      }, 1000);\n    });\n  }\n\n  /**\n    * @example\n    * Returns a count of Patients Based on User Organization \n    * count_sex_education_by_organization('puente','lessThanPrimary','Male')\n    *\n    * @param {string} organization  Name of User's organization\n    * @param {string} educationLevelParam  Options of Education level\n    * @param {string} sexParam  Options of Sex\n    * @returns count of objects based\n  */\n  async count_sex_education_by_organization(organization:string,educationLevelParam:string,sexParam:string): Promise {\n  //This is Retrieving Results from Parse Server\n  let Parse = this.parse.parseEnvironment();\n\n  //Returns the resolve (the query) and if there's an error, rejects\n  //Returns array of objects\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      //Creates local object based on \"SurveyData\" Object in Parse-Server\n      const Model = Parse.Object.extend('SurveyData');\n\n      //Queries the SurveyData class from Parse Server\n      let query = new Parse.Query(Model);\n\n      //You can limit the number of results by setting \"limit\"\n      //query.limit(2000);\n\n      //Limiting Results based on a class\n      query.equalTo('educationLevel',educationLevelParam);\n      query.equalTo('sex',sexParam);\n      //query.equalTo('surveyingUser',username);\n      query.equalTo('surveyingOrganization',organization);\n\n      query.descending();\n      \n      //query.notEqualTo(\"surveyingOrganization\", \"test\");\n      \n      //Limiting Results based on a class\n      //query.equalTo(parseColumn);\n\n      //I'm a hack\n      //query.equalTo('surveyingUser','candiany')\n\n      //Below searches what's in the surveyPoints array\n      query.count().then((surveyPoints) => {\n        resolve(surveyPoints);\n      }, (error) => {\n        reject(error);\n      });\n    }, 500);\n  });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryService.html":{"url":"injectables/QueryService.html","title":"injectable - QueryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/query/query.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                containedQuery\n                            \n                            \n                                    Async\n                                countQuery\n                            \n                            \n                                    Public\n                                exactlyOneQuery\n                            \n                            \n                                    Public\n                                genericQuery\n                            \n                            \n                                hello\n                            \n                            \n                                listAllPatients\n                            \n                            \n                                listPatientsByOrganization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parse: ParseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/providers/query/query.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parse\n                                                  \n                                                        \n                                                                    ParseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            containedQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        containedQuery(limit: number, parseObject: string, parseColumn: string, parseParamValuesArray: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query/query.service.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        limit\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                1000\n                                                        \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        parseObject\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                Name of Cloud Class\n\n                                                        \n                                                \n                                                \n                                                        parseColumn\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                Name of Cloud Class Column \n\n                                                        \n                                                \n                                                \n                                                        parseParamValuesArray\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                Name of Parameter within Class Colum\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns a list of objects based on parameters \ncontainedQuery(2000,SurveyData,organization,Puente)\n                                        \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    list of objects\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            countQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        countQuery(organization, parseModel: string, parseColumn: string, parseParamValue: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query/query.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organization\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parseModel\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parseColumn\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parseParamValue\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            exactlyOneQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        exactlyOneQuery(parseObject: string, parseColumn: string, parseParamValue: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query/query.service.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parseObject\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parseColumn\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parseParamValue\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            genericQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        genericQuery(parseObject: string, parseColumn: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query/query.service.ts:136\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        parseObject\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Name of Cloud Class\n\n                                                        \n                                                \n                                                \n                                                        parseColumn\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns a list of objects \ngenericQuery(SurveyData)\n                                        \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    list of objects\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hello\n                            \n                            \n                        \n                    \n                \n                \n                    \nhello()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query/query.service.ts:178\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Example :\n                                        \n                                            Returns a console.log of Hello\nhello()\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    console.log of hello\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listAllPatients\n                            \n                            \n                        \n                    \n                \n                \n                    \nlistAllPatients()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query/query.service.ts:189\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Example :\n                                        \n                                            Returns a list of all objects in SurveyData (PatientDemographicsClass)\nlistAllPatients()\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    list of objects\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listPatientsByOrganization\n                            \n                            \n                        \n                    \n                \n                \n                    \nlistPatientsByOrganization(organization)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/providers/query/query.service.ts:201\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        organization\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Name of Organization\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Returns a list of objects based on organization \nlistPatientsByOrganization(Puente)\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    list of objects\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ParseService } from '../parse/parse.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueryService {\n\n  constructor(private parse:ParseService) { \n    this.parse.parseInitialize();\n  }\n\n  /*\n\n  */\n  async countQuery(organization, parseModel:string,parseColumn: string, parseParamValue: any): Promise {\n    //This is Retrieving Results from Parse Server\n    let Parse = this.parse.parseEnvironment();\n\n    //Returns the resolve (the query) and if there's an error, rejects\n    //Returns array of objects\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        //Creates local object based on \"SurveyData\" Object in Parse-Server\n        const Model = Parse.Object.extend(parseModel);\n\n        //Queries the SurveyData class from Parse Server\n        let query = new Parse.Query(Model);\n\n        //You can limit the number of results by setting \"limit\"\n        query.limit(2000);\n\n        //Limiting Results based on a class\n        query.equalTo(parseColumn,parseParamValue);\n        //query.equalTo('surveyingUser',username);\n        query.equalTo('surveyingOrganization',organization);\n        \n        //query.notEqualTo(\"surveyingOrganization\", \"test\");\n        \n        //Limiting Results based on a class\n        //query.equalTo(parseColumn);\n\n        //I'm a hack\n        //query.equalTo('surveyingUser','candiany')\n\n        //Below searches what's in the surveyPoints array\n        query.count().then((surveyPoints) => {\n          resolve(surveyPoints);\n        }, (error) => {\n          reject(error);\n        });\n      }, 500);\n    });\n  }\n\n  public exactlyOneQuery(parseObject: string, parseColumn: string, parseParamValue: any): Promise{\n    //This is Retrieving Results from Parse Server\n    let Parse = this.parse.parseEnvironment();\n\n    //Returns the resolve (the query) and if there's an error, rejects\n    //Returns array of objects\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        //Creates local object based on parseObject in Parse-Server\n        const Objekt = Parse.Object.extend(parseObject);\n\n        //Queries the parseObject class from Parse Server\n        let query = new Parse.Query(Objekt);\n\n        //Limiting Results based on a class\n        query.equalTo(parseColumn,parseParamValue);\n        //query.containedIn(parseColumn,parseParamValuesArray);\n\n        //Below searches what's in the surveyPoints array\n        query.first().then((surveyPoints) => {\n          resolve(surveyPoints);\n        }, (error) => {\n          reject(error);\n          //console.log(error)\n        });\n      }, 500);\n    });\n\n  }\n\n  /**\n    * @example\n    * Returns a list of objects based on parameters \n    * containedQuery(2000,SurveyData,organization,Puente)\n    *\n    * @param {number} Limit  Number of Queries\n    * @param {string} parseObject  Name of Cloud Class\n    * @param {string} parseColumn  Name of Cloud Class Column \n    * @param {string} parseParamValuesArray Name of Parameter within Class Colum\n    * @returns list of objects\n  */\n  public containedQuery(limit: number=1000, parseObject: string, parseColumn: string, parseParamValuesArray: any): Promise {\n    //This is Retrieving Results from Parse Server\n    let Parse = this.parse.parseEnvironment();\n\n    //Returns the resolve (the query) and if there's an error, rejects\n    //Returns array of objects\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        //Creates local object based on parseObject in Parse-Server\n        const SurveyData = Parse.Object.extend(parseObject);\n\n        //Queries the parseObject class from Parse Server\n        let query = new Parse.Query(SurveyData);\n\n        //Limiting Results based on a class\n        //query.equalTo(parseColumn,parseParam);\n        query.containedIn(parseColumn,parseParamValuesArray);\n\n        //You can limit the number of results by setting \"limit\"\n        query.limit(limit);\n\n        //Below searches what's in the surveyPoints array\n        query.find().then((surveyPoints) => {\n          resolve(surveyPoints);\n        }, (error) => {\n          reject(error);\n        });\n      }, 500);\n    });\n  }\n\n  /**\n    * @example\n    * Returns a list of objects \n    * genericQuery(SurveyData)\n    *\n    * @param {string} parseObject  Name of Cloud Class\n    * @returns list of objects\n  */\n  public genericQuery(parseObject: string, parseColumn: string): Promise {\n    //This is Retrieving Results from Parse Server\n    let Parse = this.parse.parseEnvironment();\n\n    //Returns the resolve (the query) and if there's an error, rejects\n    //Returns array of objects\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        //Creates local object based on \"SurveyData\" Object in Parse-Server\n        const SurveyData = Parse.Object.extend(parseObject);\n\n        //Queries the SurveyData class from Parse Server\n        let query = new Parse.Query(SurveyData);\n\n        //You can limit the number of results by setting \"limit\"\n        query.limit(2000);\n        \n        //query.notEqualTo(\"surveyingOrganization\", \"test\");\n        \n        //Limiting Results based on a class\n        query.equalTo('surveyingOrganization',parseColumn);\n\n        //I'm a hack\n        //query.equalTo('surveyingUser',usersName);\n\n        //Below searches what's in the surveyPoints array\n        query.find().then((surveyPoints) => {\n          resolve(surveyPoints);\n        }, (error) => {\n          reject(error);\n        });\n      }, 500);\n    });\n  }\n\n  /**\n    * @example\n    * Returns a console.log of Hello\n    * hello()\n    *\n    * @returns console.log of hello\n  */\n  hello(){\n    return this.parse.runCloudFunction(\"hello\",null);\n  }\n\n  /**\n    * @example\n    * Returns a list of all objects in SurveyData (PatientDemographicsClass)\n    * listAllPatients()\n    *\n    * @returns list of objects\n  */\n  listAllPatients(){\n    return this.parse.runCloudFunction(\"retrievePatientRecordsAll\", null);\n  }\n\n  /**\n    * @example\n    * Returns a list of objects based on organization \n    * listPatientsByOrganization(Puente)\n    *\n    * @param {string} organization Name of Organization\n    * @returns list of objects\n  */\n  listPatientsByOrganization(organization){\n    return this.parse.runCloudFunction(\"retrievePatientRecordByOrgnization\", {\n      organization: organization\n    });\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignInComponent.html":{"url":"components/SignInComponent.html","title":"component - SignInComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignInComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/sign-in/sign-in.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-in\n            \n\n            \n                styleUrls\n                ./sign-in.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sign-in.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                doSignin\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authPvdr: AuthService, route: ActivatedRoute, router: Router, nav: NavbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/sign-in/sign-in.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authPvdr\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    NavbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            doSignin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doSignin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/sign-in/sign-in.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/sign-in/sign-in.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/sign-in/sign-in.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/sign-in/sign-in.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {Parse} from 'parse';\n\nimport { NavbarService } from '../../providers/navbar/navbar.service';\nimport { AuthService } from '../../providers/auth/auth.service';\n\n\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss']\n})\nexport class SignInComponent implements OnInit {\n  password: string = '';\n  username: string = '';\n\n  constructor(\n    private authPvdr: AuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private nav:NavbarService) { }\n\n  ngOnInit() {\n    this.nav.hide();\n  }\n  async doSignin(){\n    //this.authPvdr.signin(this.username, this.password)\n    //  .subscribe(\n    //    success => {\n    await Parse.User.logIn(this.username, this.password);\n    this.router.navigate(['/home']);\n    // },\n    //    error => {\n            //this.alertService.error(error);\n            //this.loading = false;\n    //    });\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n          \n              Login\n              Please login to proceed.\n              \n                  \n                      \n                  \n\n                  \n                      \n                          \n                              \n                          \n                      \n\n                      \n                          \n                              \n                          \n                      \n                      \n                        \n                            \n                            Remember me\n                        \n                      -->\n                      Login\n                  \n              \n              \n                  Sign Up &nbsp;·&nbsp;\n                  Forgot Password &nbsp;·&nbsp;\n                  Need Help?\n              -->\n          \n      \n  \n\n    \n\n    \n                \n                    ./sign-in.component.scss\n                \n                \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Login              Please login to proceed.                                                                                                                                                                                                                                                                                                                                                                                                                                                            Remember me                                              -->                      Login                                                                Sign Up  ·                   Forgot Password  ·                   Need Help?              -->                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeEnvComponent', 'selector': 'app-home-env'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MyAsideComponent', 'selector': 'app-my-aside'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignInComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SubmissionsComponent.html":{"url":"components/SubmissionsComponent.html","title":"component - SubmissionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SubmissionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/submissions/submissions.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-submissions\n            \n\n            \n                styleUrls\n                ./submissions.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./submissions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataList\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(query: QueryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/submissions/submissions.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                    QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyFilter(filterValue: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterValue\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataSource:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayedColumns:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['fname', 'lname', 'surveyingUser', 'createdAt']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paginator:     MatPaginator\n\n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sort:     MatSort\n\n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/submissions/submissions.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { QueryService} from '../../providers/query/query.service';\n\nimport { MatSort, MatPaginator, MatTableDataSource} from '@angular/material';\n\n@Component({\n  selector: 'app-submissions',\n  templateUrl: './submissions.component.html',\n  styleUrls: ['./submissions.component.scss']\n})\nexport class SubmissionsComponent implements OnInit {\n\n  dataSource;\n  dataList = [];\n  displayedColumns: string[] = ['fname', 'lname', 'surveyingUser', 'createdAt'];\n\n  /*\n    Pagination\n  */\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  /*\n    Sorting\n  */\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private query:QueryService) { \n    this.setup().then(()=>{\n      this.dataSource = new MatTableDataSource(this.dataList);\n      this.dataSource.paginator = this.paginator; \n      this.dataSource.sort = this.sort;\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  setup(){\n    return this.query.listAllPatients().then((results) => {\n      for (var i = 0; i \n    \n\n    \n        \n     \n      \n       \n      \n      \n      \n        \n          \n            Home\n            Dashboard\n            Submissions\n          \n        \n  \n        \n          \n            \n              Submissions\n            \n          \n          \n            \n              \n                March 8, 2017 - January 6, 2019\n              \n            \n          \n        \n        \n        \n\n            \n              \n            \n          \n            \n          \n              \n                 First Name \n                 {{user.fname}} \n              \n          \n              \n                 Last Name \n                 {{user.lname}} \n              \n          \n              \n                 Surveying User \n                 {{user.surveyingUser}} \n              \n          \n              \n                 Time \n                 {{user.createdAt}} \n              \n          \n              \n              \n            \n          \n            \n        \n      \n  \n    \n  \n\n    \n\n    \n                \n                    ./submissions.component.scss\n                \n                @import \"../../../theme.scss\";\n\n/* When the input is not focused */\nmat-form-field.mat-form-field {\n    background-color: $brand-secondary;\n    padding-bottom: 0%;\n    font-size: 16px;\n}\n\n  \n\n.submissions {\n    border-radius: 10px; /* 5px rounded corners */\n    //padding-top: 20px;\n    padding-right: 20px;\n    padding-bottom: 10px;\n    padding-left: 20px;\n    color: $brand-primary;\n    margin-top: 0%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n    transition: 0.3s;\n    \n}\n.submissions:hover {\n    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\n  }\n\ntable {\n    width: 100%;\n    \n}\n\n.mat-input-element{\n    color:$brand-primary;\n}\n.mat-form-field {\n    font-size: 14px;\n    width: 100%;\n    color: $brand-primary;\n}\n\n// main area\n.main{\n   // padding: 1em 2em 1em 1em;\n    a{\n      color: $brand-primary;\n    }\n}\n\nmain{\n  padding: 1em 2em 1em 1em;\n}\n\np{\n  color: $brand-primary;\n}\n\n.row{\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display:         flex;\n}\n.heading,.title{\n  text-align: center;\n  justify-content: center;\n  word-wrap: break-word;\n}\n\n.justify{\n  justify-content: center;\n}\n\n\n.chart1{\n  background: lighten($brand-secondary,0);\n}\n\n.chart2{\n  height: 450px;\n  background: lighten($brand-alternative-secondary,0);\n}\n\n.level-item{\n  margin:1%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                  Home            Dashboard            Submissions                                                                Submissions                                                                          March 8, 2017 - January 6, 2019                                                                                                                                                                 First Name                  {{user.fname}}                                                        Last Name                  {{user.lname}}                                                        Surveying User                  {{user.surveyingUser}}                                                        Time                  {{user.createdAt}}                                                                                                             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommunityAnalysisComponent', 'selector': 'app-communityAnalysis'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeEnvComponent', 'selector': 'app-home-env'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MyAsideComponent', 'selector': 'app-my-aside'},{'name': 'MyNavComponent', 'selector': 'my-nav'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'SubmissionsComponent', 'selector': 'app-submissions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SubmissionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                organization\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            organization\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organization:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/providers/auth/auth.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n//import 'rxjs/add/operator/map';\nimport { map } from 'rxjs/operators';\n\n\n// Parse\nimport { Parse } from 'parse';\n\n// Constants\nimport { environment } from '../../../environments/environment.prod';\n\nexport class User {\n  public id: string;\n  public name: string;\n  public email: string;\n  public organization: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private parseAppId: string = environment.parseAppId;\n  private parseServerUrl: string = environment.parseServerUrl;\n  private parseJavascriptKey: string = environment.parseJavascriptKey;\n\n  constructor() { \n    this.parseInitialize();\n    console.log('Initiated Auth');\n  }\n\n  public signin(username: string, password: string): Observable {\n    \n    return new Observable((observer) => {\n      //REFACTOR LATER\n      /*\n      let loader = this.loadCtrl.create({\n\n        content: 'Signing in...'\n      });\n\n      let alerter = this.alertCtrl.create({\n        title: 'Login Error',\n        subTitle: 'Invalid username and/or password',\n        buttons: ['Try Again']\n      });\n\n      loader.present(); */\n      async () => {\n        await Parse.User.logIn(username, password, {\n          success: function (user) {\n            // Do stuff after successful login, like a redirect.\n            console.log('User logged in successful with username: ' + user.get(\"username\"));\n            observer.next(true);\n            observer.complete();\n          },\n          error: function (user, error) {\n            // If the user inputs the email instead of the username\n            //console.log(error);\n            console.log(\"Trying to use email instead of Username\");\n            var userQuery = new Parse.Query(Parse.User);\n\n            userQuery.equalTo('email', username);\n            userQuery.first().then(function (success) {\n              var username = success.toJSON().username; \n              Parse.User.logIn(username, password, {\n                success: function (user) {\n                  // Do stuff after successful login, like a redirect.\n                  //loader.dismiss();\n                  console.log('User logged in successful with email: ' + user.get(\"email\"));\n                  observer.next(true);\n                  observer.complete();\n                },\n                error: function (user, error) {\n                  //loader.dismiss().then(()=>{\n                  //  alerter.present();\n                  //})\n                  //alerter.dismiss();\n                  console.log(error);\n                  observer.error(error);\n                  observer.complete();\n                }\n              });\n            }, function (error) {\n              //loader.dismiss().then(()=>{\n              //  alerter.present();\n              //})\n              //alerter.dismiss();\n              console.log(error);\n              observer.error(error);\n              observer.complete();\n            });\n            //loader.dismiss().then(()=>{\n            //  alerter.present();\n            //})\n            //alerter.dismiss();\n          }\n        });\n      }\n    });\n  }\n\n  public signup(username: string, password: string, email: string, organization: string): Observable {\n    return new Observable((observer) => {\n      var user = new Parse.User();\n      user.set('username', username);\n      user.set('password', password);\n      user.set('email', email);\n      user.set('organization', organization)\n\n      user.signUp(null, {\n        success: (user) => {\n          console.log('User created successful with name: ' + user.get(\"username\") + ' and email: ' + user.get(\"email\"));\n          observer.next(true);\n          observer.complete();\n        },\n        error: (user, error) => {\n          // Show the error message somewhere and let the user try again.\n          // It is likely that the user is trying to sign with a username or email already taken.\n          console.log(\"Error: \" + error.code + \" \" + error.message);\n          observer.error(error);\n          observer.complete();\n        }\n      });\n\n    });\n  }\n\n  public signout(): Observable {\n    return new Observable((observer) => {\n      Parse.User.logOut().then(() => observer.next(true));\n    });\n  }\n\n  public forgotPassword(email:string) {\n    return Parse.User.requestPasswordReset(email, {\n      success: function() {\n          console.log(\"Password reset request was sent successfully\");\n      },\n      error: function(error) {\n          console.log(\"The login failed with error: \" + error.code + \" \" + error.message);\n      }\n  });\n  }\n\n  public currentUser(): User {\n    let u = Parse.User.current();\n    if (u) {\n      var user = new User();\n      user.id = u.id;\n      user.name = u.get('username');\n      user.email = u.get('email');\n      user.organization = u.get('organization');\n      return user;\n    }\n    return null\n  }\n\n  public authenticated(): boolean {\n    return this.currentUser() !== null;\n  }\n\n  public parseInitialize() {\n    //Back4app\n    Parse.initialize(this.parseAppId,this.parseJavascriptKey);\n    \n    //Heroku\n    //Parse.initialize(this.parseAppId);\n    \n    //Server\n    Parse.serverURL = this.parseServerUrl;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/my-aside/my-aside.component.ts\n            \n            \n                component\n            \n            \n                MyAsideComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/my-nav/my-nav.component.ts\n            \n            \n                component\n            \n            \n                MyNavComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/pages/communityAnalysis/communityAnalysis.component.ts\n            \n            \n                component\n            \n            \n                CommunityAnalysisComponent\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/pages/first-page/first-page.component.ts\n            \n            \n                component\n            \n            \n                FirstPageComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/home-env/home-env.component.ts\n            \n            \n                component\n            \n            \n                HomeEnvComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.component.ts\n            \n            \n                variable\n            \n            \n                Chart\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/map/map.component.ts\n            \n            \n                interface\n            \n            \n                marker\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pages/map/map.component.ts\n            \n            \n                variable\n            \n            \n                L\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/sign-in/sign-in.component.ts\n            \n            \n                component\n            \n            \n                SignInComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pages/submissions/submissions.component.ts\n            \n            \n                component\n            \n            \n                SubmissionsComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/providers/auth/auth.service.ts\n            \n            \n                class\n            \n            \n                User\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/providers/auth/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/providers/data-export/data-export.service.ts\n            \n            \n                injectable\n            \n            \n                DataExportService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/providers/navbar/navbar.service.ts\n            \n            \n                injectable\n            \n            \n                NavbarService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/providers/parse/parse.service.ts\n            \n            \n                injectable\n            \n            \n                ParseService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/providers/processors/processors.service.ts\n            \n            \n                injectable\n            \n            \n                ProcessorsService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/providers/query-custom/query-custom.service.ts\n            \n            \n                injectable\n            \n            \n                QueryCustomService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/providers/query/query.service.ts\n            \n            \n                injectable\n            \n            \n                QueryService\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : ^1.0.0-beta.5\n        \n            @angular/animations : ^6.0.0\n        \n            @angular/cdk : ^6.0.0\n        \n            @angular/cli : ^6.2.5\n        \n            @angular/common : ^6.0.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/compiler-cli : ^6.1.10\n        \n            @angular/core : ^6.0.0\n        \n            @angular/forms : ^6.0.0\n        \n            @angular/http : ^6.0.0\n        \n            @angular/material : ^6.0.2\n        \n            @angular/platform-browser : ^6.0.0\n        \n            @angular/platform-browser-dynamic : ^6.0.0\n        \n            @angular/router : ^6.0.0\n        \n            bulma : ^0.7.2\n        \n            chart.js : ^2.7.3\n        \n            core-js : ^2.5.4\n        \n            express : ^4.16.4\n        \n            moment : ^2.23.0\n        \n            ng2-charts : ^1.6.0\n        \n            parse : ^2.1.0\n        \n            path : ^0.12.7\n        \n            rxjs : ^6.0.0\n        \n            typescript : ~2.7.2\n        \n            uglify-es : ^3.2.2\n        \n            underscore : ^1.9.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPuente Angular\nStack\n\n\nAbout\nThis web application is meant to be the web platform used to manage data collected on the ionic mobile application Puente Data Collection\nScreenshots\n \nAngular Framework\nAngular is a TypeScript-based open-source front-end web application platform led by the Angular Team at Google and by a community of individuals and corporations. Those powerful capabilities are brought to Angular because it provides mobile-friendly HTML, JS, and CSS components to developers.\nParse Server\nParse Server is an open source version of the Parse backend that can be deployed to any infrastructure that can run Node.js. Its repository on Github.\nBuild and Run\nInstall\ngit clone \ncd THIS_PROJ\nnpm installRun\nnpm run start:localBuild\nFor debug build\nnpm run buildThe build artifacts will be stored in the dist/ directory. \nFor production build\nnpm run build:productionCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nLook at the structure of the project in order to generate component in the correct location\nng generate directive|service|etc /providers/componentName/componentNameThis will create a folder for the component in the providers directory with the correct files inside that folder\nKnown Issues\n\nNeed to set environmental variables for local development/production \nNeed to set mongo migration for demo data\n\nContribution\n\nReport issues\nOpen pull request with improvements\nSpread the word\nReach out to me directly at \n\nDocumentation\nhttps://hopetambala.github.io/puente-angular-workbench/\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nThis project uses Material Design\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/marker.html":{"url":"interfaces/marker.html","title":"interface - marker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  marker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/map/map.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        draggable\n                                \n                                \n                                        label\n                                \n                                \n                                        lat\n                                \n                                \n                                        lng\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lng\n                                    \n                                \n                                \n                                    \n                                        lng:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { QueryCustomService } from '../../providers/query-custom/query-custom.service'\n\ndeclare let L;\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\n\n\nexport class MapComponent implements OnInit {\n\n  title: string = 'My first AGM project';\n  lat: number = 18.9130926;\n  lng: number = -70.7095201;\n\n  markers: marker[] = []\n\n  constructor(private query:QueryCustomService) { }\n\n  ngOnInit() {\n    this.create_all_markers()\n    \n  }\n\n  create_all_markers(){\n    this.query.retrieveAll_patientid_info_by_organization('Puente').then((results)=>{\n      for(let i=0;i\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommunityAnalysisComponent\n\nCommunityAnalysisComponent\n\nAppModule -->\n\nCommunityAnalysisComponent->AppModule\n\n\n\n\n\nFirstPageComponent\n\nFirstPageComponent\n\nAppModule -->\n\nFirstPageComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHomeEnvComponent\n\nHomeEnvComponent\n\nAppModule -->\n\nHomeEnvComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nMyAsideComponent\n\nMyAsideComponent\n\nAppModule -->\n\nMyAsideComponent->AppModule\n\n\n\n\n\nMyNavComponent\n\nMyNavComponent\n\nAppModule -->\n\nMyNavComponent->AppModule\n\n\n\n\n\nSignInComponent\n\nSignInComponent\n\nAppModule -->\n\nSignInComponent->AppModule\n\n\n\n\n\nSubmissionsComponent\n\nSubmissionsComponent\n\nAppModule -->\n\nSubmissionsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Chart   (src/.../home.component.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            L   (src/.../map.component.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/pages/home/home.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Chart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Chart:     \n\n                    \n                \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  parseAppId: 'vBdTHqQU31IyLW5uYRDIWb8Ew8zCZGBzMqChugjr',\n  parseJavascriptKey: 'jFWiqliNRHXiH72J9kiotL8m0EuSdry1yFIiYlad',\n  parseServerUrl: 'https://parseapi.back4app.com/'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  parseAppId: '',\n  parseJavascriptKey: '',\n  parseServerUrl: ''\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/pages/map/map.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            L\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        L:     \n\n                    \n                \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
